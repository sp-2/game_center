{"ast":null,"code":"import _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\n\nfunction SquareB(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction SquareF(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    style: props.styleSettings,\n    key: props.keyValue,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != undefined) {\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              }\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != undefined) {\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != undefined) {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true;\n\n        _this.setState({\n          board: board\n        }, function () {// console.log('in val ',this.state.board);\n          // console.log('in val ',this.state.puzzle);\n        });\n      } else {\n        board[i][j].value = undefined;\n        board[i][j].given = false;\n\n        _this.setState({\n          board: board\n        }, function () {// console.log('in val ',this.state.board);\n          // console.log('in val ',this.state.puzzle);\n        });\n      }\n    };\n\n    _this.state = {\n      puzzle: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      gameId: '',\n      level: '',\n      timeRBS: '',\n      timeNRBS: '',\n      timeRBSFlag: false,\n      timeNRBSFlag: false\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onSolveHandlerRBS\",\n    value: function onSolveHandlerRBS() {\n      var puzzle = this.deepCopy(this.state.board);\n      var board = this.deepCopy(puzzle);\n      var timeRBSFlag = true;\n      var a = performance.now();\n      this.solveSudokuRBS(0, 0, board);\n      var b = performance.now();\n      var timeRBS = (b - a).toFixed(2);\n      console.log('It took ' + (b - a) + ' ms.');\n      this.setState({\n        puzzle: puzzle,\n        board: board,\n        timeRBSFlag: timeRBSFlag,\n        timeRBS: timeRBS\n      }, function () {// console.log('in onPlayAgainHandler b',this.state.board);\n        // console.log('in onPlayAgainHandler p',this.state.puzzle);\n      });\n    }\n  }, {\n    key: \"onSolveHandlerNRBS\",\n    value: function onSolveHandlerNRBS() {\n      var timeNRBSFlag = true;\n      var puzzle = this.deepCopy(this.state.board);\n      var a = performance.now();\n      var board = this.getSolutionNRBS(puzzle);\n      var b = performance.now();\n      var timeNRBS = (b - a).toFixed(2);\n      console.log('It took ' + (b - a) + ' ms.');\n      this.setState({\n        board: board,\n        puzzle: puzzle,\n        timeNRBSFlag: timeNRBSFlag,\n        timeNRBS: timeNRBS\n      }, function () {// console.log('in onPlayAgainHandler b',this.state.board);\n        // console.log('in onPlayAgainHandler p',this.state.puzzle);\n      });\n    }\n  }, {\n    key: \"getSolutionNRBS\",\n    value: function getSolutionNRBS(puzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: puzzle[i][j].value,\n            pencilMark: []\n          };\n        }\n      }\n\n      var numbers = [];\n\n      for (var r = 0; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (puzzle[r][c].given == true) {\n            continue;\n          }\n\n          numbers = this.validPencilMarks(r, c, squares);\n\n          if (numbers.length != 0) {\n            var val = numbers.pop();\n            squares[r][c].value = val;\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n          } else {\n            while (r >= 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r < 0) {\n                break;\n              }\n\n              if (puzzle[r][c].given == true) {\n                continue;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                break;\n              } else {\n                squares[r][c].value = undefined;\n              }\n            }\n          }\n        }\n      } //console.log('st',squares);\n\n\n      return squares;\n    }\n  }, {\n    key: \"solveSudokuRBS\",\n    value: function solveSudokuRBS(row, col, board) {\n      if (row >= 9) {\n        return true;\n      }\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          return true;\n        }\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0;\n\n      for (var i = 0; i < pencilMarks.length; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n\n        if (this.solveSudokuRBS(r, c, board)) {\n          return true;\n        }\n\n        board[row][col].value = undefined;\n        board[row][col].given = false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"validPencilMarks\",\n    value: function validPencilMarks(row, col, board) {\n      var pM = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      pM = this.checkCell(row, col, pM, board);\n      pM = this.checkRow(row, col, pM, board);\n      pM = this.checkCol(row, col, pM, board);\n      return pM;\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                break;\n\n              default:\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"onResetHandler\",\n    value: function onResetHandler() {\n      var board = this.deepCopy(this.state.puzzle);\n      var timeRBSFlag = false;\n      var timeNRBSFlag = false;\n      this.setState({\n        board: board,\n        timeRBSFlag: timeRBSFlag,\n        timeNRBSFlag: timeNRBSFlag\n      }, function () {//console.log('in onResetHandler',this.state.board);\n      });\n    }\n  }, {\n    key: \"onSaveStatsHandler\",\n    value: function onSaveStatsHandler() {\n      var stat = {\n        gameId: this.state.gameId,\n        level: this.state.level,\n        timeRBS: this.state.timeRBS,\n        timeNRBS: this.state.timeNRBS\n      };\n      axios.post('http://localhost:8000/stats', stat).then(function (res) {\n        return console.log(res.data);\n      });\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this3 = this;\n\n      return React.createElement(SquareF, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        styleSettings: (this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n          fontWeight: 'bold'\n        } : {\n          fontWeight: 'normal'\n        },\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this3.valChangeHandler(i, j, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellInput\",\n    value: function displayCellInput(val) {\n      return React.createElement(\"input\", {\n        size: \"8\",\n        type: \"text\",\n        placeholder: \"\",\n        value: val,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellInputId\",\n    value: function displayCellInputId(val) {\n      var _this4 = this;\n\n      return React.createElement(\"input\", {\n        size: \"8\",\n        type: \"text\",\n        placeholder: \"\",\n        value: val,\n        keyValue: this.state.gameId,\n        defaultValue: this.state.gameId,\n        onChange: function onChange(event) {\n          return _this4.setState({\n            gameId: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellInputSelect\",\n    value: function displayCellInputSelect(val) {\n      var _this5 = this;\n\n      return React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Level:\", React.createElement(\"select\", {\n        value: val,\n        onChange: function onChange(event) {\n          return _this5.setState({\n            level: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"unknown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"unknown\"), React.createElement(\"option\", {\n        value: \"easy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, \"easy\"), React.createElement(\"option\", {\n        value: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"medium\"), React.createElement(\"option\", {\n        value: \"hard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"hard\"), React.createElement(\"option\", {\n        value: \"evil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"hard\"), React.createElement(\"option\", {\n        value: \"diabolical\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"hard\")));\n    }\n  }, {\n    key: \"displayResetCell\",\n    value: function displayResetCell() {\n      var _this6 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this6.onResetHandler();\n        },\n        value: \"Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySaveStatsCell\",\n    value: function displaySaveStatsCell() {\n      var _this7 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"50px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this7.onSaveStatsHandler();\n        },\n        value: \"Save Stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayClearCell\",\n    value: function displayClearCell() {\n      var _this8 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          var board = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n          var puzzle = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n\n          _this8.setState({\n            board: board,\n            puzzle: puzzle\n          });\n        },\n        value: \"Clear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellRBS\",\n    value: function displaySolveCellRBS() {\n      var _this9 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this9.onSolveHandlerRBS();\n        },\n        value: \"Solve Using Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellNRBS\",\n    value: function displaySolveCellNRBS() {\n      var _this10 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this10.onSolveHandlerNRBS();\n        },\n        value: \"Solve Using Non-Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2), this.displayCellForm(0, 3), this.displayCellForm(0, 4), this.displayCellForm(0, 5), this.displayCellForm(0, 6), this.displayCellForm(0, 7), this.displayCellForm(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2), this.displayCellForm(1, 3), this.displayCellForm(1, 4), this.displayCellForm(1, 5), this.displayCellForm(1, 6), this.displayCellForm(1, 7), this.displayCellForm(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, this.displayCellForm(2, 0), this.displayCellForm(2, 1), this.displayCellForm(2, 2), this.displayCellForm(2, 3), this.displayCellForm(2, 4), this.displayCellForm(2, 5), this.displayCellForm(2, 6), this.displayCellForm(2, 7), this.displayCellForm(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, this.displayCellForm(3, 0), this.displayCellForm(3, 1), this.displayCellForm(3, 2), this.displayCellForm(3, 3), this.displayCellForm(3, 4), this.displayCellForm(3, 5), this.displayCellForm(3, 6), this.displayCellForm(3, 7), this.displayCellForm(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, this.displayCellForm(4, 0), this.displayCellForm(4, 1), this.displayCellForm(4, 2), this.displayCellForm(4, 3), this.displayCellForm(4, 4), this.displayCellForm(4, 5), this.displayCellForm(4, 6), this.displayCellForm(4, 7), this.displayCellForm(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, this.displayCellForm(5, 0), this.displayCellForm(5, 1), this.displayCellForm(5, 2), this.displayCellForm(5, 3), this.displayCellForm(5, 4), this.displayCellForm(5, 5), this.displayCellForm(5, 6), this.displayCellForm(5, 7), this.displayCellForm(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, this.displayCellForm(6, 0), this.displayCellForm(6, 1), this.displayCellForm(6, 2), this.displayCellForm(6, 3), this.displayCellForm(6, 4), this.displayCellForm(6, 5), this.displayCellForm(6, 6), this.displayCellForm(6, 7), this.displayCellForm(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, this.displayCellForm(7, 0), this.displayCellForm(7, 1), this.displayCellForm(7, 2), this.displayCellForm(7, 3), this.displayCellForm(7, 4), this.displayCellForm(7, 5), this.displayCellForm(7, 6), this.displayCellForm(7, 7), this.displayCellForm(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, this.displayCellForm(8, 0), this.displayCellForm(8, 1), this.displayCellForm(8, 2), this.displayCellForm(8, 3), this.displayCellForm(8, 4), this.displayCellForm(8, 5), this.displayCellForm(8, 6), this.displayCellForm(8, 7), this.displayCellForm(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, this.displaySolveCellRBS(), \" \", React.createElement(\"span\", {\n        style: this.state.timeRBSFlag ? {\n          display: 'inline'\n        } : {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \" \", this.displayCellInput(this.state.timeRBS), \" ms \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.displaySolveCellNRBS(), \" \", React.createElement(\"span\", {\n        style: this.state.timeNRBSFlag ? {\n          display: 'inline'\n        } : {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }, \" \", this.displayCellInput(this.state.timeNRBS), \" ms \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"Game ID: \", this.displayCellInputId(this.state.gameId), \"  \", this.displayCellInputSelect(this.state.level), this.displaySaveStatsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, this.displayResetCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, this.displayClearCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar SudokuPuzzleSolver =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SudokuPuzzleSolver, _React$Component2);\n\n  function SudokuPuzzleSolver() {\n    _classCallCheck(this, SudokuPuzzleSolver);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SudokuPuzzleSolver).apply(this, arguments));\n  }\n\n  _createClass(SudokuPuzzleSolver, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, \" Sudoku Solver\"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SudokuPuzzleSolver;\n}(React.Component);\n\nexport default SudokuPuzzleSolver;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js"],"names":["React","Component","axios","SquareB","props","style","onClick","value","SquareF","readOnlyVal","styleSettings","keyValue","defaultValue","onChange","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","row","col","undefined","indexOf","splice","checkRow","i","checkCol","valChangeHandler","j","event","board","deepCopy","state","target","Number","given","setState","puzzle","Array","fill","map","gameId","level","timeRBS","timeNRBS","timeRBSFlag","timeNRBSFlag","a","performance","now","solveSudokuRBS","b","toFixed","console","log","getSolutionNRBS","nrows","ncols","pencilMark","validPencilMarks","length","val","pop","rn","push","pencilMarks","pM","obj","rv","toString","call","o","Object","keys","reduce","prev","key","index","stat","post","then","res","data","fontWeight","backgroundColor","color","height","width","onResetHandler","onSaveStatsHandler","onSolveHandlerRBS","onSolveHandlerNRBS","displayCellForm","displaySolveCellRBS","display","displayCellInput","displaySolveCellNRBS","displayCellInputId","displayCellInputSelect","displaySaveStatsCell","displayResetCell","displayClearCell","SudokuPuzzleSolver"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SACE;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAED,KAAK,CAACE,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,KAAK,CAACG,KALT,CADF;AASD;;AAED,SAASC,OAAT,CAAiBJ,KAAjB,EAAwB;AACpB,SACI;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAC,GAA1B;AAA8B,IAAA,QAAQ,EAAEA,KAAK,CAACK,WAA9C;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACM,aAHf;AAIE,IAAA,GAAG,EAAEN,KAAK,CAACO,QAJb;AAKE,IAAA,YAAY,EAAEP,KAAK,CAACQ,YALtB;AAME,IAAA,QAAQ,EAAER,KAAK,CAACS,QANlB;AAOE,IAAA,OAAO,EAAET,KAAK,CAACE,OAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAWH;;IAEGQ,K;;;;;AACJ,iBAAYV,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAoLnBW,SApLmB,GAoLP,UAACC,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AAEnC,UAAIC,QAAQ,GAAG,MAAKC,aAAL,CAAmBL,CAAnB,CAAf;;AACA,UAAIM,QAAQ,GAAG,MAAKD,aAAL,CAAmBJ,CAAnB,CAAf;;AAEA,WAAI,IAAIM,GAAG,GAACH,QAAZ,EAAsBG,GAAG,IAAEH,QAAQ,GAAC,CAApC,EAAuCG,GAAG,EAA1C,EAA6C;AAC3C,aAAI,IAAIC,GAAG,GAACF,QAAZ,EAAsBE,GAAG,IAAEF,QAAQ,GAAC,CAApC,EAAuCE,GAAG,EAA1C,EAA6C;AAC3C,cAAG,EAAED,GAAG,IAAIP,CAAP,IAAYQ,GAAG,IAAIP,CAArB,CAAH,EAA2B;AACzB,gBAAGE,OAAO,CAACI,GAAD,CAAP,CAAaC,GAAb,EAAkBjB,KAAlB,IAA2BkB,SAA9B,EAAwC;AACtC,kBAAGP,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACI,GAAD,CAAP,CAAaC,GAAb,EAAkBjB,KAAlC,KAA0C,CAAC,CAA9C,EAAgD;AAC/CW,gBAAAA,OAAO,CAACS,MAAR,CAAeT,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACI,GAAD,CAAP,CAAaC,GAAb,EAAkBjB,KAAlC,CAAf,EAAwD,CAAxD;AACA;AACF;AACF;AACF;AACF;;AACD,aAAOW,OAAP;AACD,KArMkB;;AAAA,UAuMnBU,QAvMmB,GAuMR,UAACZ,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AAClC,WAAI,IAAIU,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;AACpB,YAAGA,CAAC,IAAIZ,CAAR,EAAU;AACR,cAAGE,OAAO,CAACH,CAAD,CAAP,CAAWa,CAAX,EAActB,KAAd,IAAuBkB,SAA1B,EAAoC;AAClC,gBAAGP,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACH,CAAD,CAAP,CAAWa,CAAX,EAActB,KAA9B,KAAsC,CAAC,CAA1C,EAA4C;AAC3CW,cAAAA,OAAO,CAACS,MAAR,CAAeT,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACH,CAAD,CAAP,CAAWa,CAAX,EAActB,KAA9B,CAAf,EAAoD,CAApD;AACA;AACF;AACF;AACF;;AACC,aAAOW,OAAP;AACH,KAlNkB;;AAAA,UAoNnBY,QApNmB,GAoNR,UAACd,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AAClC,WAAI,IAAIU,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;AACpB,YAAGA,CAAC,IAAIb,CAAR,EAAU;AACR,cAAGG,OAAO,CAACU,CAAD,CAAP,CAAWZ,CAAX,EAAcV,KAAd,IAAuBkB,SAA1B,EAAoC;AAClC,gBAAGP,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACU,CAAD,CAAP,CAAWZ,CAAX,EAAcV,KAA9B,KAAsC,CAAC,CAA1C,EAA4C;AAC3CW,cAAAA,OAAO,CAACS,MAAR,CAAeT,OAAO,CAACQ,OAAR,CAAgBP,OAAO,CAACU,CAAD,CAAP,CAAWZ,CAAX,EAAcV,KAA9B,CAAf,EAAoD,CAApD;AACA;AACF;AACF;AACF;;AACD,aAAOW,OAAP;AACD,KA/NkB;;AAAA,UAiOnBa,gBAjOmB,GAiOA,UAACF,CAAD,EAAGG,CAAH,EAAKC,KAAL,EAAe;AAChC,UAAMC,KAAK,GAAI,MAAKC,QAAL,CAAc,MAAKC,KAAL,CAAWF,KAAzB,CAAf;;AAEA,UAAGD,KAAK,CAACI,MAAN,CAAa9B,KAAhB,EAAsB;AAClB2B,QAAAA,KAAK,CAACL,CAAD,CAAL,CAASG,CAAT,EAAYzB,KAAZ,GAAoB+B,MAAM,CAACL,KAAK,CAACI,MAAN,CAAa9B,KAAd,CAA1B;AACA2B,QAAAA,KAAK,CAACL,CAAD,CAAL,CAASG,CAAT,EAAYO,KAAZ,GAAoB,IAApB;;AAEA,cAAKC,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAEA;AAAR,SAAd,EAA8B,YAAY,CACxC;AACA;AACD,SAHD;AAIH,OARD,MAQO;AACLA,QAAAA,KAAK,CAACL,CAAD,CAAL,CAASG,CAAT,EAAYzB,KAAZ,GAAoBkB,SAApB;AACAS,QAAAA,KAAK,CAACL,CAAD,CAAL,CAASG,CAAT,EAAYO,KAAZ,GAAoB,KAApB;;AACA,cAAKC,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAEA;AAAR,SAAd,EAA8B,YAAY,CACxC;AACA;AACD,SAHD;AAID;AACF,KApPkB;;AAEf,UAAKE,KAAL,GAAa;AACbK,MAAAA,MAAM,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,GAAgBC,GAAhB,CAAoB;AAAA,eAAM,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB;AAACpC,UAAAA,KAAK,EAACkB,SAAP;AAAiBc,UAAAA,KAAK,EAAC;AAAvB,SAAlB,CAAN;AAAA,OAApB,CADK;AAEbL,MAAAA,KAAK,EAAEQ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,GAAgBC,GAAhB,CAAoB;AAAA,eAAM,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB;AAACpC,UAAAA,KAAK,EAACkB,SAAP;AAAiBc,UAAAA,KAAK,EAAC;AAAvB,SAAlB,CAAN;AAAA,OAApB,CAFM;AAGbM,MAAAA,MAAM,EAAC,EAHM;AAGFC,MAAAA,KAAK,EAAC,EAHJ;AAGQC,MAAAA,OAAO,EAAC,EAHhB;AAGoBC,MAAAA,QAAQ,EAAC,EAH7B;AAIbC,MAAAA,WAAW,EAAC,KAJC;AAIMC,MAAAA,YAAY,EAAC;AAJnB,KAAb;AAFe;AAQlB;;;;wCAEmB;AAClB,UAAIT,MAAM,GAAG,KAAKN,QAAL,CAAc,KAAKC,KAAL,CAAWF,KAAzB,CAAb;AACA,UAAIA,KAAK,GAAG,KAAKC,QAAL,CAAcM,MAAd,CAAZ;AACA,UAAIQ,WAAW,GAAG,IAAlB;AACA,UAAIE,CAAC,GAAGC,WAAW,CAACC,GAAZ,EAAR;AACA,WAAKC,cAAL,CAAoB,CAApB,EAAsB,CAAtB,EAAwBpB,KAAxB;AACA,UAAIqB,CAAC,GAAGH,WAAW,CAACC,GAAZ,EAAR;AACA,UAAIN,OAAO,GAAG,CAACQ,CAAC,GAACJ,CAAH,EAAMK,OAAN,CAAc,CAAd,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcH,CAAC,GAAGJ,CAAlB,IAAuB,MAAnC;AACA,WAAKX,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEA,MAAT;AAAiBP,QAAAA,KAAK,EAAEA,KAAxB;AAA+Be,QAAAA,WAAW,EAAEA,WAA5C;AAAyDF,QAAAA,OAAO,EAAEA;AAAlE,OAAd,EAA0F,YAAY,CACpG;AACA;AACD,OAHD;AAID;;;yCAEoB;AACnB,UAAIG,YAAY,GAAG,IAAnB;AACA,UAAIT,MAAM,GAAG,KAAKN,QAAL,CAAc,KAAKC,KAAL,CAAWF,KAAzB,CAAb;AACA,UAAIiB,CAAC,GAAGC,WAAW,CAACC,GAAZ,EAAR;AACA,UAAInB,KAAK,GAAG,KAAKyB,eAAL,CAAqBlB,MAArB,CAAZ;AACA,UAAIc,CAAC,GAAGH,WAAW,CAACC,GAAZ,EAAR;AACA,UAAIL,QAAQ,GAAG,CAACO,CAAC,GAACJ,CAAH,EAAMK,OAAN,CAAc,CAAd,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcH,CAAC,GAAGJ,CAAlB,IAAuB,MAAnC;AACA,WAAKX,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEA,KAAR;AAAeO,QAAAA,MAAM,EAAEA,MAAvB;AAA+BS,QAAAA,YAAY,EAAEA,YAA7C;AAA2DF,QAAAA,QAAQ,EAAEA;AAArE,OAAd,EAA8F,YAAY,CACxG;AACA;AACD,OAHD;AAID;;;oCAEeP,M,EAAO;AACrB,UAAImB,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAI1C,OAAO,GAAE,IAAIuB,KAAJ,CAAUkB,KAAV,CAAb;;AAEA,WAAK,IAAI/B,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC+B,KAAf,EAAqB/B,CAAC,EAAtB,EAA0B;AACxBV,QAAAA,OAAO,CAACU,CAAD,CAAP,GAAW,IAAIa,KAAJ,CAAUmB,KAAV,CAAX;AACD;;AAED,WAAK,IAAIhC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC+B,KAAf,EAAqB/B,CAAC,EAAtB,EAA0B;AACvB,aAAK,IAAIG,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC4B,KAAf,EAAqB5B,CAAC,EAAtB,EAA0B;AACxBb,UAAAA,OAAO,CAACU,CAAD,CAAP,CAAWG,CAAX,IAAgB;AAACzB,YAAAA,KAAK,EAACkC,MAAM,CAACZ,CAAD,CAAN,CAAUG,CAAV,EAAazB,KAApB;AAA0BuD,YAAAA,UAAU,EAAC;AAArC,WAAhB;AACD;AACH;;AAED,UAAI5C,OAAO,GAAG,EAAd;;AAEA,WAAI,IAAIF,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC4C,KAAf,EAAsB5C,CAAC,EAAvB,EAA0B;AACxB,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC4C,KAAf,EAAsB5C,CAAC,EAAvB,EAA0B;AACtB,cAAGwB,MAAM,CAACzB,CAAD,CAAN,CAAUC,CAAV,EAAasB,KAAb,IAAsB,IAAzB,EAA8B;AAC5B;AACD;;AAEDrB,UAAAA,OAAO,GAAG,KAAK6C,gBAAL,CAAsB/C,CAAtB,EAAwBC,CAAxB,EAA0BE,OAA1B,CAAV;;AAEA,cAAGD,OAAO,CAAC8C,MAAR,IAAgB,CAAnB,EAAqB;AACjB,gBAAIC,GAAG,GAAG/C,OAAO,CAACgD,GAAR,EAAV;AACA/C,YAAAA,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAcV,KAAd,GAAsB0D,GAAtB;;AACA,iBAAI,IAAIE,EAAE,GAAC,CAAX,EAAcA,EAAE,GAACjD,OAAO,CAAC8C,MAAzB,EAAiCG,EAAE,EAAnC,EAAsC;AACpChD,cAAAA,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAc6C,UAAd,CAAyBM,IAAzB,CAA8BlD,OAAO,CAACiD,EAAD,CAArC;AACD;AAEJ,WAPD,MAOO;AACH,mBAAMnD,CAAC,IAAE,CAAT,EAAW;AACTC,cAAAA,CAAC;;AACD,kBAAGA,CAAC,GAAC,CAAL,EAAO;AAACD,gBAAAA,CAAC;AAAGC,gBAAAA,CAAC,GAAC4C,KAAK,GAAC,CAAR;AAAU;;AACtB,kBAAG7C,CAAC,GAAC,CAAL,EAAO;AAAC;AAAO;;AAEf,kBAAGyB,MAAM,CAACzB,CAAD,CAAN,CAAUC,CAAV,EAAasB,KAAb,IAAsB,IAAzB,EAA8B;AAC5B;AACD;;AAED,kBAAGpB,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAc6C,UAAd,CAAyBE,MAAzB,IAAiC,CAApC,EAAsC;AACpC7C,gBAAAA,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAcV,KAAd,GAAsBY,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAc6C,UAAd,CAAyBI,GAAzB,EAAtB;AACA;AACD,eAHD,MAGO;AACL/C,gBAAAA,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,EAAcV,KAAd,GAAsBkB,SAAtB;AACD;AACF;AACJ;AACJ;AACF,OAnDoB,CAoDrB;;;AACA,aAAON,OAAP;AACD;;;mCAIcI,G,EAAKC,G,EAAKU,K,EAAM;AAC7B,UAAGX,GAAG,IAAE,CAAR,EAAU;AAAC,eAAO,IAAP;AAAa;;AAExB,aAAMW,KAAK,CAACX,GAAD,CAAL,CAAWC,GAAX,EAAgBe,KAAhB,IAAyB,IAA/B,EAAoC;AAClCf,QAAAA,GAAG,GAAGA,GAAG,GAAC,CAAV;AACAD,QAAAA,GAAG,GAAIC,GAAG,IAAE,CAAN,GAASD,GAAT,GAAaA,GAAG,GAAC,CAAvB;AACAC,QAAAA,GAAG,GAAIA,GAAG,IAAE,CAAN,GAASA,GAAT,GAAa,CAAnB;;AACA,YAAGD,GAAG,IAAE,CAAR,EAAU;AAAC,iBAAO,IAAP;AAAa;AACzB;;AAED,UAAI8C,WAAW,GAAG,KAAKN,gBAAL,CAAsBxC,GAAtB,EAA0BC,GAA1B,EAA8BU,KAA9B,CAAlB;AAEA,UAAIjB,CAAC,GAAGO,GAAG,GAAC,CAAZ;AACA,UAAIR,CAAC,GAAIC,CAAC,IAAE,CAAJ,GAAOM,GAAP,GAAWA,GAAG,GAAC,CAAvB;AACAN,MAAAA,CAAC,GAAIA,CAAC,IAAE,CAAJ,GAAOA,CAAP,GAAW,CAAf;;AAEA,WAAI,IAAIY,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACwC,WAAW,CAACL,MAA3B,EAAmCnC,CAAC,EAApC,EAAuC;AACrCK,QAAAA,KAAK,CAACX,GAAD,CAAL,CAAWC,GAAX,EAAgBjB,KAAhB,GAAwB8D,WAAW,CAACxC,CAAD,CAAnC;AACAK,QAAAA,KAAK,CAACX,GAAD,CAAL,CAAWC,GAAX,EAAgBe,KAAhB,GAAwB,IAAxB;;AACA,YAAG,KAAKe,cAAL,CAAoBtC,CAApB,EAAsBC,CAAtB,EAAwBiB,KAAxB,CAAH,EAAkC;AAAC,iBAAO,IAAP;AAAa;;AAChDA,QAAAA,KAAK,CAACX,GAAD,CAAL,CAAWC,GAAX,EAAgBjB,KAAhB,GAAwBkB,SAAxB;AACAS,QAAAA,KAAK,CAACX,GAAD,CAAL,CAAWC,GAAX,EAAgBe,KAAhB,GAAwB,KAAxB;AACD;;AAED,aAAO,KAAP;AACD;;;qCAEgBhB,G,EAAIC,G,EAAIU,K,EAAM;AAC7B,UAAIoC,EAAE,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAT;AACAA,MAAAA,EAAE,GAAG,KAAKvD,SAAL,CAAeQ,GAAf,EAAmBC,GAAnB,EAAuB8C,EAAvB,EAA0BpC,KAA1B,CAAL;AACAoC,MAAAA,EAAE,GAAG,KAAK1C,QAAL,CAAcL,GAAd,EAAkBC,GAAlB,EAAsB8C,EAAtB,EAAyBpC,KAAzB,CAAL;AACAoC,MAAAA,EAAE,GAAG,KAAKxC,QAAL,CAAcP,GAAd,EAAkBC,GAAlB,EAAsB8C,EAAtB,EAAyBpC,KAAzB,CAAL;AACA,aAAOoC,EAAP;AACD;;;6BAEQC,G,EAAK;AAAA;;AACV,UAAIC,EAAJ;;AAEA,cAAQ,OAAOD,GAAf;AACI,aAAK,QAAL;AACI,cAAIA,GAAG,KAAK,IAAZ,EAAkB;AACdC,YAAAA,EAAE,GAAG,IAAL;AACH,WAFD,MAEO;AACH,oBAAQC,QAAQ,CAACC,IAAT,CAAcH,GAAd,CAAR;AACI,mBAAK,gBAAL;AACIC,gBAAAA,EAAE,GAAGD,GAAG,CAAC3B,GAAJ,CAAQ,UAAA+B,CAAC;AAAA,yBAAI,MAAI,CAACxC,QAAL,CAAcwC,CAAd,CAAJ;AAAA,iBAAT,CAAL;AACA;;AACJ;AACIH,gBAAAA,EAAE,GAAGI,MAAM,CAACC,IAAP,CAAYN,GAAZ,EAAiBO,MAAjB,CAAwB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACxCD,kBAAAA,IAAI,CAACC,GAAD,CAAJ,GAAY,MAAI,CAAC7C,QAAL,CAAcoC,GAAG,CAACS,GAAD,CAAjB,CAAZ;AACA,yBAAOD,IAAP;AACH,iBAHI,EAGF,EAHE,CAAL;AAIA;AATR;AAWH;;AACD;;AACJ;AACIP,UAAAA,EAAE,GAAGD,GAAL;AACA;AApBR;;AAsBA,aAAOC,EAAP;AACH;;;kCAEaS,K,EAAM;AAClB,cAAOA,KAAP;AACI,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ;AACI,iBAAO,CAAP;AAdR;AAgBD;;;qCAqEe;AACd,UAAK/C,KAAK,GAAG,KAAKC,QAAL,CAAc,KAAKC,KAAL,CAAWK,MAAzB,CAAb;AACA,UAAIQ,WAAW,GAAG,KAAlB;AACA,UAAIC,YAAY,GAAG,KAAnB;AACA,WAAKV,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEA,KAAR;AAAee,QAAAA,WAAW,EAAEA,WAA5B;AAAyCC,QAAAA,YAAY,EAAEA;AAAvD,OAAd,EAAoF,YAAY,CAC9F;AACD,OAFD;AAGD;;;yCAEmB;AAClB,UAAMgC,IAAI,GAAG;AACXrC,QAAAA,MAAM,EAAC,KAAKT,KAAL,CAAWS,MADP;AAEXC,QAAAA,KAAK,EAAC,KAAKV,KAAL,CAAWU,KAFN;AAGXC,QAAAA,OAAO,EAAC,KAAKX,KAAL,CAAWW,OAHR;AAIXC,QAAAA,QAAQ,EAAC,KAAKZ,KAAL,CAAWY;AAJT,OAAb;AAMA9C,MAAAA,KAAK,CAACiF,IAAN,CAAW,6BAAX,EAA0CD,IAA1C,EACKE,IADL,CACU,UAAAC,GAAG;AAAA,eAAI5B,OAAO,CAACC,GAAR,CAAY2B,GAAG,CAACC,IAAhB,CAAJ;AAAA,OADb;AAED;;;oCAEezD,C,EAAEG,C,EAAG;AAAA;;AACnB,aACE,oBAAC,OAAD;AACE,QAAA,WAAW,EAAE,KAAKI,KAAL,CAAWK,MAAX,CAAkBZ,CAAlB,EAAqBG,CAArB,IAAwB,KAAKI,KAAL,CAAWK,MAAX,CAAkBZ,CAAlB,EAAqBG,CAArB,EAAwBO,KAAhD,GAAsD,KADrE;AAEE,QAAA,aAAa,EAAG,CAAC,KAAKH,KAAL,CAAWK,MAAX,CAAkBZ,CAAlB,EAAqBG,CAArB,IAAwB,KAAKI,KAAL,CAAWK,MAAX,CAAkBZ,CAAlB,EAAqBG,CAArB,EAAwBO,KAAhD,GAAsD,KAAvD,IAAgE;AAACgD,UAAAA,UAAU,EAAE;AAAb,SAAhE,GAAuF;AAACA,UAAAA,UAAU,EAAE;AAAb,SAFzG;AAGE,QAAA,QAAQ,EAAE,KAAKnD,KAAL,CAAWF,KAAX,CAAiBL,CAAjB,EAAoBG,CAApB,IAAuB,KAAKI,KAAL,CAAWF,KAAX,CAAiBL,CAAjB,EAAoBG,CAApB,EAAuBzB,KAAvB,GAA6B,GAA7B,GAAiCsB,CAAjC,GAAmC,GAAnC,GAAuC,GAAvC,GAA2CG,CAA3C,GAA6C,GAApE,GAAwEP,SAHpF;AAIE,QAAA,YAAY,EAAE,KAAKW,KAAL,CAAWF,KAAX,CAAiBL,CAAjB,EAAoBG,CAApB,IAAuB,KAAKI,KAAL,CAAWF,KAAX,CAAiBL,CAAjB,EAAoBG,CAApB,EAAuBzB,KAA9C,GAAoD,EAJpE;AAKE,QAAA,QAAQ,EAAE,kBAAC0B,KAAD;AAAA,iBAAW,MAAI,CAACF,gBAAL,CAAsBF,CAAtB,EAAwBG,CAAxB,EAA0BC,KAA1B,CAAX;AAAA,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;qCACgBgC,G,EAAK;AACpB,aACI;AAAO,QAAA,IAAI,EAAC,GAAZ;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,EAFd;AAGE,QAAA,KAAK,EAAEA,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOD;;;uCAEkBA,G,EAAK;AAAA;;AACtB,aACI;AAAO,QAAA,IAAI,EAAC,GAAZ;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,EAFd;AAGE,QAAA,KAAK,EAAEA,GAHT;AAIE,QAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWS,MAJvB;AAKE,QAAA,YAAY,EAAE,KAAKT,KAAL,CAAWS,MAL3B;AAME,QAAA,QAAQ,EAAE,kBAACZ,KAAD;AAAA,iBAAS,MAAI,CAACO,QAAL,CAAc;AAACK,YAAAA,MAAM,EAAEZ,KAAK,CAACI,MAAN,CAAa9B;AAAtB,WAAd,CAAT;AAAA,SANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAUD;;;2CAEsB0D,G,EAAK;AAAA;;AAC1B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEI;AAAQ,QAAA,KAAK,EAAEA,GAAf;AAAoB,QAAA,QAAQ,EAAE,kBAAChC,KAAD;AAAA,iBAAS,MAAI,CAACO,QAAL,CAAc;AAACM,YAAAA,KAAK,EAAEb,KAAK,CAACI,MAAN,CAAa9B;AAArB,WAAd,CAAT;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,EAME;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CAFJ,CADF;AAaD;;;uCAEkB;AAAA;;AACjB,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAACiF,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;2CAEsB;AAAA;;AACrB,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAACJ,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,kBAAL,EAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAC,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;uCAEgB;AAAA;;AACjB,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAACL,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE,mBAAM;AAAC,cAAIzD,KAAK,GAAGQ,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,GAAgBC,GAAhB,CAAoB;AAAA,mBAAM,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB;AAACpC,cAAAA,KAAK,EAACkB,SAAP;AAAiBc,cAAAA,KAAK,EAAC;AAAvB,aAAlB,CAAN;AAAA,WAApB,CAAZ;AAChB,cAAIE,MAAM,GAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,GAAgBC,GAAhB,CAAoB;AAAA,mBAAM,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB;AAACpC,cAAAA,KAAK,EAACkB,SAAP;AAAiBc,cAAAA,KAAK,EAAC;AAAvB,aAAlB,CAAN;AAAA,WAApB,CAAX;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACN,YAAAA,KAAK,EAAEA,KAAR;AAAcO,YAAAA,MAAM,EAACA;AAArB,WAAd;AAA4C,SAL9C;AAME,QAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;0CAEuB;AAAA;;AACpB,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAAC+C,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACG,iBAAL,EAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAC,2CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;2CAEsB;AAAA;;AACrB,aACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE;AAACN,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADT;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,OAAI,CAACI,kBAAL,EAAN;AAAA,SAHX;AAIE,QAAA,KAAK,EAAC,+CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;;;6BAEM;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CAFF,EAaE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CAbF,EAwBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CAxBF,EAmCE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CAnCF,EA8CE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CA9CF,EAyDE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CAzDF,EAoEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CApEF,EA+EE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CA/EF,EA0FE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CADH,EAEG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAFH,EAGG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAHH,EAIG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAJH,EAKG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CALH,EAMG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CANH,EAOG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CAPH,EAQG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CARH,EASG,KAAKA,eAAL,CAAqB,CAArB,EAAuB,CAAvB,CATH,CA1FF,EAqGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArGF,EAsGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,mBAAL,EADH,OAC+B;AAAM,QAAA,KAAK,EAAG,KAAK7D,KAAL,CAAWa,WAAX,GAAwB;AAACiD,UAAAA,OAAO,EAAE;AAAV,SAAxB,GAA8C;AAACA,UAAAA,OAAO,EAAE;AAAV,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiF,KAAKC,gBAAL,CAAsB,KAAK/D,KAAL,CAAWW,OAAjC,CAAjF,SAD/B,CAtGF,EAyGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzGF,EA0GE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKqD,oBAAL,EADH,OACgC;AAAM,QAAA,KAAK,EAAG,KAAKhE,KAAL,CAAWc,YAAX,GAAyB;AAACgD,UAAAA,OAAO,EAAE;AAAV,SAAzB,GAA+C;AAACA,UAAAA,OAAO,EAAE;AAAV,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAkF,KAAKC,gBAAL,CAAsB,KAAK/D,KAAL,CAAWY,QAAjC,CAAlF,SADhC,CA1GF,EA6GE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7GF,EA8GE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACY,KAAKqD,kBAAL,CAAwB,KAAKjE,KAAL,CAAWS,MAAnC,CADZ,QAC0D,KAAKyD,sBAAL,CAA4B,KAAKlE,KAAL,CAAWU,KAAvC,CAD1D,EAEG,KAAKyD,oBAAL,EAFH,CA9GF,EAkHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlHF,EAmHE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,gBAAL,EADH,CAnHF,EAsHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtHF,EAuHE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,gBAAL,EADH,CAvHF,CADF;AA6HD;;;;EApfmBzG,KAAK,CAACC,S;;IAufpByG,kB;;;;;;;;;;;;;6BACG;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ;AAMD;;;;EARgC1G,KAAK,CAACC,S;;AAWvC,eAAeyG,kBAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nfunction SquareB(props) {\n    return (\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function SquareF(props) {\n      return (\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            style={props.styleSettings}\n            key={props.keyValue}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n    );\n  }\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      puzzle: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      board: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      gameId:'', level:'', timeRBS:'', timeNRBS:'',\n      timeRBSFlag:false, timeNRBSFlag:false\n      };\n  }\n\n  onSolveHandlerRBS() {\n    var puzzle = this.deepCopy(this.state.board);\n    var board = this.deepCopy(puzzle);\n    var timeRBSFlag = true;\n    var a = performance.now();\n    this.solveSudokuRBS(0,0,board);\n    var b = performance.now();\n    var timeRBS = (b-a).toFixed(2);\n    console.log('It took ' + (b - a) + ' ms.');\n    this.setState({puzzle: puzzle, board: board, timeRBSFlag: timeRBSFlag, timeRBS: timeRBS}, function () {\n      // console.log('in onPlayAgainHandler b',this.state.board);\n      // console.log('in onPlayAgainHandler p',this.state.puzzle);\n    });\n  }\n\n  onSolveHandlerNRBS() {\n    var timeNRBSFlag = true;\n    var puzzle = this.deepCopy(this.state.board);\n    var a = performance.now();\n    var board = this.getSolutionNRBS(puzzle);\n    var b = performance.now();\n    var timeNRBS = (b-a).toFixed(2);\n    console.log('It took ' + (b - a) + ' ms.');\n    this.setState({board: board, puzzle: puzzle, timeNRBSFlag: timeNRBSFlag, timeNRBS: timeNRBS}, function () {\n      // console.log('in onPlayAgainHandler b',this.state.board);\n      // console.log('in onPlayAgainHandler p',this.state.puzzle);\n    });\n  }\n\n  getSolutionNRBS(puzzle){\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:puzzle[i][j].value,pencilMark:[]};\n       }\n    }\n\n    var numbers = [];\n\n    for(let r=0; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          if(puzzle[r][c].given == true){\n            continue;\n          }\n\n          numbers = this.validPencilMarks(r,c,squares);\n\n          if(numbers.length!=0){\n              var val = numbers.pop();\n              squares[r][c].value = val;\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n          } else {\n              while(r>=0){\n                c--;\n                if(c<0){r--;c=ncols-1}\n                if(r<0){break;}\n\n                if(puzzle[r][c].given == true){\n                  continue;\n                }\n\n                if(squares[r][c].pencilMark.length!=0){\n                  squares[r][c].value = squares[r][c].pencilMark.pop();\n                  break;\n                } else {\n                  squares[r][c].value = undefined;\n                }\n              }\n          }\n      }\n    }\n    //console.log('st',squares);\n    return squares;\n  }\n\n\n\n  solveSudokuRBS(row, col, board){\n    if(row>=9){return true;}\n\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){return true;}\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n    c = (c<=8)?c  :0;\n\n    for(let i=0; i<pencilMarks.length; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      if(this.solveSudokuRBS(r,c,board)){return true;}\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n    }\n\n    return false;\n  }\n\n  validPencilMarks(row,col,board){\n    var pM = [1,2,3,4,5,6,7,8,9];\n    pM = this.checkCell(row,col,pM,board);\n    pM = this.checkRow(row,col,pM,board);\n    pM = this.checkCol(row,col,pM,board);\n    return pM;\n  }\n\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          rv = obj.map(o => this.deepCopy(o));\n                          break;\n                      default:\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  getStartIndex(index){\n    switch(index) {\n        case 0:\n        case 1:\n        case 2:\n            return 0;\n        case 3:\n        case 4:\n        case 5:\n            return 3;\n        case 6:\n        case 7:\n        case 8:\n            return 6;\n        default:\n            return 0;\n    }\n  }\n\n\n  checkCell = (r,c,numbers,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          if(squares[row][col].value != undefined){\n            if(numbers.indexOf(squares[row][col].value)!=-1){\n             numbers.splice(numbers.indexOf(squares[row][col].value),1);\n            }\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  checkRow = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].value != undefined){\n          if(numbers.indexOf(squares[r][i].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[r][i].value),1);\n          }\n        }\n      }\n    }\n      return numbers;\n  }\n\n  checkCol = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != r){\n        if(squares[i][c].value != undefined){\n          if(numbers.indexOf(squares[i][c].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[i][c].value),1);\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true;\n\n        this.setState({board: board}, function () {\n          // console.log('in val ',this.state.board);\n          // console.log('in val ',this.state.puzzle);\n        });\n    } else {\n      board[i][j].value = undefined;\n      board[i][j].given = false;\n      this.setState({board: board}, function () {\n        // console.log('in val ',this.state.board);\n        // console.log('in val ',this.state.puzzle);\n      });\n    }\n  }\n\n  onResetHandler(){\n    var  board = this.deepCopy(this.state.puzzle);\n    var timeRBSFlag = false;\n    var timeNRBSFlag = false;\n    this.setState({board: board, timeRBSFlag: timeRBSFlag, timeNRBSFlag: timeNRBSFlag}, function () {\n      //console.log('in onResetHandler',this.state.board);\n    });\n  }\n\n  onSaveStatsHandler(){\n    const stat = {\n      gameId:this.state.gameId,\n      level:this.state.level,\n      timeRBS:this.state.timeRBS,\n      timeNRBS:this.state.timeNRBS\n    };\n    axios.post('http://localhost:8000/stats', stat)\n        .then(res => console.log(res.data));\n  }\n\n  displayCellForm(i,j) {\n    return (\n      <SquareF\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n      />\n    );\n  }\n  displayCellInput(val) {\n    return (\n        <input size=\"8\"\n          type=\"text\"\n          placeholder=\"\"\n          value={val}\n        />\n    );\n  }\n\n  displayCellInputId(val) {\n    return (\n        <input size=\"8\"\n          type=\"text\"\n          placeholder=\"\"\n          value={val}\n          keyValue={this.state.gameId}\n          defaultValue={this.state.gameId}\n          onChange={(event)=>this.setState({gameId: event.target.value})}\n        />\n    );\n  }\n\n  displayCellInputSelect(val) {\n    return (\n      <label>\n          Level:\n          <select value={val} onChange={(event)=>this.setState({level: event.target.value})}>\n            <option value=\"unknown\">unknown</option>\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n            <option value=\"evil\">hard</option>\n            <option value=\"diabolical\">hard</option>\n          </select>\n      </label>\n    );\n  }\n\n  displayResetCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onResetHandler()}\n        value=\"Reset\"\n      />\n    );\n  }\n\n  displaySaveStatsCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"50px\"}}\n        className=\"square\"\n        onClick={() => this.onSaveStatsHandler()}\n        value=\"Save Stats\"\n      />\n    );\n  }\n\ndisplayClearCell() {\n  return (\n    <SquareB\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => {var board = Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      var puzzle=Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      this.setState({board: board,puzzle:puzzle})}}\n      value=\"Clear\"\n    />\n  );\n}\n\n  displaySolveCellRBS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerRBS()}\n        value=\"Solve Using Recursive Backtracking Solver\"\n      />\n    );\n  }\n\n  displaySolveCellNRBS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerNRBS()}\n        value=\"Solve Using Non-Recursive Backtracking Solver\"\n      />\n    );\n  }\n\nrender() {\n  return (\n    <div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellForm(0,0)}\n        {this.displayCellForm(0,1)}\n        {this.displayCellForm(0,2)}\n        {this.displayCellForm(0,3)}\n        {this.displayCellForm(0,4)}\n        {this.displayCellForm(0,5)}\n        {this.displayCellForm(0,6)}\n        {this.displayCellForm(0,7)}\n        {this.displayCellForm(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(1,0)}\n        {this.displayCellForm(1,1)}\n        {this.displayCellForm(1,2)}\n        {this.displayCellForm(1,3)}\n        {this.displayCellForm(1,4)}\n        {this.displayCellForm(1,5)}\n        {this.displayCellForm(1,6)}\n        {this.displayCellForm(1,7)}\n        {this.displayCellForm(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(2,0)}\n        {this.displayCellForm(2,1)}\n        {this.displayCellForm(2,2)}\n        {this.displayCellForm(2,3)}\n        {this.displayCellForm(2,4)}\n        {this.displayCellForm(2,5)}\n        {this.displayCellForm(2,6)}\n        {this.displayCellForm(2,7)}\n        {this.displayCellForm(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(3,0)}\n        {this.displayCellForm(3,1)}\n        {this.displayCellForm(3,2)}\n        {this.displayCellForm(3,3)}\n        {this.displayCellForm(3,4)}\n        {this.displayCellForm(3,5)}\n        {this.displayCellForm(3,6)}\n        {this.displayCellForm(3,7)}\n        {this.displayCellForm(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(4,0)}\n        {this.displayCellForm(4,1)}\n        {this.displayCellForm(4,2)}\n        {this.displayCellForm(4,3)}\n        {this.displayCellForm(4,4)}\n        {this.displayCellForm(4,5)}\n        {this.displayCellForm(4,6)}\n        {this.displayCellForm(4,7)}\n        {this.displayCellForm(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(5,0)}\n        {this.displayCellForm(5,1)}\n        {this.displayCellForm(5,2)}\n        {this.displayCellForm(5,3)}\n        {this.displayCellForm(5,4)}\n        {this.displayCellForm(5,5)}\n        {this.displayCellForm(5,6)}\n        {this.displayCellForm(5,7)}\n        {this.displayCellForm(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(6,0)}\n        {this.displayCellForm(6,1)}\n        {this.displayCellForm(6,2)}\n        {this.displayCellForm(6,3)}\n        {this.displayCellForm(6,4)}\n        {this.displayCellForm(6,5)}\n        {this.displayCellForm(6,6)}\n        {this.displayCellForm(6,7)}\n        {this.displayCellForm(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(7,0)}\n        {this.displayCellForm(7,1)}\n        {this.displayCellForm(7,2)}\n        {this.displayCellForm(7,3)}\n        {this.displayCellForm(7,4)}\n        {this.displayCellForm(7,5)}\n        {this.displayCellForm(7,6)}\n        {this.displayCellForm(7,7)}\n        {this.displayCellForm(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(8,0)}\n        {this.displayCellForm(8,1)}\n        {this.displayCellForm(8,2)}\n        {this.displayCellForm(8,3)}\n        {this.displayCellForm(8,4)}\n        {this.displayCellForm(8,5)}\n        {this.displayCellForm(8,6)}\n        {this.displayCellForm(8,7)}\n        {this.displayCellForm(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellRBS()} <span style={ this.state.timeRBSFlag? {display: 'inline'} : {display: 'none'}}> {this.displayCellInput(this.state.timeRBS)} ms </span>\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellNRBS()} <span style={ this.state.timeNRBSFlag? {display: 'inline'} : {display: 'none'}}> {this.displayCellInput(this.state.timeNRBS)} ms </span>\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        Game ID: {this.displayCellInputId(this.state.gameId)}  {this.displayCellInputSelect(this.state.level)}\n        {this.displaySaveStatsCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayResetCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayClearCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass SudokuPuzzleSolver extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Sudoku Solver</h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default SudokuPuzzleSolver;\n"]},"metadata":{},"sourceType":"module"}