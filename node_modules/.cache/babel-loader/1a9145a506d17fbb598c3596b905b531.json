{"ast":null,"code":"import _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/MemoryGame.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: props.value,\n      color: \"white\",\n      height: \"40px\",\n      width: \"40px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.flipCells = function (index1, index2) {\n      var squares = _this.state.squares.slice();\n\n      squares[index1] = \"grey\";\n      squares[index2] = \"grey\";\n      var intervalId = setTimeout(function () {\n        _this.setState({\n          squares: squares\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      cellValues: [\"blue\", \"yellow\", \"white\", \"Orange\", \"pink\", \"green\", \"yellow\", \"red\", \"white\", \"red\", \"LightCoral\", \"brown\", \"cyan\", \"gold\", \"LightSalmon\", \"LightCoral\", \"grey\", \"blue\", \"purple\", \"pink\", \"cyan\", \"magenta\", \"Orange\", \"RoyalBlue\", \"grey\", \"green\", \"purple\", \"violet\", \"violet\", \"brown\", \"magenta\", \"gold\", \"RoyalBlue\", \"LightSalmon\"],\n      squares: Array(48).fill(\"grey\"),\n      guessOne: true,\n      guessTwo: false,\n      index1: false\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onClickHandler\",\n    value: function onClickHandler(i) {\n      var _this2 = this;\n\n      var squares = this.state.squares.slice();\n\n      if (this.state.guessOne) {\n        squares[i] = this.state.cellValues[i];\n        this.setState({\n          squares: squares,\n          guessOne: false,\n          guessTwo: true,\n          index1: i\n        });\n      } else if (this.state.guessTwo) {\n        squares[i] = this.state.cellValues[i];\n        this.setState({\n          squares: squares,\n          guessOne: true,\n          guessTwo: false\n        }, function () {\n          if (!_this2.isMatch(_this2.state.index1, i)) {\n            _this2.flipCells(_this2.state.index1, i);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"isMatch\",\n    value: function isMatch(index1, index2) {\n      return this.state.squares[index1] == this.state.squares[index2];\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i) {\n      var _this3 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this3.onClickHandler(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this4 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          var squares = Array(48).fill(\"grey\");\n\n          var cellValues = _this4.state.cellValues.slice();\n\n          _this4.shuffleArray(cellValues);\n\n          _this4.setState({\n            squares: squares,\n            cellValues: cellValues\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.displayCell(0), this.displayCell(1), this.displayCell(2), this.displayCell(3), this.displayCell(4), this.displayCell(5), this.displayCell(6), this.displayCell(7)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.displayCell(8), this.displayCell(9), this.displayCell(10), this.displayCell(11), this.displayCell(12), this.displayCell(13), this.displayCell(14), this.displayCell(15)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.displayCell(16), this.displayCell(17), this.displayCell(18), this.displayCell(19), this.displayCell(20), this.displayCell(21), this.displayCell(22), this.displayCell(23)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.displayCell(24), this.displayCell(25), this.displayCell(26), this.displayCell(27), this.displayCell(28), this.displayCell(29), this.displayCell(30), this.displayCell(31)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.displayCell(32), this.displayCell(33), this.displayCell(34), this.displayCell(35), this.displayCell(36), this.displayCell(37), this.displayCell(38), this.displayCell(39)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.displayCell(40), this.displayCell(41), this.displayCell(42), this.displayCell(43), this.displayCell(44), this.displayCell(45), this.displayCell(46), this.displayCell(47)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.displayPlayAgainCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar MemoryGame =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MemoryGame, _React$Component2);\n\n  function MemoryGame() {\n    _classCallCheck(this, MemoryGame);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MemoryGame).apply(this, arguments));\n  }\n\n  _createClass(MemoryGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \" Memory Game \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MemoryGame;\n}(React.Component);\n\nexport default MemoryGame;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/MemoryGame.js"],"names":["React","Component","Square","props","backgroundColor","value","color","height","width","onClick","Board","flipCells","index1","index2","squares","state","slice","intervalId","setTimeout","setState","cellValues","Array","fill","guessOne","guessTwo","i","isMatch","onClickHandler","shuffleArray","array","length","j","Math","floor","random","temp","displayCell","displayPlayAgainCell","MemoryGame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:props.value, color:\"white\", height:\"40px\", width:\"40px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: [\"blue\", \"yellow\", \"white\",\"Orange\", \"pink\",\n                   \"green\",\"yellow\", \"red\",  \"white\",  \"red\",\n                   \"LightCoral\",\"brown\",\"cyan\",\"gold\",\"LightSalmon\",\n                   \"LightCoral\",\"grey\",\"blue\",\"purple\",\"pink\",\n                   \"cyan\",\"magenta\",\"Orange\",\"RoyalBlue\",\n                   \"grey\",\"green\",\"purple\",\"violet\",\"violet\",\n                   \"brown\",\"magenta\",\"gold\",\"RoyalBlue\",\"LightSalmon\",\n                 ],\n      squares: Array(48).fill(\"grey\"),\n      guessOne: true,\n      guessTwo: false,\n      index1: false,\n      };\n  }\n\n  onClickHandler(i) {\n  const squares = this.state.squares.slice();\n\n  if(this.state.guessOne){\n    squares[i] = this.state.cellValues[i];\n\n    this.setState({\n      squares: squares,\n      guessOne: false,\n      guessTwo: true,\n      index1: i,\n    });\n  } else if(this.state.guessTwo){\n      squares[i] = this.state.cellValues[i];\n\n      this.setState({\n        squares: squares,\n        guessOne: true,\n        guessTwo: false\n      },() => {\n        if (!this.isMatch(this.state.index1,i)){\n          this.flipCells(this.state.index1,i);\n        }\n    });\n\n  }\n}\n\nflipCells = (index1, index2) => {\n  const squares = this.state.squares.slice();\n      squares[index1] = \"grey\";\n      squares[index2] = \"grey\";\n  let intervalId = setTimeout(() => {\n    this.setState({\n      squares: squares,\n    });\n  }, 1000);\n};\n\nisMatch(index1, index2){\n  return this.state.squares[index1] == this.state.squares[index2];\n}\n\ndisplayCell(i) {\n  return (\n    <Square\n      value={this.state.squares[i]}\n      onClick={() => this.onClickHandler(i)}\n    />\n  );\n}\n\ndisplayPlayAgainCell() {\n  return (\n    <button\n    style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={ () => {const squares = Array(48).fill(\"grey\");\n        const cellValues = this.state.cellValues.slice();\n        this.shuffleArray(cellValues);\n        this.setState({squares: squares, cellValues: cellValues})  }}\n    >\n      Play Again\n    </button>\n  );\n}\n\nshuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCell(0)}\n        {this.displayCell(1)}\n        {this.displayCell(2)}\n        {this.displayCell(3)}\n        {this.displayCell(4)}\n        {this.displayCell(5)}\n        {this.displayCell(6)}\n        {this.displayCell(7)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(8)}\n        {this.displayCell(9)}\n        {this.displayCell(10)}\n        {this.displayCell(11)}\n        {this.displayCell(12)}\n        {this.displayCell(13)}\n        {this.displayCell(14)}\n        {this.displayCell(15)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(16)}\n        {this.displayCell(17)}\n        {this.displayCell(18)}\n        {this.displayCell(19)}\n        {this.displayCell(20)}\n        {this.displayCell(21)}\n        {this.displayCell(22)}\n        {this.displayCell(23)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(24)}\n        {this.displayCell(25)}\n        {this.displayCell(26)}\n        {this.displayCell(27)}\n        {this.displayCell(28)}\n        {this.displayCell(29)}\n        {this.displayCell(30)}\n        {this.displayCell(31)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(32)}\n        {this.displayCell(33)}\n        {this.displayCell(34)}\n        {this.displayCell(35)}\n        {this.displayCell(36)}\n        {this.displayCell(37)}\n        {this.displayCell(38)}\n        {this.displayCell(39)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(40)}\n        {this.displayCell(41)}\n        {this.displayCell(42)}\n        {this.displayCell(43)}\n        {this.displayCell(44)}\n        {this.displayCell(45)}\n        {this.displayCell(46)}\n        {this.displayCell(47)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass MemoryGame extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Memory Game </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default MemoryGame;\n"]},"metadata":{},"sourceType":"module"}