{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: \"grey\",\n      color: \"white\",\n      height: \"50px\",\n      width: \"50px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c); //console.log(rowStart,colStart);\n\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != \"X\") {\n              // console.log('rrrrVal',row,col,squares[row][col].value);\n              // console.log('rrrrI',numbers.indexOf(squares[row][col].value));\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              } // console.log('rrrr',numbers);\n\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      //console.log(\"HII\");\n      // console.log('inrow',numbers);\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != \"X\") {\n            // console.log('rowrrrVal',r,i,squares[r][i].value);\n            // console.log('rowrrrI',numbers.indexOf(squares[r][i].value));\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            } // console.log('row',numbers);\n\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != \"X\") {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            } //console.log('rr',numbers);\n\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.state = {\n      cellValues: [],\n      squares: Array(81).fill({\n        value: \"X\",\n        pencilMark: [],\n        visited: []\n      }) // guessOne: true,\n      // guessTwo: false,\n      // index1: false,\n\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onStopHandler\",\n    value: function onStopHandler(i) {\n      //const squares = this.state.squares.slice();\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: \"X\",\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      this.setState({\n        squares: squares\n      });\n    }\n  }, {\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      //const squares = Array(81).fill(\"grey\");\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: \"X\",\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      var cellValues = this.state.cellValues.slice();\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()).map(function (x) {\n        return ++x;\n      });\n\n      this.shuffleArray(rowOneSeed);\n\n      for (var _i = 0; _i < rowOneSeed.length; _i++) {\n        squares[0][_i].value = rowOneSeed[_i];\n      }\n\n      this.setState({\n        squares: squares,\n        cellValues: cellValues\n      });\n      var iarr = [];\n      var numbers = [];\n      var cnt = 0;\n      var loopcnt = 0;\n      var looparr = [];\n\n      for (var r = 1; r < nrows; r++) {\n        //if(cnt>=40){break;}\n        for (var c = 0; c < ncols; c++) {\n          //cnt=cnt+1;\n          //var numbers = [1,2,3,4,5,6,7,8,9];\n          // console.log('num1',numbers);\n          if (squares[r][c].visited.length == 0) {\n            numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n          } // console.log(r,c);\n          // console.log('num',numbers);\n\n\n          numbers = this.checkCell(r, c, numbers, squares); // console.log('after cell check',numbers);\n\n          numbers = this.checkRow(r, c, numbers, squares); // console.log('num22',numbers);\n          //console.log(numbers);\n\n          numbers = this.checkCol(r, c, numbers, squares); // console.log('allchecks',numbers);\n\n          var randIndex = Math.floor(Math.random() * (numbers.length - 1)); // console.log(randIndex);\n\n          iarr.push(randIndex);\n          var val = numbers[randIndex]; // console.log(val);\n\n          if (randIndex != -1) {\n            squares[r][c].value = val;\n            numbers.splice(randIndex, 1); // console.log('in bef nums',numbers);\n            //squares[r][c].pencilMark.push(numbers);\n            // squares[r][c].pencilMark.concat(numbers);\n\n            for (var rn = 1; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n\n            squares[r][c].visited.push(val); // console.log('bef loop bef',squares[r][c]);\n            // console.log('bef loop bef val',squares[r][c].value);\n            // console.log('bef loop bef vis',squares[r][c].visited);\n            // console.log('bef loop bef pm',squares[r][c].pencilMark);\n          } else {\n            loopcnt++;\n            looparr.push([r, c]); // squares[r][c].value = 'X';\n            // squares[r][c].pencilMark = [];\n            // squares[r][c].visited = [];\n\n            while (r != 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r <= 0) {\n                break;\n              } // console.log('in loop bef',r,c);\n              // console.log('in loop bef',squares[r][c]);\n              // console.log('in loop bef val',squares[r][c].value);\n              // console.log('in loop bef vis',squares[r][c].visited);\n              // console.log('in loop bef pm',squares[r][c].pencilMark);\n\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value); // console.log('in loop during',r,c);\n\n                numbers = squares[r][c].pencilMark; // console.log('numbers in loop during',numbers);\n\n                break;\n              } else {\n                squares[r][c].value = 'X'; //squares[r][c].pencilMark = [];\n\n                squares[r][c].visited = []; // c--;\n                // if(c<0){r--;c=ncols-1}\n                // if(r<=0){break;}\n              }\n            }\n          }\n        }\n      }\n\n      console.log('iarr', iarr, 'looparr', looparr);\n      console.log('loopcnt', loopcnt);\n      this.setState({\n        squares: squares,\n        cellValues: cellValues\n      });\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i, j) {\n      return React.createElement(Square, {\n        value: this.state.squares[i][j] ? this.state.squares[i][j].value : \"\" //onClick={() => this.onClickHandler(i)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this2 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this2.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"displayStopCell\",\n    value: function displayStopCell() {\n      var _this3 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this3.onStopHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Stop\");\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, this.displayCell(0, 0), this.displayCell(0, 1), this.displayCell(0, 2), this.displayCell(0, 3), this.displayCell(0, 4), this.displayCell(0, 5), this.displayCell(0, 6), this.displayCell(0, 7), this.displayCell(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, this.displayCell(1, 0), this.displayCell(1, 1), this.displayCell(1, 2), this.displayCell(1, 3), this.displayCell(1, 4), this.displayCell(1, 5), this.displayCell(1, 6), this.displayCell(1, 7), this.displayCell(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, this.displayCell(2, 0), this.displayCell(2, 1), this.displayCell(2, 2), this.displayCell(2, 3), this.displayCell(2, 4), this.displayCell(2, 5), this.displayCell(2, 6), this.displayCell(2, 7), this.displayCell(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, this.displayCell(3, 0), this.displayCell(3, 1), this.displayCell(3, 2), this.displayCell(3, 3), this.displayCell(3, 4), this.displayCell(3, 5), this.displayCell(3, 6), this.displayCell(3, 7), this.displayCell(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, this.displayCell(4, 0), this.displayCell(4, 1), this.displayCell(4, 2), this.displayCell(4, 3), this.displayCell(4, 4), this.displayCell(4, 5), this.displayCell(4, 6), this.displayCell(4, 7), this.displayCell(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, this.displayCell(5, 0), this.displayCell(5, 1), this.displayCell(5, 2), this.displayCell(5, 3), this.displayCell(5, 4), this.displayCell(5, 5), this.displayCell(5, 6), this.displayCell(5, 7), this.displayCell(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, this.displayCell(6, 0), this.displayCell(6, 1), this.displayCell(6, 2), this.displayCell(6, 3), this.displayCell(6, 4), this.displayCell(6, 5), this.displayCell(6, 6), this.displayCell(6, 7), this.displayCell(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, this.displayCell(7, 0), this.displayCell(7, 1), this.displayCell(7, 2), this.displayCell(7, 3), this.displayCell(7, 4), this.displayCell(7, 5), this.displayCell(7, 6), this.displayCell(7, 7), this.displayCell(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, this.displayCell(8, 0), this.displayCell(8, 1), this.displayCell(8, 2), this.displayCell(8, 3), this.displayCell(8, 4), this.displayCell(8, 5), this.displayCell(8, 6), this.displayCell(8, 7), this.displayCell(8, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, this.displayStopCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, \" Memory Game \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js"],"names":["React","Component","Square","props","backgroundColor","color","height","width","onClick","value","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","row","col","indexOf","splice","checkRow","i","checkCol","state","cellValues","Array","fill","pencilMark","visited","nrows","ncols","j","setState","slice","rowOneSeed","keys","map","x","shuffleArray","length","iarr","cnt","loopcnt","looparr","randIndex","Math","floor","random","push","val","rn","pop","console","log","index","onPlayAgainHandler","onStopHandler","array","temp","displayCell","displayPlayAgainCell","displayStopCell","Game"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >{props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: [],\n      squares: Array(81).fill({value:\"X\",pencilMark:[],visited:[]}),\n      // guessOne: true,\n      // guessTwo: false,\n      // index1: false,\n      };\n  }\n\n  onStopHandler(i) {\n  //const squares = this.state.squares.slice();\n  var nrows = 9;\n  var ncols = 9;\n  var squares =new Array(nrows);\n\n  for (var i=0;i<nrows;i++) {\n    squares[i]=new Array(ncols)\n  }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n       }\n    }\n\n  this.setState({squares: squares});\n}\n\n\nonPlayAgainHandler() {\n  //const squares = Array(81).fill(\"grey\");\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n       }\n    }\n\n    const cellValues = this.state.cellValues.slice();\n    const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    this.shuffleArray(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i].value = rowOneSeed[i];\n    }\n\n    this.setState({squares: squares, cellValues: cellValues});\n\n\nvar iarr=[];\n    var numbers = [];\nvar cnt = 0;\nvar loopcnt=0;\nvar looparr=[];\n    for(let r=1; r<nrows; r++){\n      //if(cnt>=40){break;}\n      for(let c=0; c<ncols; c++){\n        //cnt=cnt+1;\n\n          //var numbers = [1,2,3,4,5,6,7,8,9];\n          // console.log('num1',numbers);\n          if(squares[r][c].visited.length == 0){\n            numbers = [1,2,3,4,5,6,7,8,9];\n          }\n          // console.log(r,c);\n          // console.log('num',numbers);\n          numbers = this.checkCell(r,c,numbers,squares);\n          // console.log('after cell check',numbers);\n          numbers = this.checkRow(r,c,numbers,squares);\n          // console.log('num22',numbers);\n          //console.log(numbers);\n          numbers = this.checkCol(r,c,numbers,squares);\n          // console.log('allchecks',numbers);\n          var randIndex = Math.floor(Math.random() * (numbers.length-1));\n          // console.log(randIndex);\n          iarr.push(randIndex);\n          var val = numbers[randIndex];\n          // console.log(val);\n          if(randIndex != -1){\n              squares[r][c].value = val;\n              numbers.splice(randIndex,1);\n              // console.log('in bef nums',numbers);\n              //squares[r][c].pencilMark.push(numbers);\n              // squares[r][c].pencilMark.concat(numbers);\n              for(let rn=1; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n              squares[r][c].visited.push(val);\n              // console.log('bef loop bef',squares[r][c]);\n              // console.log('bef loop bef val',squares[r][c].value);\n              // console.log('bef loop bef vis',squares[r][c].visited);\n              // console.log('bef loop bef pm',squares[r][c].pencilMark);\n          } else {\n            loopcnt++;\n            looparr.push([r,c])\n              // squares[r][c].value = 'X';\n              // squares[r][c].pencilMark = [];\n              // squares[r][c].visited = [];\n              while(r!=0){\n                c--;\n                if(c<0){r--;c=ncols-1}\n                if(r<=0){break;}\n                // console.log('in loop bef',r,c);\n                // console.log('in loop bef',squares[r][c]);\n                // console.log('in loop bef val',squares[r][c].value);\n                // console.log('in loop bef vis',squares[r][c].visited);\n                // console.log('in loop bef pm',squares[r][c].pencilMark);\n                if(squares[r][c].pencilMark.length!=0){\n                  squares[r][c].value = squares[r][c].pencilMark.pop();\n                  squares[r][c].visited.push(squares[r][c].value);\n                  // console.log('in loop during',r,c);\n                  numbers = squares[r][c].pencilMark;\n                  // console.log('numbers in loop during',numbers);\n                  break;\n                } else {\n                  squares[r][c].value = 'X';\n                  //squares[r][c].pencilMark = [];\n                  squares[r][c].visited = [];\n                  // c--;\n                  // if(c<0){r--;c=ncols-1}\n                  // if(r<=0){break;}\n                }\n              }\n            }\n\n      }\n    }\n    console.log('iarr',iarr,'looparr',looparr);\n    console.log('loopcnt',loopcnt);\n    this.setState({squares: squares, cellValues: cellValues});\n}\n\ngetStartIndex(index){\n  switch(index) {\n      case 0:\n      case 1:\n      case 2:\n          return 0;\n      case 3:\n      case 4:\n      case 5:\n          return 3;\n      case 6:\n      case 7:\n      case 8:\n          return 6;\n      default:\n          return 0;\n  }\n}\n\n\n\ncheckCell = (r,c,numbers,squares) => {\n\n  var rowStart = this.getStartIndex(r);\n  var colStart = this.getStartIndex(c);\n  //console.log(rowStart,colStart);\n  for(let row=rowStart; row<=rowStart+2; row++){\n    for(let col=colStart; col<=colStart+2; col++){\n      if(!(row == r && col == c)){\n        if(squares[row][col].value != \"X\"){\n          // console.log('rrrrVal',row,col,squares[row][col].value);\n          // console.log('rrrrI',numbers.indexOf(squares[row][col].value));\n          if(numbers.indexOf(squares[row][col].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[row][col].value),1);\n          }\n          // console.log('rrrr',numbers);\n        }\n      }\n    }\n  }\n  return numbers;\n}\n\ncheckRow = (r,c,numbers,squares) => {\n//console.log(\"HII\");\n// console.log('inrow',numbers);\n  for(let i=0; i<9; i++){\n\n    if(i != c){\n      if(squares[r][i].value != \"X\"){\n        // console.log('rowrrrVal',r,i,squares[r][i].value);\n        // console.log('rowrrrI',numbers.indexOf(squares[r][i].value));\n        if(numbers.indexOf(squares[r][i].value)!=-1){\n         numbers.splice(numbers.indexOf(squares[r][i].value),1);\n        }\n        // console.log('row',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\n\n\ncheckCol = (r,c,numbers,squares) => {\n\n  for(let i=0; i<9; i++){\n\n    if(i != r){\n      if(squares[i][c].value != \"X\"){\n        if(numbers.indexOf(squares[i][c].value)!=-1){\n         numbers.splice(numbers.indexOf(squares[i][c].value),1);\n        }\n        //console.log('rr',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\ndisplayCell(i,j) {\n  return (\n    <Square\n      value={this.state.squares[i][j]?this.state.squares[i][j].value:\"\"}\n      //onClick={() => this.onClickHandler(i)}\n    />\n  );\n}\n\ndisplayPlayAgainCell() {\n  return (\n    <button\n    style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onPlayAgainHandler()}\n    >\n      Play Again\n    </button>\n  );\n}\n\ndisplayStopCell() {\n  return (\n    <button\n    style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onStopHandler()}\n    >\n      Stop\n    </button>\n  );\n}\n\nshuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCell(0,0)}\n        {this.displayCell(0,1)}\n        {this.displayCell(0,2)}\n        {this.displayCell(0,3)}\n        {this.displayCell(0,4)}\n        {this.displayCell(0,5)}\n        {this.displayCell(0,6)}\n        {this.displayCell(0,7)}\n        {this.displayCell(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(1,0)}\n        {this.displayCell(1,1)}\n        {this.displayCell(1,2)}\n        {this.displayCell(1,3)}\n        {this.displayCell(1,4)}\n        {this.displayCell(1,5)}\n        {this.displayCell(1,6)}\n        {this.displayCell(1,7)}\n        {this.displayCell(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(2,0)}\n        {this.displayCell(2,1)}\n        {this.displayCell(2,2)}\n        {this.displayCell(2,3)}\n        {this.displayCell(2,4)}\n        {this.displayCell(2,5)}\n        {this.displayCell(2,6)}\n        {this.displayCell(2,7)}\n        {this.displayCell(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(3,0)}\n        {this.displayCell(3,1)}\n        {this.displayCell(3,2)}\n        {this.displayCell(3,3)}\n        {this.displayCell(3,4)}\n        {this.displayCell(3,5)}\n        {this.displayCell(3,6)}\n        {this.displayCell(3,7)}\n        {this.displayCell(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(4,0)}\n        {this.displayCell(4,1)}\n        {this.displayCell(4,2)}\n        {this.displayCell(4,3)}\n        {this.displayCell(4,4)}\n        {this.displayCell(4,5)}\n        {this.displayCell(4,6)}\n        {this.displayCell(4,7)}\n        {this.displayCell(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(5,0)}\n        {this.displayCell(5,1)}\n        {this.displayCell(5,2)}\n        {this.displayCell(5,3)}\n        {this.displayCell(5,4)}\n        {this.displayCell(5,5)}\n        {this.displayCell(5,6)}\n        {this.displayCell(5,7)}\n        {this.displayCell(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(6,0)}\n        {this.displayCell(6,1)}\n        {this.displayCell(6,2)}\n        {this.displayCell(6,3)}\n        {this.displayCell(6,4)}\n        {this.displayCell(6,5)}\n        {this.displayCell(6,6)}\n        {this.displayCell(6,7)}\n        {this.displayCell(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(7,0)}\n        {this.displayCell(7,1)}\n        {this.displayCell(7,2)}\n        {this.displayCell(7,3)}\n        {this.displayCell(7,4)}\n        {this.displayCell(7,5)}\n        {this.displayCell(7,6)}\n        {this.displayCell(7,7)}\n        {this.displayCell(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(8,0)}\n        {this.displayCell(8,1)}\n        {this.displayCell(8,2)}\n        {this.displayCell(8,3)}\n        {this.displayCell(8,4)}\n        {this.displayCell(8,5)}\n        {this.displayCell(8,6)}\n        {this.displayCell(8,7)}\n        {this.displayCell(8,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n      <div className=\"board-row\">\n        {this.displayStopCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass Game extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Memory Game </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}