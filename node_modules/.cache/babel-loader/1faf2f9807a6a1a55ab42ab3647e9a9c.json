{"ast":null,"code":"import _slicedToArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction Square2(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxlength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    name: props.value,\n    value: props.value //onChange={props.onChange}\n    //onChange={props.onChange}\n    ,\n    onChange: function onChange(event) {\n      return props.onChangeHandler;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.valChangeHandler = function (i, j, event) {\n      //event.preventDefault();\n      var board = _this.state.board.slice();\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        console.log(board[i][j].value, i, j); //this.setState({board: board});\n\n        _this.setState({\n          board: board\n        }, function () {\n          console.log(this.state.board);\n        });\n      }\n    };\n\n    _this.state = {\n      squares: Array(6).fill(''),\n      solution: Array(6).fill(''),\n      puzzle: Array(6).fill(''),\n      //board: Array(6).fill(null),\n      board: Array(2).fill({\n        value: '',\n        given: false\n      }),\n      xIsNext: true,\n      readOnlyVal: false\n    };\n    _this.valChangeHandler = _this.valChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i) {\n      var _this2 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // var solution = this.state.solution;\n      // var puzzle = this.state.puzzle;\n      // var board = puzzle;\n      var solution = [[{\n        value: 1,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 2,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 9,\n        pencilMark: [],\n        visited: []\n      }], [{\n        value: 4,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 5,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 6,\n        pencilMark: [],\n        visited: []\n      }]];\n      var puzzle = [[{\n        value: 1,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }, {\n        value: undefined,\n        given: false\n      }], [{\n        value: undefined,\n        given: false\n      }, {\n        value: 5,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }]];\n      var board = puzzle; //  this.setState({solution: solution, puzzle: puzzle, board: board});\n\n      this.setState({\n        solution: solution,\n        puzzle: puzzle,\n        board: board\n      }, function () {\n        console.log('in mount', this.state.board);\n      });\n    }\n  }, {\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      var board = this.state.puzzle.slice();\n      ;\n      console.log('in onPlayAgainHandler before', board);\n      this.setState({\n        board: board\n      }, function () {\n        console.log('in onPlayAgainHandler fter', this.state.board);\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this3 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this3.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this4 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this4.onSeeSolutionsHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Show Solution\");\n    }\n  }, {\n    key: \"displayProgressCell\",\n    value: function displayProgressCell() {\n      var _this5 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onStopHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"How am I doing?\");\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this6 = this;\n\n      return (// <Square2\n        //   value={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        //\n        //   //readOnlyVal={this.state.readOnlyVal}\n        //   // readOnlyVal={this.state.board[i].given}\n        //\n        //   onChangeHandler={(event) => this.valChangeHandler(i,j)}\n        //   //onChange={this.valChangeHandler(i,j)}\n        // />\n        React.createElement(\"input\", {\n          size: \"2\",\n          maxLength: \"1\",\n          type: \"text\",\n          placeholder: \"\" //name={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n          ,\n          defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n          onChange: function onChange(event) {\n            return _this6.valChangeHandler(i, j, event);\n          } //readOnlyVal={this.state.board[i].given}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })\n      );\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = calculateWinner(this.state.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, status), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.displayProgressCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar TTT =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TTT, _React$Component2);\n\n  function TTT() {\n    _classCallCheck(this, TTT);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TTT).apply(this, arguments));\n  }\n\n  _createClass(TTT, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TTT;\n}(React.Component); // ========================================\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default TTT;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js"],"names":["React","Component","Square","props","onClick","value","Square2","readOnlyVal","event","onChangeHandler","Board","valChangeHandler","i","j","board","state","slice","target","Number","console","log","setState","squares","Array","fill","solution","puzzle","given","xIsNext","bind","calculateWinner","handleClick","pencilMark","visited","undefined","backgroundColor","color","height","width","onPlayAgainHandler","onSeeSolutionsHandler","onStopHandler","winner","status","displayCellForm","displayPlayAgainCell","displaySeeSolutionsCell","displayProgressCell","TTT","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction Square(props) {\n    return (\n      <button\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function Square2(props) {\n      return (\n\n          <input size=\"2\" maxlength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            name={props.value}\n            value={props.value}\n            //onChange={props.onChange}\n            //onChange={props.onChange}\n            onChange={(event) => props.onChangeHandler}\n          />\n\n      );\n    }\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        squares: Array(6).fill(''),\n        solution: Array(6).fill(''),\n        puzzle: Array(6).fill(''),\n        //board: Array(6).fill(null),\n        board: Array(2).fill({value:'',given:false}),\n        xIsNext: true,\n        readOnlyVal:false\n        };\n        this.valChangeHandler = this.valChangeHandler.bind(this);\n    }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  displayCell(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  componentDidMount(){\n    // var solution = this.state.solution;\n    // var puzzle = this.state.puzzle;\n    // var board = puzzle;\n    var solution = [[{value:1,pencilMark:[],visited:[]},{value:2,pencilMark:[],visited:[]},\n    {value:9,pencilMark:[],visited:[]}],[{value:4,pencilMark:[],visited:[]},{value:5,pencilMark:[],visited:[]},\n    {value:6,pencilMark:[],visited:[]}]];\n    var puzzle = [[{value:1,given:true},{value:undefined,given:false},{value:undefined,given:false}],\n    [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n\n    var board = puzzle;\n\n\n\n\n  //  this.setState({solution: solution, puzzle: puzzle, board: board});\n    this.setState({solution: solution, puzzle: puzzle, board: board}, function () {\n      console.log('in mount',this.state.board);\n    });\n  }\n  onPlayAgainHandler(){\n\n    var board = this.state.puzzle.slice();;\nconsole.log('in onPlayAgainHandler before',board);\n\n    this.setState({board: board}, function () {\n      console.log('in onPlayAgainHandler fter',this.state.board);\n    });\n  }\n\n  valChangeHandler = (i,j,event) => {\n    //event.preventDefault();\n    const board = this.state.board.slice();\n\nif(event.target.value){\n    board[i][j].value = Number(event.target.value);\n\nconsole.log(board[i][j].value,i,j);\n    //this.setState({board: board});\n    this.setState({board: board}, function () {\n      console.log(this.state.board);\n    });\n    }\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n      >\n        Play Again\n      </button>\n    );\n  }\n\n\n\n  displaySeeSolutionsCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n      >\n        Show Solution\n      </button>\n    );\n  }\n\n  displayProgressCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onStopHandler()}\n      >\n        How am I doing?\n      </button>\n    );\n  }\n  displayCellForm(i,j) {\n    return (\n      // <Square2\n      //   value={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n      //\n      //   //readOnlyVal={this.state.readOnlyVal}\n      //   // readOnlyVal={this.state.board[i].given}\n      //\n      //   onChangeHandler={(event) => this.valChangeHandler(i,j)}\n      //   //onChange={this.valChangeHandler(i,j)}\n      // />\n      <input size=\"2\" maxLength=\"1\"\n        type=\"text\"\n        placeholder=\"\"\n        //name={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n        //readOnlyVal={this.state.board[i].given}\n      />\n\n    );\n  }\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n\n        <form  >\n        <div className=\"board-row\">\n          {this.displayCellForm(0,0)}\n          {this.displayCellForm(0,1)}\n          {this.displayCellForm(0,2)}\n        </div>\n        <div className=\"board-row\">\n          {this.displayCellForm(1,0)}\n          {this.displayCellForm(1,1)}\n          {this.displayCellForm(1,2)}\n        </div>\n        </form>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayPlayAgainCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displaySeeSolutionsCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayProgressCell()}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TTT extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default TTT;\n"]},"metadata":{},"sourceType":"module"}