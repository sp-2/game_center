{"ast":null,"code":"import _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/MemoryGame.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    disabled: props.isDisabled,\n    style: {\n      backgroundColor: props.value,\n      color: \"white\",\n      height: \"70px\",\n      width: \"70px\",\n      marginTop: '-5px'\n    } //style={{marginTop: '0px', paddingTop: '0px', marginBottom:'0px', paddingBottom: '0px'}}\n    ,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.flipCells = function (index1, index2) {\n      var squares = _this.state.squares.slice();\n\n      squares[index1] = \"silver\";\n      squares[index2] = \"silver\";\n      var intervalId = setTimeout(function () {\n        _this.setState({\n          squares: squares\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      cellValues: [\"blue\", \"DarkKhaki\", \"yellow\", \"white\", \"Orange\", \"pink\", \"LawnGreen\", \"BlanchedAlmond\", \"green\", \"yellow\", \"red\", \"white\", \"red\", \"Fuchsia\", \"DarkOrchid\", \"brown\", \"Peru\", \"DarkOrchid\", \"gold\", \"DodgerBlue\", \"Tomato\", \"DarkKhaki\", \"LightSteelBlue\", \"IndianRed\", \"IndianRed\", \"blue\", \"purple\", \"pink\", \"Peru\", \"SlateBlue\", \"Orange\", \"SlateBlue\", \"LightSteelBlue\", \"green\", \"Turquoise\", \"Tan\", \"purple\", \"violet\", \"violet\", \"brown\", \"DodgerBlue\", \"gold\", \"Turquoise\", \"LawnGreen\", \"BlanchedAlmond\", \"Fuchsia\", \"Tan\", \"Tomato\"],\n      squares: Array(48).fill(\"silver\"),\n      saved_squares: Array(48).fill(\"silver\"),\n      isDisabled: Array(48).fill(false),\n      guessOne: true,\n      guessTwo: false,\n      index1: false,\n      playButtonText: \"Play\",\n      buttonText: \"See Solution\",\n      gameOver: false,\n      gameOverText: \"Game Over!!!\",\n      cnt: 0\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onClickHandler\",\n    value: function onClickHandler(i) {\n      var _this2 = this;\n\n      var squares = this.state.squares.slice();\n      var isDisabled = this.state.isDisabled.slice();\n\n      if (this.state.guessOne) {\n        squares[i] = this.state.cellValues[i];\n        this.setState({\n          squares: squares,\n          guessOne: false,\n          guessTwo: true,\n          index1: i\n        });\n      } else if (this.state.guessTwo) {\n        squares[i] = this.state.cellValues[i];\n        this.setState({\n          squares: squares,\n          guessOne: true,\n          guessTwo: false\n        }, function () {\n          if (!_this2.isMatch(_this2.state.index1, i)) {\n            _this2.flipCells(_this2.state.index1, i);\n          } else {\n            var cnt = _this2.state.cnt;\n            cnt = cnt + 1;\n            isDisabled[i] = true;\n            isDisabled[index1] = true;\n            cnt == 24 ? _this2.setState({\n              gameOver: true,\n              cnt: 0\n            }) : _this2.setState({\n              cnt: cnt\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"isMatch\",\n    value: function isMatch(index1, index2) {\n      return this.state.squares[index1] == this.state.squares[index2];\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      var buttonText = this.state.buttonText;\n      var saved_squares;\n      var squares;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_squares = this.state.squares.slice();\n        squares = this.state.cellValues.slice();\n      } else {\n        buttonText = \"See Solution\";\n        squares = this.state.saved_squares.slice();\n      }\n\n      this.setState({\n        squares: squares,\n        saved_squares: saved_squares,\n        buttonText: buttonText\n      }, function () {});\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i) {\n      var _this3 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        val: \"\",\n        isDisabled: this.state.isDisabled[i],\n        onClick: function onClick() {\n          return _this3.onClickHandler(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this4 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"DodgerBlue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"140px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          var squares = Array(48).fill(\"silver\");\n          var playButtonText = \"Play Again\";\n\n          var cellValues = _this4.state.cellValues.slice();\n\n          _this4.shuffleArray(cellValues);\n\n          _this4.setState({\n            squares: squares,\n            cellValues: cellValues,\n            playButtonText: playButtonText,\n            cnt: 0,\n            gameOver: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.playButtonText);\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this5 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"DodgerBlue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"140px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onSeeSolutionsHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.buttonText);\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel panel-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"panel-body\",\n        style: {\n          background: 'linear-gradient(to right, #ffcc99 0%, #ff9900 100%)',\n          marginTop: '0px',\n          marginBottom: '20px',\n          paddingLeft: '20px',\n          paddingTop: '25px',\n          paddingBottom: '40px',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: this.state.gameOver ? {\n          display: 'inline',\n          color: \"red\"\n        } : {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" \", this.state.gameOverText, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        style: {\n          marginTop: '0px',\n          paddingTop: '0px',\n          marginBottom: '0px',\n          paddingBottom: '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.displayCell(0), this.displayCell(1), this.displayCell(2), this.displayCell(3), this.displayCell(4), this.displayCell(5), this.displayCell(6), this.displayCell(7)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.displayCell(8), this.displayCell(9), this.displayCell(10), this.displayCell(11), this.displayCell(12), this.displayCell(13), this.displayCell(14), this.displayCell(15)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.displayCell(16), this.displayCell(17), this.displayCell(18), this.displayCell(19), this.displayCell(20), this.displayCell(21), this.displayCell(22), this.displayCell(23)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, this.displayCell(24), this.displayCell(25), this.displayCell(26), this.displayCell(27), this.displayCell(28), this.displayCell(29), this.displayCell(30), this.displayCell(31)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, this.displayCell(32), this.displayCell(33), this.displayCell(34), this.displayCell(35), this.displayCell(36), this.displayCell(37), this.displayCell(38), this.displayCell(39)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, this.displayCell(40), this.displayCell(41), this.displayCell(42), this.displayCell(43), this.displayCell(44), this.displayCell(45), this.displayCell(46), this.displayCell(47)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()))));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar MemoryGame =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(MemoryGame, _React$Component2);\n\n  function MemoryGame() {\n    _classCallCheck(this, MemoryGame);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MemoryGame).apply(this, arguments));\n  }\n\n  _createClass(MemoryGame, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \" Memory Game \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MemoryGame;\n}(React.Component);\n\nexport default MemoryGame;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/MemoryGame.js"],"names":["React","Component","Square","props","isDisabled","backgroundColor","value","color","height","width","marginTop","onClick","Board","flipCells","index1","index2","squares","state","slice","intervalId","setTimeout","setState","cellValues","Array","fill","saved_squares","guessOne","guessTwo","playButtonText","buttonText","gameOver","gameOverText","cnt","i","isMatch","onClickHandler","shuffleArray","onSeeSolutionsHandler","array","length","j","Math","floor","random","temp","background","marginBottom","paddingLeft","paddingTop","paddingBottom","textAlign","display","displayCell","displayPlayAgainCell","displaySeeSolutionsCell","MemoryGame"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Square(props) {\n  return (\n    <button type=\"button\" class=\"btn btn-secondary\" disabled={props.isDisabled}\n      style={{backgroundColor:props.value, color:\"white\", height:\"70px\", width:\"70px\",marginTop: '-5px'}}\n      //style={{marginTop: '0px', paddingTop: '0px', marginBottom:'0px', paddingBottom: '0px'}}\n      className=\"square\"\n      onClick={props.onClick}\n    >\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: [\"blue\", \"DarkKhaki\", \"yellow\", \"white\", \"Orange\", \"pink\",\n                   \"LawnGreen\", \"BlanchedAlmond\", \"green\", \"yellow\", \"red\", \"white\",\n                   \"red\", \"Fuchsia\", \"DarkOrchid\", \"brown\", \"Peru\", \"DarkOrchid\",\n                   \"gold\", \"DodgerBlue\", \"Tomato\", \"DarkKhaki\", \"LightSteelBlue\", \"IndianRed\",\n                   \"IndianRed\", \"blue\", \"purple\", \"pink\", \"Peru\", \"SlateBlue\",\n                   \"Orange\", \"SlateBlue\", \"LightSteelBlue\",  \"green\", \"Turquoise\", \"Tan\",\n                   \"purple\", \"violet\", \"violet\", \"brown\", \"DodgerBlue\", \"gold\",\n                   \"Turquoise\", \"LawnGreen\", \"BlanchedAlmond\", \"Fuchsia\", \"Tan\", \"Tomato\"\n                 ],\n      squares: Array(48).fill(\"silver\"),\n      saved_squares: Array(48).fill(\"silver\"),\n      isDisabled: Array(48).fill(false),\n      guessOne: true,\n      guessTwo: false,\n      index1: false,\n      playButtonText: \"Play\",\n      buttonText: \"See Solution\",\n      gameOver: false,\n      gameOverText: \"Game Over!!!\",\n      cnt: 0\n      };\n  }\n\n  onClickHandler(i) {\n    const squares = this.state.squares.slice();\n    const isDisabled = this.state.isDisabled.slice();\n\n    if(this.state.guessOne){\n      squares[i] = this.state.cellValues[i];\n\n      this.setState({\n        squares: squares,\n        guessOne: false,\n        guessTwo: true,\n        index1: i,\n      });\n    } else if(this.state.guessTwo){\n        squares[i] = this.state.cellValues[i];\n\n        this.setState({\n          squares: squares,\n          guessOne: true,\n          guessTwo: false\n        },() => {\n          if (!this.isMatch(this.state.index1,i)){\n            this.flipCells(this.state.index1,i);\n          } else {\n            var cnt = this.state.cnt;\n\n            cnt = cnt + 1;\n            isDisabled[i] = true;\n            isDisabled[index1] = true;\n            cnt == 24 ? this.setState({gameOver: true, cnt:0}) : this.setState({cnt: cnt});\n          }\n      });\n    }\n  }\n\nflipCells = (index1, index2) => {\n  const squares = this.state.squares.slice();\n      squares[index1] = \"silver\";\n      squares[index2] = \"silver\";\n  let intervalId = setTimeout(() => {\n    this.setState({\n      squares: squares,\n    });\n  }, 1000);\n};\n\nisMatch(index1, index2){\n  return this.state.squares[index1] == this.state.squares[index2];\n}\n\nonSeeSolutionsHandler(){\n  var buttonText = this.state.buttonText;\n  var saved_squares;\n  var squares;\n\n  if(buttonText == \"See Solution\"){\n    buttonText  = \"Back To Puzzle\";\n    saved_squares = this.state.squares.slice();\n    squares       = this.state.cellValues.slice();\n  } else {\n    buttonText  = \"See Solution\";\n    squares       = this.state.saved_squares.slice();\n  }\n\n  this.setState({squares: squares, saved_squares: saved_squares, buttonText: buttonText}, function () {\n  });\n}\n\ndisplayCell(i) {\n  return (\n    <Square\n      value={this.state.squares[i]}\n      val=''\n      isDisabled={this.state.isDisabled[i]}\n      onClick={() => this.onClickHandler(i)}\n    />\n  );\n}\n\ndisplayPlayAgainCell() {\n  return (\n    <button\n    style={{backgroundColor:\"DodgerBlue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n      className=\"square\"\n      onClick={ () => {const squares = Array(48).fill(\"silver\");var playButtonText = \"Play Again\";\n        const cellValues = this.state.cellValues.slice();\n        this.shuffleArray(cellValues);\n        this.setState({squares: squares, cellValues: cellValues, playButtonText: playButtonText, cnt:0, gameOver:false})}}\n    >\n      {this.state.playButtonText}\n    </button>\n  );\n}\n\ndisplaySeeSolutionsCell() {\n  return (\n    <button\n      style={{backgroundColor:\"DodgerBlue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n      className=\"square\"\n      onClick={() => this.onSeeSolutionsHandler()}\n    >\n      {this.state.buttonText}\n    </button>\n  );\n}\n\nshuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n}\nrender() {\n  return (\n    <div >\n      <div class=\"panel panel-default\">\n  \t\t\t<div class=\"panel-body\" style={{ background: 'linear-gradient(to right, #ffcc99 0%, #ff9900 100%)',marginTop: '0px', marginBottom:'20px', paddingLeft: '20px', paddingTop: '25px', paddingBottom: '40px', textAlign: 'center'}}>\n          <h4 style={ this.state.gameOver? {display: 'inline', color:\"red\"} : {display: 'none'}}> {this.state.gameOverText} </h4>\n          <br></br><br></br>\n          <div className=\"board-row\" style={{marginTop: '0px', paddingTop: '0px', marginBottom:'0px', paddingBottom: '0px'}}>\n            {this.displayCell(0)}\n            {this.displayCell(1)}\n            {this.displayCell(2)}\n            {this.displayCell(3)}\n            {this.displayCell(4)}\n            {this.displayCell(5)}\n            {this.displayCell(6)}\n            {this.displayCell(7)}\n          </div>\n          <div className=\"board-row\">\n            {this.displayCell(8)}\n            {this.displayCell(9)}\n            {this.displayCell(10)}\n            {this.displayCell(11)}\n            {this.displayCell(12)}\n            {this.displayCell(13)}\n            {this.displayCell(14)}\n            {this.displayCell(15)}\n          </div>\n          <div className=\"board-row\">\n            {this.displayCell(16)}\n            {this.displayCell(17)}\n            {this.displayCell(18)}\n            {this.displayCell(19)}\n            {this.displayCell(20)}\n            {this.displayCell(21)}\n            {this.displayCell(22)}\n            {this.displayCell(23)}\n          </div>\n          <div className=\"board-row\">\n            {this.displayCell(24)}\n            {this.displayCell(25)}\n            {this.displayCell(26)}\n            {this.displayCell(27)}\n            {this.displayCell(28)}\n            {this.displayCell(29)}\n            {this.displayCell(30)}\n            {this.displayCell(31)}\n          </div>\n          <div className=\"board-row\">\n            {this.displayCell(32)}\n            {this.displayCell(33)}\n            {this.displayCell(34)}\n            {this.displayCell(35)}\n            {this.displayCell(36)}\n            {this.displayCell(37)}\n            {this.displayCell(38)}\n            {this.displayCell(39)}\n          </div>\n          <div className=\"board-row\">\n            {this.displayCell(40)}\n            {this.displayCell(41)}\n            {this.displayCell(42)}\n            {this.displayCell(43)}\n            {this.displayCell(44)}\n            {this.displayCell(45)}\n            {this.displayCell(46)}\n            {this.displayCell(47)}\n          </div>\n          <br></br>\n          <div className=\"board-row\">\n            {this.displayPlayAgainCell()}\n          </div>\n          <br></br>\n          <div className=\"board-row\">\n            {this.displaySeeSolutionsCell()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nclass MemoryGame extends React.Component {\nrender() {\n  return (\n      <div class=\"container\">\n        <h1 style={{textAlign: 'center'}}> Memory Game </h1>\n        <br/>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default MemoryGame;\n"]},"metadata":{},"sourceType":"module"}