{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: \"grey\",\n      color: \"white\",\n      height: \"50px\",\n      width: \"50px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction Square_B(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction Square_F(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    style: props.styleSettings,\n    key: props.keyValue,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != undefined) {\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              }\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != undefined) {\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != undefined) {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        console.log(board[i][j].value, i, j); //this.setState({board: board});\n\n        _this.setState({\n          board: board\n        }, function () {\n          console.log('in val b', this.state.board);\n          console.log('in val pu', this.state.puzzle);\n        });\n      }\n    };\n\n    _this.state = {\n      cellValues: Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }),\n      squares: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: []\n        });\n      }),\n      solution: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: []\n        });\n      }),\n      puzzle: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      saved_board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      cellCheck: Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }),\n      buttonText: \"See Solution\" // };\n      // this.valChangeHandler = this.valChangeHandler.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      var solution = this.getSolution();\n      var puzzle = this.getUniquePuzzle(solution); //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n\n      var board = this.deepCopy(puzzle);\n      var saved_board = this.deepCopy(puzzle);\n      var buttonText = \"See Solution\";\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }); //console.log('in onPlayAgainHandler before b',board);\n\n      this.setState({\n        solution: solution,\n        puzzle: puzzle,\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onPlayAgainHandler fter b', this.state.board);\n        console.log('in onPlayAgainHandler fter s', this.state.solution);\n        console.log('in onPlayAgainHandler fter p', this.state.puzzle);\n        console.log('in onPlayAgainHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"getSolution\",\n    value: function getSolution() {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: undefined,\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      var cellValues = this.state.cellValues.slice();\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()).map(function (x) {\n        return ++x;\n      });\n\n      this.shuffleArray(rowOneSeed);\n\n      for (var _i = 0; _i < rowOneSeed.length; _i++) {\n        squares[0][_i].value = rowOneSeed[_i];\n      }\n\n      this.setState({\n        squares: squares\n      });\n      var iarr = [];\n      var numbers = [];\n      var cnt = 0;\n      var loopcnt = 0;\n      var looparr = [];\n\n      for (var r = 1; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (squares[r][c].visited.length == 0) {\n            numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n          }\n\n          numbers = this.checkCell(r, c, numbers, squares);\n          numbers = this.checkRow(r, c, numbers, squares);\n          numbers = this.checkCol(r, c, numbers, squares);\n\n          if (numbers.length != 0) {\n            var randIndex = Math.floor(Math.random() * (numbers.length - 1));\n            iarr.push(randIndex);\n            var val = numbers[randIndex];\n            squares[r][c].value = val;\n            numbers.splice(randIndex, 1);\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n\n            squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r, c]);\n\n            while (r != 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r <= 0) {\n                break;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n        }\n      }\n\n      console.log('iarr', iarr, 'looparr', looparr);\n      console.log('loopcnt', loopcnt); //this.setState({squares: squares, cellValues: cellValues});\n      // var solution = this.deepCopy(squares);\n      // this.setState({squares: squares, solution: solution}, function () {\n      //   console.log('state updated');\n      // });\n\n      console.log('st', this.state.squares);\n      return squares;\n    } //getUniquePuzzle(solution){\n\n  }, {\n    key: \"getUniquePuzzle\",\n    value: function getUniquePuzzle(solvedPuzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var location; //var solvedPuzzle = solution;\n\n      var puzzle = new Array(nrows);\n      console.log('sol', solvedPuzzle);\n\n      for (var i = 0; i < nrows; i++) {\n        puzzle[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          puzzle[i][j] = {\n            value: solvedPuzzle[i][j].value,\n            given: true\n          };\n        }\n      }\n\n      console.log('puzzle', puzzle);\n      var locationArray = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]];\n      this.shuffleArray(locationArray); //console.log(locationArray);\n\n      location = locationArray.pop(); //console.log('la',locationArray);\n      //console.log('l',location);\n\n      var cntr = 0;\n\n      while (locationArray.length != 0) {\n        cntr++;\n        puzzle[location[0]][location[1]].value = undefined;\n        puzzle[location[0]][location[1]].given = false; //break;\n\n        if (this.uniqueSolve(puzzle) == false) {\n          console.log(\"in here\");\n          puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n          puzzle[location[0]][location[1]].given = true;\n        } //break;\n\n\n        if (cntr == 54) {\n          break;\n        }\n\n        location = locationArray.pop();\n      } //console.log('puzzle2',puzzle);\n      //can return puzzle and update state in before fn\n      // var squares =new Array(nrows);\n      //\n      // for (var i=0;i<nrows;i++) {\n      //   squares[i]=new Array(ncols)\n      // }\n      //\n      // for (var i=0;i<nrows;i++) {\n      //    for (var j=0;j<nrows;j++) {\n      //      squares[i][j] = {value:puzzle[i][j].value,pencilMark:[],visited:[]};\n      //    }\n      // }\n      //\n      // var solution = this.deepCopy(squares);\n      // this.setState({squares: squares, solution: solution}, function () {\n      //   //console.log('state2 updated');\n      // });\n      // const board = this.deepCopy(puzzle);\n      // this.setState({puzzle: puzzle, board: board}, function () {\n      //   //console.log('state2 updated');\n      // });\n\n\n      return puzzle;\n    }\n  }, {\n    key: \"uniqueSolve\",\n    value: function uniqueSolve(puzzle) {\n      var solutions = [];\n      this.solveSudoku(0, 0, 0, solutions, puzzle);\n      var numSolutions = solutions.length; //console.log('numSolutions',numSolutions);\n      //console.log('Solutions',solutions);\n\n      if (numSolutions == 0 || numSolutions > 1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"solveSudoku\",\n    value: function solveSudoku(row, col, cnt, solutions, board) {\n      //if(cnt>1){return true;}\n      //console.log(\"in solvesudoku\");\n      //console.log(\"in solvesudokuboard\",board);\n      if (row >= 9) {\n        cnt = cnt + 1;\n        ;\n        solutions.push(board);\n        return true;\n      } //console.log(\"in solvesudoku\");\n\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          cnt = cnt + 1;\n          solutions.push(board);\n          return true;\n        } //console.log('r,c',row,col);\n\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0; // console.log('r c in b',row,col);\n      //     console.log('b rc',board[row][col]);\n      //console.log('b pm',pencilMarks);\n\n      for (var i = 0; i < pencilMarks.length; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n        this.solveSudoku(r, c, cnt, solutions, board);\n        board[row][col].value = undefined;\n        board[row][col].given = false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"validPencilMarks\",\n    value: function validPencilMarks(row, col, board) {\n      var pM = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      pM = this.checkCell(row, col, pM, board);\n      pM = this.checkRow(row, col, pM, board);\n      pM = this.checkCol(row, col, pM, board);\n      return pM;\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            // null => null\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                // It's an array, create a new array with\n                // deep copies of the entries\n                console.log(\"i hee\", obj);\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                console.log(\"i hee\", rv);\n                break;\n\n              default:\n                console.log(\"i heer 2\", obj);\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  console.log(\"i heer 2 pk\", prev, key, obj[key]);\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          // It's a primitive, copy via assignment\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      console.log('in onSeeSolutionsHandler before');\n      var buttonText = this.state.buttonText;\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      });\n      var saved_board;\n      var board;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_board = this.deepCopy(this.state.board);\n        board = this.deepCopy(this.state.solution);\n      } else {\n        buttonText = \"See Solution\";\n        board = this.deepCopy(this.state.saved_board);\n      }\n\n      console.log('in onSeeSolutionsHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onSeeSolutionsHandler fter b', this.state.board);\n        console.log('in onSeeSolutionsHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onCellCheckHandler\",\n    value: function onCellCheckHandler() {\n      console.log('in onCellCheckHandler before');\n      var board = this.deepCopy(this.state.board);\n      var solution = this.deepCopy(this.state.solution);\n      var cellCheck = this.state.cellCheck.slice();\n      var saved_board;\n      var board;\n      console.log(\"chk\", this.state.cellCheck);\n\n      for (var i = 0; i < board.length; i++) {\n        for (var j = 0; j < board[0].length; j++) {\n          if (board[i][j].value != undefined) {\n            if (board[i][j].value != solution[i][j].value) {\n              console.log(i, j, \"err\");\n              cellCheck[i][j] = true;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onCellCheckHandler fter b', cellCheck);\n      });\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i, j) {\n      return React.createElement(Square, {\n        value: this.state.squares[i][j] ? this.state.squares[i][j].value : \"\" //onClick={() => this.onClickHandler(i)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellCheck\",\n    value: function displayCellCheck() {\n      var _this3 = this;\n\n      return React.createElement(Square_B, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this3.onCellCheckHandler();\n        },\n        value: \"How am I doing?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this4 = this;\n\n      return React.createElement(Square_F, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        styleSettings: ((this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n          fontWeight: 'bold'\n        } : {\n          fontWeight: 'normal'\n        }, this.state.cellCheck[i][j] ? {\n          color: \"red\"\n        } : {\n          color: \"black\"\n        }) //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        ,\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this4.valChangeHandler(i, j, event);\n        },\n        onClick: function onClick() {\n          var cellCheck = Array(9).fill(false).map(function () {\n            return new Array(9).fill(false);\n          });\n\n          _this4.setState({\n            cellCheck: cellCheck\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this5 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"displayStopCell\",\n    value: function displayStopCell() {\n      var _this6 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this6.onStopHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, \"Stop\");\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this7 = this;\n\n      return React.createElement(Square_B, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this7.onSeeSolutionsHandler();\n        },\n        value: this.state.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayProgressCell\",\n    value: function displayProgressCell() {\n      var _this8 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this8.onStopHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, \"How am I doing?\");\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, this.displayCell(0, 0), this.displayCell(0, 1), this.displayCell(0, 2), this.displayCell(0, 3), this.displayCell(0, 4), this.displayCell(0, 5), this.displayCell(0, 6), this.displayCell(0, 7), this.displayCell(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, this.displayCell(1, 0), this.displayCell(1, 1), this.displayCell(1, 2), this.displayCell(1, 3), this.displayCell(1, 4), this.displayCell(1, 5), this.displayCell(1, 6), this.displayCell(1, 7), this.displayCell(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, this.displayCell(2, 0), this.displayCell(2, 1), this.displayCell(2, 2), this.displayCell(2, 3), this.displayCell(2, 4), this.displayCell(2, 5), this.displayCell(2, 6), this.displayCell(2, 7), this.displayCell(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, this.displayCell(3, 0), this.displayCell(3, 1), this.displayCell(3, 2), this.displayCell(3, 3), this.displayCell(3, 4), this.displayCell(3, 5), this.displayCell(3, 6), this.displayCell(3, 7), this.displayCell(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, this.displayCell(4, 0), this.displayCell(4, 1), this.displayCell(4, 2), this.displayCell(4, 3), this.displayCell(4, 4), this.displayCell(4, 5), this.displayCell(4, 6), this.displayCell(4, 7), this.displayCell(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, this.displayCell(5, 0), this.displayCell(5, 1), this.displayCell(5, 2), this.displayCell(5, 3), this.displayCell(5, 4), this.displayCell(5, 5), this.displayCell(5, 6), this.displayCell(5, 7), this.displayCell(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641\n        },\n        __self: this\n      }, this.displayCell(6, 0), this.displayCell(6, 1), this.displayCell(6, 2), this.displayCell(6, 3), this.displayCell(6, 4), this.displayCell(6, 5), this.displayCell(6, 6), this.displayCell(6, 7), this.displayCell(6, 8)), \"// \", React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, \"//   \", this.displayCell(7, 0), \"//   \", this.displayCell(7, 1), \"//   \", this.displayCell(7, 2), \"//   \", this.displayCell(7, 3), \"//   \", this.displayCell(7, 4), \"//   \", this.displayCell(7, 5), \"//   \", this.displayCell(7, 6), \"//   \", this.displayCell(7, 7), \"//   \", this.displayCell(7, 8), \"// \"), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, this.displayCell(8, 0), this.displayCell(8, 1), this.displayCell(8, 2), this.displayCell(8, 3), this.displayCell(8, 4), this.displayCell(8, 5), this.displayCell(8, 6), this.displayCell(8, 7), this.displayCell(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2), this.displayCellForm(0, 3), this.displayCellForm(0, 4), this.displayCellForm(0, 5), this.displayCellForm(0, 6), this.displayCellForm(0, 7), this.displayCellForm(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2), this.displayCellForm(1, 3), this.displayCellForm(1, 4), this.displayCellForm(1, 5), this.displayCellForm(1, 6), this.displayCellForm(1, 7), this.displayCellForm(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }, this.displayCellForm(2, 0), this.displayCellForm(2, 1), this.displayCellForm(2, 2), this.displayCellForm(2, 3), this.displayCellForm(2, 4), this.displayCellForm(2, 5), this.displayCellForm(2, 6), this.displayCellForm(2, 7), this.displayCellForm(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, this.displayCellForm(3, 0), this.displayCellForm(3, 1), this.displayCellForm(3, 2), this.displayCellForm(3, 3), this.displayCellForm(3, 4), this.displayCellForm(3, 5), this.displayCellForm(3, 6), this.displayCellForm(3, 7), this.displayCellForm(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 719\n        },\n        __self: this\n      }, this.displayCellForm(4, 0), this.displayCellForm(4, 1), this.displayCellForm(4, 2), this.displayCellForm(4, 3), this.displayCellForm(4, 4), this.displayCellForm(4, 5), this.displayCellForm(4, 6), this.displayCellForm(4, 7), this.displayCellForm(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }, this.displayCellForm(5, 0), this.displayCellForm(5, 1), this.displayCellForm(5, 2), this.displayCellForm(5, 3), this.displayCellForm(5, 4), this.displayCellForm(5, 5), this.displayCellForm(5, 6), this.displayCellForm(5, 7), this.displayCellForm(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, this.displayCellForm(6, 0), this.displayCellForm(6, 1), this.displayCellForm(6, 2), this.displayCellForm(6, 3), this.displayCellForm(6, 4), this.displayCellForm(6, 5), this.displayCellForm(6, 6), this.displayCellForm(6, 7), this.displayCellForm(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 752\n        },\n        __self: this\n      }, this.displayCellForm(7, 0), this.displayCellForm(7, 1), this.displayCellForm(7, 2), this.displayCellForm(7, 3), this.displayCellForm(7, 4), this.displayCellForm(7, 5), this.displayCellForm(7, 6), this.displayCellForm(7, 7), this.displayCellForm(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, this.displayCellForm(8, 0), this.displayCellForm(8, 1), this.displayCellForm(8, 2), this.displayCellForm(8, 3), this.displayCellForm(8, 4), this.displayCellForm(8, 5), this.displayCellForm(8, 6), this.displayCellForm(8, 7), this.displayCellForm(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, this.displayCellCheck()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar SudokuPuzzleSolver =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SudokuPuzzleSolver, _React$Component2);\n\n  function SudokuPuzzleSolver() {\n    _classCallCheck(this, SudokuPuzzleSolver);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SudokuPuzzleSolver).apply(this, arguments));\n  }\n\n  _createClass(SudokuPuzzleSolver, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      }, \" Sudoku \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SudokuPuzzleSolver;\n}(React.Component);\n\nexport default SudokuPuzzleSolver;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js"],"names":["React","Component","Square","props","backgroundColor","color","height","width","onClick","value","Square_B","style","Square_F","readOnlyVal","styleSettings","keyValue","defaultValue","onChange","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","row","col","undefined","indexOf","splice","checkRow","i","checkCol","valChangeHandler","j","event","board","deepCopy","state","target","Number","console","log","setState","puzzle","cellValues","Array","fill","map","pencilMark","visited","solution","given","saved_board","cellCheck","buttonText","getSolution","getUniquePuzzle","nrows","ncols","slice","rowOneSeed","keys","x","shuffleArray","length","iarr","cnt","loopcnt","looparr","randIndex","Math","floor","random","push","val","rn","pop","solvedPuzzle","location","locationArray","cntr","uniqueSolve","solutions","solveSudoku","numSolutions","pencilMarks","validPencilMarks","pM","obj","rv","toString","call","o","Object","reduce","prev","key","index","onCellCheckHandler","fontWeight","onPlayAgainHandler","onStopHandler","onSeeSolutionsHandler","array","temp","displayCell","displayCellForm","displayPlayAgainCell","displaySeeSolutionsCell","displayCellCheck","SudokuPuzzleSolver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >{props.value}\n    </button>\n  );\n}\n\nfunction Square_B(props) {\n    return (\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function Square_F(props) {\n      return (\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            style={props.styleSettings}\n            key={props.keyValue}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n\n    );\n  }\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: Array(9).fill(false).map(() => new Array(9).fill(false)),\n      squares: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:[]})),\n      solution: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:[]})),\n      puzzle: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      board: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      saved_board:Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      cellCheck: Array(9).fill(false).map(() => new Array(9).fill(false)),\n      buttonText:\"See Solution\"\n      // };\n      // this.valChangeHandler = this.valChangeHandler.bind(this);\n\n      };\n  }\n\n\n  onPlayAgainHandler() {\n\n\n    var solution = this.getSolution();\n    var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var board = this.deepCopy(puzzle);\n    var saved_board = this.deepCopy(puzzle);\n    var buttonText  = \"See Solution\";\n    var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    //console.log('in onPlayAgainHandler before b',board);\n\n    this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onPlayAgainHandler fter b',this.state.board);\n      console.log('in onPlayAgainHandler fter s',this.state.solution);\n      console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  getSolution(){\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:undefined,pencilMark:[],visited:[]};\n       }\n    }\n\n    const cellValues = this.state.cellValues.slice();\n    const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    this.shuffleArray(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i].value = rowOneSeed[i];\n    }\n\n    this.setState({squares: squares});\n\n\n    var iarr=[];\n    var numbers = [];\n    var cnt = 0;\n    var loopcnt=0;\n    var looparr=[];\n\n    for(let r=1; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          if(squares[r][c].visited.length == 0){\n            numbers = [1,2,3,4,5,6,7,8,9];\n          }\n\n          numbers = this.checkCell(r,c,numbers,squares);\n          numbers = this.checkRow(r,c,numbers,squares);\n          numbers = this.checkCol(r,c,numbers,squares);\n\n          if(numbers.length!=0){\n              var randIndex = Math.floor(Math.random() * (numbers.length-1));\n\n              iarr.push(randIndex);\n              var val = numbers[randIndex];\n              squares[r][c].value = val;\n              numbers.splice(randIndex,1);\n\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n              squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r,c])\n            while(r!=0){\n              c--;\n              if(c<0){r--;c=ncols-1}\n              if(r<=0){break;}\n\n              if(squares[r][c].pencilMark.length!=0){\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n\n      }\n    }\n    console.log('iarr',iarr,'looparr',looparr);\n    console.log('loopcnt',loopcnt);\n    //this.setState({squares: squares, cellValues: cellValues});\n    // var solution = this.deepCopy(squares);\n    // this.setState({squares: squares, solution: solution}, function () {\n    //   console.log('state updated');\n    // });\n    console.log('st',this.state.squares);\n    return squares;\n  }\n\n  //getUniquePuzzle(solution){\n  getUniquePuzzle(solvedPuzzle){\n    var nrows        = 9;\n    var ncols        = 9;\n    var location;\n    //var solvedPuzzle = solution;\n    var puzzle       = new Array(nrows);\n\n    console.log('sol',solvedPuzzle);\n\n    for (var i=0;i<nrows;i++) {\n      puzzle[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         puzzle[i][j] = {value:solvedPuzzle[i][j].value,given:true};\n       }\n    }\n\n    console.log('puzzle',puzzle);\n\n    var locationArray = [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],\n                         [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],\n                         [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],\n                         [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],\n                         [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],\n                         [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],\n                         [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],\n                         [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],\n                         [8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8]];\n\n    this.shuffleArray(locationArray);\n    //console.log(locationArray);\n    location = locationArray.pop();\n    //console.log('la',locationArray);\n    //console.log('l',location);\nvar cntr=0;\n    while(locationArray.length != 0){\n      cntr++;\n      puzzle[location[0]][location[1]].value = undefined;\n      puzzle[location[0]][location[1]].given = false;\n      //break;\n      if(this.uniqueSolve(puzzle)==false){\n        console.log(\"in here\");\n        puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n        puzzle[location[0]][location[1]].given = true;\n      }\n      //break;\n      if(cntr==54){break;}\n      location = locationArray.pop();\n   }\n\n   //console.log('puzzle2',puzzle);\n   //can return puzzle and update state in before fn\n   // var squares =new Array(nrows);\n   //\n   // for (var i=0;i<nrows;i++) {\n   //   squares[i]=new Array(ncols)\n   // }\n   //\n   // for (var i=0;i<nrows;i++) {\n   //    for (var j=0;j<nrows;j++) {\n   //      squares[i][j] = {value:puzzle[i][j].value,pencilMark:[],visited:[]};\n   //    }\n   // }\n   //\n   // var solution = this.deepCopy(squares);\n   // this.setState({squares: squares, solution: solution}, function () {\n   //   //console.log('state2 updated');\n   // });\n   // const board = this.deepCopy(puzzle);\n   // this.setState({puzzle: puzzle, board: board}, function () {\n   //   //console.log('state2 updated');\n   // });\n   return puzzle;\n  }\n\n  uniqueSolve(puzzle){\n    var solutions =[];\n    this.solveSudoku(0,0,0,solutions,puzzle);\n    var numSolutions = solutions.length;\n    //console.log('numSolutions',numSolutions);\n    //console.log('Solutions',solutions);\n    if(numSolutions==0 || numSolutions>1){return false;}\n    else {return true;}\n  }\n\n  solveSudoku(row, col, cnt, solutions, board){\n    //if(cnt>1){return true;}\n//console.log(\"in solvesudoku\");\n\n//console.log(\"in solvesudokuboard\",board);\n    if(row>=9){\n      cnt=cnt+1;;\n      solutions.push(board);\n      return true;\n    }\n//console.log(\"in solvesudoku\");\n\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){cnt=cnt+1;\n      solutions.push(board);\n      return true;}\n      //console.log('r,c',row,col);\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n    c = (c<=8)?c  :0;\n\n// console.log('r c in b',row,col);\n//     console.log('b rc',board[row][col]);\n//console.log('b pm',pencilMarks);\n    for(let i=0; i<pencilMarks.length; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      this.solveSudoku(r,c,cnt,solutions,board);\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n    }\n\n    return false;\n  }\n\n  validPencilMarks(row,col,board){\n    var pM = [1,2,3,4,5,6,7,8,9];\n    pM = this.checkCell(row,col,pM,board);\n    pM = this.checkRow(row,col,pM,board);\n    pM = this.checkCol(row,col,pM,board);\n    return pM;\n  }\n\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  // null => null\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          // It's an array, create a new array with\n                          // deep copies of the entries\n                          console.log(\"i hee\",obj)\n                          rv = obj.map(o => this.deepCopy(o));\n                            console.log(\"i hee\",rv)\n                          break;\n                      default:\n                      console.log(\"i heer 2\",obj)\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                            console.log(\"i heer 2 pk\",prev,key,obj[key])\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              // It's a primitive, copy via assignment\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  getStartIndex(index){\n    switch(index) {\n        case 0:\n        case 1:\n        case 2:\n            return 0;\n        case 3:\n        case 4:\n        case 5:\n            return 3;\n        case 6:\n        case 7:\n        case 8:\n            return 6;\n        default:\n            return 0;\n    }\n  }\n\n\n\n  checkCell = (r,c,numbers,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          if(squares[row][col].value != undefined){\n            if(numbers.indexOf(squares[row][col].value)!=-1){\n             numbers.splice(numbers.indexOf(squares[row][col].value),1);\n            }\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  checkRow = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].value != undefined){\n          if(numbers.indexOf(squares[r][i].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[r][i].value),1);\n          }\n        }\n      }\n    }\n      return numbers;\n  }\n\n\n\n  checkCol = (r,c,numbers,squares) => {\n\n    for(let i=0; i<9; i++){\n\n      if(i != r){\n        if(squares[i][c].value != undefined){\n          if(numbers.indexOf(squares[i][c].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[i][c].value),1);\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  onSeeSolutionsHandler(){\n\n    console.log('in onSeeSolutionsHandler before');\n    var buttonText = this.state.buttonText;\n    var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    var saved_board;\n    var board;\n\n    if(buttonText == \"See Solution\"){\n      buttonText  = \"Back To Puzzle\";\n      saved_board = this.deepCopy(this.state.board);\n      board       = this.deepCopy(this.state.solution);\n    } else {\n      buttonText  = \"See Solution\";\n      board       = this.deepCopy(this.state.saved_board);\n    }\n\n\n    console.log('in onSeeSolutionsHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onSeeSolutionsHandler fter b',this.state.board);\n      console.log('in onSeeSolutionsHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  onCellCheckHandler(){\n\n    console.log('in onCellCheckHandler before');\n    var board      = this.deepCopy(this.state.board);\n    var solution   = this.deepCopy(this.state.solution);\n    var cellCheck  = this.state.cellCheck.slice();\n    var saved_board;\n    var board;\nconsole.log(\"chk\",this.state.cellCheck);\n    for (var i=0;i<board.length;i++) {\n       for (var j=0;j<board[0].length;j++) {\n         if(board[i][j].value != undefined){\n           if(board[i][j].value != solution[i][j].value){\n             console.log(i,j,\"err\");\n             cellCheck[i][j]=true;\n           }\n       }\n    }\n  }\n\n    this.setState({cellCheck: cellCheck}, function () {\n      console.log('in onCellCheckHandler fter b',cellCheck);\n    });\n  }\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n        board[i][j].value = Number(event.target.value);\n\n        console.log(board[i][j].value,i,j);\n        //this.setState({board: board});\n        this.setState({board: board}, function () {\n          console.log('in val b',this.state.board);\n          console.log('in val pu',this.state.puzzle);\n        });\n    }\n  }\n\n  displayCell(i,j) {\n    return (\n      <Square\n        value={this.state.squares[i][j]?this.state.squares[i][j].value:\"\"}\n        //onClick={() => this.onClickHandler(i)}\n      />\n    );\n  }\n\n  displayCellCheck() {\n    return (\n    <Square_B\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onCellCheckHandler()}\n      value=\"How am I doing?\"\n    />\n  );\n  }\n\n  displayCellForm(i,j) {\n    return (\n      <Square_F\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n       //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n        onClick={ () => {const cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n          this.setState({cellCheck: cellCheck})  }}\n      />\n    );\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n      >\n        Play Again\n      </button>\n    );\n  }\n\n  displayStopCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onStopHandler()}\n      >\n        Stop\n      </button>\n    );\n  }\n\n  displaySeeSolutionsCell() {\n    return (\n      <Square_B\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n        value={this.state.buttonText}\n      />\n    );\n  }\n\n  displayProgressCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onStopHandler()}\n      >\n        How am I doing?\n      </button>\n    );\n  }\n\n  shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCell(0,0)}\n        {this.displayCell(0,1)}\n        {this.displayCell(0,2)}\n        {this.displayCell(0,3)}\n        {this.displayCell(0,4)}\n        {this.displayCell(0,5)}\n        {this.displayCell(0,6)}\n        {this.displayCell(0,7)}\n        {this.displayCell(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(1,0)}\n        {this.displayCell(1,1)}\n        {this.displayCell(1,2)}\n        {this.displayCell(1,3)}\n        {this.displayCell(1,4)}\n        {this.displayCell(1,5)}\n        {this.displayCell(1,6)}\n        {this.displayCell(1,7)}\n        {this.displayCell(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(2,0)}\n        {this.displayCell(2,1)}\n        {this.displayCell(2,2)}\n        {this.displayCell(2,3)}\n        {this.displayCell(2,4)}\n        {this.displayCell(2,5)}\n        {this.displayCell(2,6)}\n        {this.displayCell(2,7)}\n        {this.displayCell(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(3,0)}\n        {this.displayCell(3,1)}\n        {this.displayCell(3,2)}\n        {this.displayCell(3,3)}\n        {this.displayCell(3,4)}\n        {this.displayCell(3,5)}\n        {this.displayCell(3,6)}\n        {this.displayCell(3,7)}\n        {this.displayCell(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(4,0)}\n        {this.displayCell(4,1)}\n        {this.displayCell(4,2)}\n        {this.displayCell(4,3)}\n        {this.displayCell(4,4)}\n        {this.displayCell(4,5)}\n        {this.displayCell(4,6)}\n        {this.displayCell(4,7)}\n        {this.displayCell(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(5,0)}\n        {this.displayCell(5,1)}\n        {this.displayCell(5,2)}\n        {this.displayCell(5,3)}\n        {this.displayCell(5,4)}\n        {this.displayCell(5,5)}\n        {this.displayCell(5,6)}\n        {this.displayCell(5,7)}\n        {this.displayCell(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(6,0)}\n        {this.displayCell(6,1)}\n        {this.displayCell(6,2)}\n        {this.displayCell(6,3)}\n        {this.displayCell(6,4)}\n        {this.displayCell(6,5)}\n        {this.displayCell(6,6)}\n        {this.displayCell(6,7)}\n        {this.displayCell(6,8)}\n      </div>\n      // <div className=\"board-row\">\n      //   {this.displayCell(7,0)}\n      //   {this.displayCell(7,1)}\n      //   {this.displayCell(7,2)}\n      //   {this.displayCell(7,3)}\n      //   {this.displayCell(7,4)}\n      //   {this.displayCell(7,5)}\n      //   {this.displayCell(7,6)}\n      //   {this.displayCell(7,7)}\n      //   {this.displayCell(7,8)}\n      // </div>\n      <div className=\"board-row\">\n        {this.displayCell(8,0)}\n        {this.displayCell(8,1)}\n        {this.displayCell(8,2)}\n        {this.displayCell(8,3)}\n        {this.displayCell(8,4)}\n        {this.displayCell(8,5)}\n        {this.displayCell(8,6)}\n        {this.displayCell(8,7)}\n        {this.displayCell(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellForm(0,0)}\n        {this.displayCellForm(0,1)}\n        {this.displayCellForm(0,2)}\n        {this.displayCellForm(0,3)}\n        {this.displayCellForm(0,4)}\n        {this.displayCellForm(0,5)}\n        {this.displayCellForm(0,6)}\n        {this.displayCellForm(0,7)}\n        {this.displayCellForm(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(1,0)}\n        {this.displayCellForm(1,1)}\n        {this.displayCellForm(1,2)}\n        {this.displayCellForm(1,3)}\n        {this.displayCellForm(1,4)}\n        {this.displayCellForm(1,5)}\n        {this.displayCellForm(1,6)}\n        {this.displayCellForm(1,7)}\n        {this.displayCellForm(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(2,0)}\n        {this.displayCellForm(2,1)}\n        {this.displayCellForm(2,2)}\n        {this.displayCellForm(2,3)}\n        {this.displayCellForm(2,4)}\n        {this.displayCellForm(2,5)}\n        {this.displayCellForm(2,6)}\n        {this.displayCellForm(2,7)}\n        {this.displayCellForm(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(3,0)}\n        {this.displayCellForm(3,1)}\n        {this.displayCellForm(3,2)}\n        {this.displayCellForm(3,3)}\n        {this.displayCellForm(3,4)}\n        {this.displayCellForm(3,5)}\n        {this.displayCellForm(3,6)}\n        {this.displayCellForm(3,7)}\n        {this.displayCellForm(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(4,0)}\n        {this.displayCellForm(4,1)}\n        {this.displayCellForm(4,2)}\n        {this.displayCellForm(4,3)}\n        {this.displayCellForm(4,4)}\n        {this.displayCellForm(4,5)}\n        {this.displayCellForm(4,6)}\n        {this.displayCellForm(4,7)}\n        {this.displayCellForm(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(5,0)}\n        {this.displayCellForm(5,1)}\n        {this.displayCellForm(5,2)}\n        {this.displayCellForm(5,3)}\n        {this.displayCellForm(5,4)}\n        {this.displayCellForm(5,5)}\n        {this.displayCellForm(5,6)}\n        {this.displayCellForm(5,7)}\n        {this.displayCellForm(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(6,0)}\n        {this.displayCellForm(6,1)}\n        {this.displayCellForm(6,2)}\n        {this.displayCellForm(6,3)}\n        {this.displayCellForm(6,4)}\n        {this.displayCellForm(6,5)}\n        {this.displayCellForm(6,6)}\n        {this.displayCellForm(6,7)}\n        {this.displayCellForm(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(7,0)}\n        {this.displayCellForm(7,1)}\n        {this.displayCellForm(7,2)}\n        {this.displayCellForm(7,3)}\n        {this.displayCellForm(7,4)}\n        {this.displayCellForm(7,5)}\n        {this.displayCellForm(7,6)}\n        {this.displayCellForm(7,7)}\n        {this.displayCellForm(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(8,0)}\n        {this.displayCellForm(8,1)}\n        {this.displayCellForm(8,2)}\n        {this.displayCellForm(8,3)}\n        {this.displayCellForm(8,4)}\n        {this.displayCellForm(8,5)}\n        {this.displayCellForm(8,6)}\n        {this.displayCellForm(8,7)}\n        {this.displayCellForm(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySeeSolutionsCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellCheck()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass SudokuPuzzleSolver extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Sudoku </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default SudokuPuzzleSolver;\n"]},"metadata":{},"sourceType":"module"}