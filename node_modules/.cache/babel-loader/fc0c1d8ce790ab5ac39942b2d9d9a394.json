{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolverForLS.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: \"grey\",\n      color: \"white\",\n      height: \"50px\",\n      width: \"50px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction SquareB(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction SquareF(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    style: props.styleSettings,\n    key: props.keyValue,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.hiddenSingle = function (r, c, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      var val = squares[r][c].value;\n      var pM = squares[r][c].pencilMark; //console.log('updateCell',squares);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            //console.log('updateCell sq,row,col',row,col,squares[row][col]);\n            if (squares[row][col].given == false && squares[row][col].pencilMark.length != 0) {\n              if (squares[row][col].pencilMark.indexOf(val) != -1) {\n                squares[row][col].pencilMark.splice(squares[row][col].pencilMark.indexOf(val), 1);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != undefined) {\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              }\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.updateCell = function (r, c, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      var val = squares[r][c].value; //console.log('updateCell',squares);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            //console.log('updateCell sq,row,col',row,col,squares[row][col]);\n            if (squares[row][col].given == false && squares[row][col].pencilMark.length != 0) {\n              if (squares[row][col].pencilMark.indexOf(val) != -1) {\n                squares[row][col].pencilMark.splice(squares[row][col].pencilMark.indexOf(val), 1);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != undefined) {\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.updateRow = function (r, c, squares) {\n      var val = squares[r][c].value;\n\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].given == false && squares[r][i].pencilMark.length != 0) {\n            if (squares[r][i].pencilMark.indexOf(val) != -1) {\n              squares[r][i].pencilMark.splice(squares[r][i].pencilMark.indexOf(val), 1);\n            }\n          }\n        }\n      }\n    };\n\n    _this.hiddenSingleRow = function (r, c, squares) {\n      //var val = squares[r][c].value;\n      var pM = squares[r][c].pencilMark; //var flag = false;\n\n      for (var j = 0; j < squares[r][c].pencilMark; j++) {\n        var val = squares[r][c].pencilMark[j];\n\n        for (var i = 0; i < 9; i++) {\n          if (i != c) {\n            if (squares[r][i].given == false && squares[r][i].pencilMark.length != 0) {\n              if (squares[r][i].pencilMark.indexOf(val) != -1) {\n                break;\n              }\n            }\n          } //i!=c\n\n\n          if (i == 8) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n            {\n              squares[r][c].value = val;\n              squares[r][c].given = true;\n\n              _this.updatePencilMarks(r, c, squares);\n\n              return true;\n            }\n        } //for i\n\n      } //for pm\n\n\n      return false;\n    };\n\n    _this.hiddenSingleCol = function (r, c, squares) {\n      var pM = squares[r][c].pencilMark;\n\n      for (var j = 0; j < squares[r][c].pencilMark; j++) {\n        var val = squares[r][c].pencilMark[j];\n\n        for (var i = 0; i < 9; i++) {\n          if (i != r) {\n            if (squares[i][c].given == false && squares[i][c].pencilMark.length != 0) {\n              if (squares[i][c].pencilMark.indexOf(val) != -1) {\n                break;\n              }\n            }\n          } //i!=c\n\n\n          if (i == 8) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n            {\n              squares[r][c].value = val;\n              squares[r][c].given = true;\n\n              _this.updatePencilMarks(r, c, squares);\n\n              return true;\n            }\n        } //for i\n\n      } //for pm\n\n\n      return false;\n    };\n\n    _this.hiddenSingleCell = function (r, c, squares) {\n      var pM = squares[r][c].pencilMark;\n\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      var col;\n\n      for (var j = 0; j < squares[r][c].pencilMark; j++) {\n        var val = squares[r][c].pencilMark[j];\n        var flag = false;\n\n        for (var row = rowStart; row <= rowStart + 2; row++) {\n          for (col = colStart; col <= colStart + 2; col++) {\n            if (!(row == r && col == c)) {\n              if (squares[row][col].given == false && squares[row][col].pencilMark.length != 0) {\n                if (squares[row][col].pencilMark.indexOf(val) != -1) {\n                  flag = true;\n                  break;\n                }\n              }\n            } //!(row == r && col == c)\n\n          } //for col\n\n\n          if (flag == true) {\n            break;\n          }\n\n          if (row == rowStart + 2 && col == colStart + 2) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n            {\n              squares[r][c].value = val;\n              squares[r][c].given = true;\n\n              _this.updatePencilMarks(r, c, squares);\n\n              return true;\n            }\n        } //for row\n\n      } //for pm\n\n\n      return false;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != undefined) {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.updateCol = function (r, c, squares) {\n      var val = squares[r][c].value;\n\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].given == false && squares[i][c].pencilMark.length != 0) {\n            if (squares[i][c].pencilMark.indexOf(val) != -1) {\n              squares[i][c].pencilMark.splice(squares[i][c].pencilMark.indexOf(val), 1);\n            }\n          }\n        }\n      }\n    };\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true;\n        console.log(board[i][j].value, i, j);\n        console.log(board[i][j].given, i, j); //this.setState({board: board});\n\n        _this.setState({\n          board: board\n        }, function () {\n          console.log('in val b', this.state.board);\n          console.log('in val pu', this.state.puzzle);\n        });\n      } else {\n        board[i][j].value = undefined;\n        board[i][j].given = false; //check logic\n\n        _this.setState({\n          board: board\n        }, function () {\n          console.log('in val b', this.state.board);\n          console.log('in val pu', this.state.puzzle);\n        });\n\n        console.log(board[i][j].value, i, j);\n        console.log(board[i][j].given, i, j);\n      }\n    };\n\n    _this.state = {\n      cellValues: Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }),\n      squares: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: []\n        });\n      }),\n      solution: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: []\n        });\n      }),\n      puzzle: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      saved_board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      cellCheck: Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }),\n      buttonText: \"See Solution\" // };\n      // this.valChangeHandler = this.valChangeHandler.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      var solution = this.getSolution();\n      var puzzle = this.getUniquePuzzle(solution); //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n\n      var board = this.deepCopy(puzzle);\n      var saved_board = this.deepCopy(puzzle);\n      var buttonText = \"See Solution\";\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }); //console.log('in onPlayAgainHandler before b',board);\n\n      this.setState({\n        solution: solution,\n        puzzle: puzzle,\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onPlayAgainHandler fter b', this.state.board);\n        console.log('in onPlayAgainHandler fter s', this.state.solution);\n        console.log('in onPlayAgainHandler fter p', this.state.puzzle);\n        console.log('in onPlayAgainHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onSolveHandler\",\n    value: function onSolveHandler() {\n      //var solution = this.getSolution();\n      //var puzzle = this.getUniquePuzzle(solution);\n      //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n      var puzzle = this.deepCopy(this.state.board);\n      console.log('in onSolveHandler bef p', puzzle);\n      this.solveSudokuO(0, 0, 0, puzzle); //var saved_board = this.deepCopy(puzzle);\n      //var buttonText  = \"See Solution\";\n      //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n\n      console.log('in onSolveHandler af p', puzzle); // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      //   console.log('in onPlayAgainHandler fter b',this.state.board);\n      //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n      //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n      // });\n    }\n  }, {\n    key: \"onSolveHandlerNRBS\",\n    value: function onSolveHandlerNRBS() {\n      //var solution = this.getSolution();\n      //var puzzle = this.getUniquePuzzle(solution);\n      //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n      var puzzle = this.deepCopy(this.state.board);\n      console.log('in onSolveHandlerNRBS bef p', puzzle);\n      this.getSolutionNRBS(puzzle); //var saved_board = this.deepCopy(puzzle);\n      //var buttonText  = \"See Solution\";\n      //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n\n      console.log('in onSolveHandlerNRBS af p', puzzle); // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      //   console.log('in onPlayAgainHandler fter b',this.state.board);\n      //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n      //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n      // });\n    } //   onSolveHandlerLS() {\n    //\n    //     //var solution = this.getSolution();\n    //     //var puzzle = this.getUniquePuzzle(solution);\n    //\n    //     //this.getSolution();\n    //     //this.getUniquePuzzle(this.state.solution);\n    //\n    //     var puzzle = this.deepCopy(this.state.board);\n    //     console.log('in onSolveHandlerLS bef p',puzzle);\n    //     this.getSolutionLS(puzzle);\n    //\n    //     //var saved_board = this.deepCopy(puzzle);\n    //     //var buttonText  = \"See Solution\";\n    //     //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    //     console.log('in onSolveHandlerLS af p',puzzle);\n    //\n    //     // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    //     //   console.log('in onPlayAgainHandler fter b',this.state.board);\n    //     //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n    //     //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n    //     //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    //     // });\n    //   }\n    //\n    //   getSolutionLS(puzzle){\n    //     var nrows = 9;\n    //     var ncols = 9;\n    //     var squares = this.deepCopy(puzzle);\n    //     for (var r=0;r<nrows;r++) {\n    //        for (var c=0;c<ncols;c++) {\n    //          squares[r][c].pencilMark = [];\n    //        }\n    //      }\n    //\n    //     //init board with valid pencilMarks\n    //\n    //     for (var r=0;r<nrows;r++) {\n    //        for (var c=0;c<ncols;c++) {\n    //          if(squares[r][c].given == true){continue;}\n    //\n    //          var pencilMarks = this.validPencilMarks(r,c,squares);\n    //\n    //          if(pencilMarks.length == 0){console.log(\"No solution!\");return false;}\n    //          else if(pencilMarks.length == 1){//pm going to []\n    //              squares[r][c].value = pencilMarks[0];\n    //              squares[r][c].given = true;\n    //             console.log('pencilMarks.length == 1  r c ',r,c,squares[r][c]);\n    //              this.updatePencilMarks(r,c,squares);\n    //          } else {\n    //            for(let rn=0; rn<pencilMarks.length; rn++){\n    //              squares[r][c].pencilMark.push(pencilMarks[rn]);\n    //            }\n    //          }\n    //        }\n    //     }\n    //\n    //     console.log(\"sq LS init\",squares);\n    // var given = 0;\n    // var cnt = 0;\n    //     while(cnt < 81){\n    //       var given = 0;\n    //       cnt=cnt+1;\n    // console.log('given1',given);\n    //       for (var r=0;r<nrows;r++) {\n    //          for (var c=0;c<ncols;c++) {\n    //            if(squares[r][c].given == true){given = given + 1; continue;}\n    //\n    //            //this.applyStrategies(r,c,squares);\n    //\n    //            if(squares[r][c].pencilMark.length == 0){console.log(\"No solution!\");return false;}\n    //            else if(squares[r][c].pencilMark.length == 1){\n    //                squares[r][c].value = pencilMarks[0];\n    //                squares[r][c].given = true;\n    //                this.updatePencilMarks(r,c,squares);\n    //            }\n    //          }\n    //       }\n    // console.log('given',given);if(given == 81){break;}\n    //     }\n    // console.log(\"sq LS \",squares);\n    //   }\n\n  }, {\n    key: \"getSolutionNRBS\",\n    value: function getSolutionNRBS(puzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows); //var squares = puzzle;\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: puzzle[i][j].value,\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      console.log(\"sq\", squares); //\n      // const cellValues = this.state.cellValues.slice();\n      // const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n      // this.shuffleArray(rowOneSeed);\n      // for(let i=0; i<rowOneSeed.length; i++){\n      //     squares[0][i].value = rowOneSeed[i];\n      // }\n      //\n      // this.setState({squares: squares});\n\n      var iarr = [];\n      var numbers = [];\n      var cnt = 0;\n      var loopcnt = 0;\n      var looparr = [];\n\n      for (var r = 0; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (puzzle[r][c].given == true) {\n            continue;\n          }\n\n          if (squares[r][c].visited.length == 0) {\n            numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n          }\n\n          numbers = this.checkCell(r, c, numbers, squares);\n          numbers = this.checkRow(r, c, numbers, squares);\n          numbers = this.checkCol(r, c, numbers, squares);\n\n          if (numbers.length != 0) {\n            var randIndex = Math.floor(Math.random() * (numbers.length - 1));\n            iarr.push(randIndex);\n            var val = numbers[randIndex];\n            squares[r][c].value = val;\n            numbers.splice(randIndex, 1);\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n\n            squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r, c]);\n\n            while (r >= 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r < 0) {\n                break;\n              }\n\n              if (puzzle[r][c].given == true) {\n                continue;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n        }\n      }\n\n      console.log('iarr', iarr, 'looparr', looparr);\n      console.log('loopcnt', loopcnt); //this.setState({squares: squares, cellValues: cellValues});\n      // var solution = this.deepCopy(squares);\n      // this.setState({squares: squares, solution: solution}, function () {\n      //   console.log('state updated');\n      // });\n      // console.log('st',this.state.squares);\n\n      console.log('st', squares);\n      return squares;\n    }\n  }, {\n    key: \"getSolution\",\n    value: function getSolution() {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: undefined,\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      var cellValues = this.state.cellValues.slice();\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()).map(function (x) {\n        return ++x;\n      });\n\n      this.shuffleArray(rowOneSeed);\n\n      for (var _i = 0; _i < rowOneSeed.length; _i++) {\n        squares[0][_i].value = rowOneSeed[_i];\n      }\n\n      this.setState({\n        squares: squares\n      });\n      var iarr = [];\n      var numbers = [];\n      var cnt = 0;\n      var loopcnt = 0;\n      var looparr = [];\n\n      for (var r = 1; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (squares[r][c].visited.length == 0) {\n            numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n          }\n\n          numbers = this.checkCell(r, c, numbers, squares);\n          numbers = this.checkRow(r, c, numbers, squares);\n          numbers = this.checkCol(r, c, numbers, squares);\n\n          if (numbers.length != 0) {\n            var randIndex = Math.floor(Math.random() * (numbers.length - 1));\n            iarr.push(randIndex);\n            var val = numbers[randIndex];\n            squares[r][c].value = val;\n            numbers.splice(randIndex, 1);\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n\n            squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r, c]);\n\n            while (r != 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r <= 0) {\n                break;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n        }\n      }\n\n      console.log('iarr', iarr, 'looparr', looparr);\n      console.log('loopcnt', loopcnt); //this.setState({squares: squares, cellValues: cellValues});\n      // var solution = this.deepCopy(squares);\n      // this.setState({squares: squares, solution: solution}, function () {\n      //   console.log('state updated');\n      // });\n\n      console.log('st', this.state.squares);\n      return squares;\n    } //getUniquePuzzle(solution){\n\n  }, {\n    key: \"getUniquePuzzle\",\n    value: function getUniquePuzzle(solvedPuzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var location; //var solvedPuzzle = solution;\n\n      var puzzle = new Array(nrows);\n      console.log('sol', solvedPuzzle);\n\n      for (var i = 0; i < nrows; i++) {\n        puzzle[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          puzzle[i][j] = {\n            value: solvedPuzzle[i][j].value,\n            given: true\n          };\n        }\n      }\n\n      console.log('puzzle', puzzle);\n      var locationArray = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]];\n      this.shuffleArray(locationArray); //console.log(locationArray);\n\n      location = locationArray.pop(); //console.log('la',locationArray);\n      //console.log('l',location);\n\n      var cntr = 0;\n\n      while (locationArray.length != 0) {\n        cntr++;\n        puzzle[location[0]][location[1]].value = undefined;\n        puzzle[location[0]][location[1]].given = false; //break;\n\n        if (this.uniqueSolve(puzzle) == false) {\n          console.log(\"in here\");\n          puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n          puzzle[location[0]][location[1]].given = true;\n        } //break;\n\n\n        if (cntr == 54) {\n          break;\n        }\n\n        location = locationArray.pop();\n      }\n\n      return puzzle;\n    }\n  }, {\n    key: \"uniqueSolve\",\n    value: function uniqueSolve(puzzle) {\n      var solutions = [];\n      this.solveSudoku(0, 0, 0, solutions, puzzle);\n      var numSolutions = solutions.length; //console.log('numSolutions',numSolutions);\n      //console.log('Solutions',solutions);\n\n      if (numSolutions == 0 || numSolutions > 1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"solveSudoku\",\n    value: function solveSudoku(row, col, cnt, solutions, board) {\n      //if(cnt>1){return true;}\n      //console.log(\"in solvesudoku\");\n      //console.log(\"in solvesudokuboard\",board);\n      if (row >= 9) {\n        cnt = cnt + 1;\n        ;\n        solutions.push(board);\n        return true;\n      } //console.log(\"in solvesudoku\");\n\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          cnt = cnt + 1;\n          solutions.push(board);\n          return true;\n        } //console.log('r,c',row,col);\n\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0; // console.log('r c in b',row,col);\n      //     console.log('b rc',board[row][col]);\n      //console.log('b pm',pencilMarks);\n\n      for (var i = 0; i < pencilMarks.length; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n        this.solveSudoku(r, c, cnt, solutions, board);\n        board[row][col].value = undefined;\n        board[row][col].given = false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"solveSudokuO\",\n    value: function solveSudokuO(row, col) {\n      var cnt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var board = arguments.length > 3 ? arguments[3] : undefined;\n      //if(cnt>1){return true;}\n      //console.log(\"in solvesudoku\");\n      //cnt=cnt+1;\n      console.log(\"in solvesudokuboard\", board);\n      console.log(\"in solvesudokuboard cnt\", cnt);\n\n      if (row >= 9) {\n        //cnt=cnt+1;;\n        //solutions.push(board);\n        return true;\n      } //if(cnt==1){return true;}\n      //console.log(\"in solvesudoku\");\n\n\n      cnt = cnt + 1;\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          //cnt=cnt+1;\n          //solutions.push(board);\n          return true;\n        } //console.log('r,c',row,col);\n\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0;\n      console.log('row col in b', row, col);\n      console.log('r c in b', r, c); //     console.log('b rc',board[row][col]);\n\n      console.log('b pm', pencilMarks);\n\n      for (var i = 0; i < pencilMarks.length; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n        console.log(\"in for pencilMarks[i]\", pencilMarks[i]);\n        console.log(\"in for board[row][col].value\", board[row][col].value);\n        console.log(\"in for board[row][col].given\", board[row][col].given);\n        console.log(\"in for b\", board);\n\n        if (this.solveSudokuO(r, c, cnt, board)) {\n          return true;\n        }\n\n        board[row][col].value = undefined;\n        board[row][col].given = false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            // null => null\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                // It's an array, create a new array with\n                // deep copies of the entries\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                break;\n\n              default:\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          // It's a primitive, copy via assignment\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"onSolveHandlerLS\",\n    value: function onSolveHandlerLS() {\n      //var solution = this.getSolution();\n      //var puzzle = this.getUniquePuzzle(solution);\n      //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n      var puzzle = this.deepCopy(this.state.board);\n      console.log('in onSolveHandlerLS bef p', puzzle);\n      this.getSolutionLS(puzzle); //var saved_board = this.deepCopy(puzzle);\n      //var buttonText  = \"See Solution\";\n      //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n\n      console.log('in onSolveHandlerLS af p', puzzle); // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      //   console.log('in onPlayAgainHandler fter b',this.state.board);\n      //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n      //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n      // });\n    }\n  }, {\n    key: \"getSolutionLS\",\n    value: function getSolutionLS(puzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = this.deepCopy(puzzle);\n\n      for (var r = 0; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          squares[r][c].pencilMark = [];\n        }\n      } //init board with valid pencilMarks\n\n\n      for (var r = 0; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (squares[r][c].given == true) {\n            continue;\n          }\n\n          var pencilMarks = this.validPencilMarks(r, c, squares);\n\n          if (pencilMarks.length == 0) {\n            console.log(\"No solution!\");\n            return false;\n          } else if (pencilMarks.length == 1) {\n            //pm going to []\n            squares[r][c].value = pencilMarks[0];\n            squares[r][c].given = true;\n            console.log('pencilMarks.length == 1  r c ', r, c, squares[r][c]);\n            this.updatePencilMarks(r, c, squares);\n          } else {\n            for (var rn = 0; rn < pencilMarks.length; rn++) {\n              squares[r][c].pencilMark.push(pencilMarks[rn]);\n            }\n          }\n        }\n      }\n\n      console.log(\"sq LS init\", squares);\n      var given = 0;\n      var cnt = 0;\n\n      while (cnt < 81) {\n        var given = 0;\n        cnt = cnt + 1;\n        console.log('given1', given);\n\n        for (var r = 0; r < nrows; r++) {\n          for (var c = 0; c < ncols; c++) {\n            if (squares[r][c].given == true) {\n              given = given + 1;\n              continue;\n            } //this.applyStrategies(r,c,squares);\n\n\n            if (squares[r][c].pencilMark.length == 0) {\n              console.log(\"No solution!\");\n              return false;\n            } else if (squares[r][c].pencilMark.length == 1) {\n              squares[r][c].value = pencilMarks[0];\n              squares[r][c].given = true;\n              this.updatePencilMarks(r, c, squares);\n            }\n          }\n        }\n\n        console.log('given', given);\n\n        if (given == 81) {\n          break;\n        }\n      }\n\n      console.log(\"sq LS \", squares);\n    }\n  }, {\n    key: \"validPencilMarks\",\n    value: function validPencilMarks(row, col, board) {\n      var pM = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      pM = this.checkCell(row, col, pM, board);\n      pM = this.checkRow(row, col, pM, board);\n      pM = this.checkCol(row, col, pM, board);\n      return pM;\n    }\n  }, {\n    key: \"updatePencilMarks\",\n    value: function updatePencilMarks(row, col, squares) {\n      //console.log('updatePencilMarks',squares);\n      this.updateCell(row, col, squares);\n      this.updateRow(row, col, squares);\n      this.updateCol(row, col, squares);\n    }\n  }, {\n    key: \"applyStrategies\",\n    value: function applyStrategies(row, col, squares) {\n      //console.log('updatePencilMarks',squares);\n      this.hiddenSingle(row, col, squares); // this.updateRow(row,col,squares);\n      // this.updateCol(row,col,squares);\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      console.log('in onSeeSolutionsHandler before');\n      var buttonText = this.state.buttonText;\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      });\n      var saved_board;\n      var board;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_board = this.deepCopy(this.state.board);\n        board = this.deepCopy(this.state.solution);\n      } else {\n        buttonText = \"See Solution\";\n        board = this.deepCopy(this.state.saved_board);\n      }\n\n      console.log('in onSeeSolutionsHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onSeeSolutionsHandler fter b', this.state.board);\n        console.log('in onSeeSolutionsHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onResetHandler\",\n    value: function onResetHandler() {\n      var board = this.deepCopy(this.state.puzzle);\n      this.setState({\n        board: board\n      }, function () {//console.log('in onResetHandler fter b',this.state.board);\n      });\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this3 = this;\n\n      return React.createElement(SquareF, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        styleSettings: ((this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n          fontWeight: 'bold'\n        } : {\n          fontWeight: 'normal'\n        }, this.state.cellCheck[i][j] ? {\n          color: \"red\"\n        } : {\n          color: \"black\"\n        }),\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this3.valChangeHandler(i, j, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this4 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this4.onPlayAgainHandler();\n        },\n        value: \"Play Again\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayResetCell\",\n    value: function displayResetCell() {\n      var _this5 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onResetHandler();\n        },\n        value: \"Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayClearCell\",\n    value: function displayClearCell() {\n      var _this6 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          var board = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n          var puzzle = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n\n          _this6.setState({\n            board: board,\n            puzzle: puzzle\n          });\n        },\n        value: \"Clear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this7 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this7.onSeeSolutionsHandler();\n        },\n        value: this.state.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCell\",\n    value: function displaySolveCell() {\n      var _this8 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this8.onSolveHandler();\n        },\n        value: \"Solve Using Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellLS\",\n    value: function displaySolveCellLS() {\n      var _this9 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this9.onSolveHandlerLS();\n        },\n        value: \"Solve Using Strategy Based Logical Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellNRBS\",\n    value: function displaySolveCellNRBS() {\n      var _this10 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this10.onSolveHandlerNRBS();\n        },\n        value: \"Solve Using Non-Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2), this.displayCellForm(0, 3), this.displayCellForm(0, 4), this.displayCellForm(0, 5), this.displayCellForm(0, 6), this.displayCellForm(0, 7), this.displayCellForm(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2), this.displayCellForm(1, 3), this.displayCellForm(1, 4), this.displayCellForm(1, 5), this.displayCellForm(1, 6), this.displayCellForm(1, 7), this.displayCellForm(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      }, this.displayCellForm(2, 0), this.displayCellForm(2, 1), this.displayCellForm(2, 2), this.displayCellForm(2, 3), this.displayCellForm(2, 4), this.displayCellForm(2, 5), this.displayCellForm(2, 6), this.displayCellForm(2, 7), this.displayCellForm(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, this.displayCellForm(3, 0), this.displayCellForm(3, 1), this.displayCellForm(3, 2), this.displayCellForm(3, 3), this.displayCellForm(3, 4), this.displayCellForm(3, 5), this.displayCellForm(3, 6), this.displayCellForm(3, 7), this.displayCellForm(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, this.displayCellForm(4, 0), this.displayCellForm(4, 1), this.displayCellForm(4, 2), this.displayCellForm(4, 3), this.displayCellForm(4, 4), this.displayCellForm(4, 5), this.displayCellForm(4, 6), this.displayCellForm(4, 7), this.displayCellForm(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1146\n        },\n        __self: this\n      }, this.displayCellForm(5, 0), this.displayCellForm(5, 1), this.displayCellForm(5, 2), this.displayCellForm(5, 3), this.displayCellForm(5, 4), this.displayCellForm(5, 5), this.displayCellForm(5, 6), this.displayCellForm(5, 7), this.displayCellForm(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157\n        },\n        __self: this\n      }, this.displayCellForm(6, 0), this.displayCellForm(6, 1), this.displayCellForm(6, 2), this.displayCellForm(6, 3), this.displayCellForm(6, 4), this.displayCellForm(6, 5), this.displayCellForm(6, 6), this.displayCellForm(6, 7), this.displayCellForm(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1168\n        },\n        __self: this\n      }, this.displayCellForm(7, 0), this.displayCellForm(7, 1), this.displayCellForm(7, 2), this.displayCellForm(7, 3), this.displayCellForm(7, 4), this.displayCellForm(7, 5), this.displayCellForm(7, 6), this.displayCellForm(7, 7), this.displayCellForm(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1179\n        },\n        __self: this\n      }, this.displayCellForm(8, 0), this.displayCellForm(8, 1), this.displayCellForm(8, 2), this.displayCellForm(8, 3), this.displayCellForm(8, 4), this.displayCellForm(8, 5), this.displayCellForm(8, 6), this.displayCellForm(8, 7), this.displayCellForm(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191\n        },\n        __self: this\n      }, this.displaySolveCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1195\n        },\n        __self: this\n      }, this.displaySolveCellNRBS()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199\n        },\n        __self: this\n      }, this.displaySolveCellLS()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1203\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }, this.displayResetCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1216\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1217\n        },\n        __self: this\n      }, this.displayClearCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar SudokuPuzzleSolverForLS =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SudokuPuzzleSolverForLS, _React$Component2);\n\n  function SudokuPuzzleSolverForLS() {\n    _classCallCheck(this, SudokuPuzzleSolverForLS);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SudokuPuzzleSolverForLS).apply(this, arguments));\n  }\n\n  _createClass(SudokuPuzzleSolverForLS, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229\n        },\n        __self: this\n      }, \" Sudoku \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SudokuPuzzleSolverForLS;\n}(React.Component);\n\nexport default SudokuPuzzleSolverForLS;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolverForLS.js"],"names":["React","Component","Square","props","backgroundColor","color","height","width","onClick","value","SquareB","style","SquareF","readOnlyVal","styleSettings","keyValue","defaultValue","onChange","Board","hiddenSingle","r","c","squares","rowStart","getStartIndex","colStart","val","pM","pencilMark","row","col","given","length","indexOf","splice","checkCell","numbers","undefined","updateCell","checkRow","i","updateRow","hiddenSingleRow","j","updatePencilMarks","hiddenSingleCol","hiddenSingleCell","flag","checkCol","updateCol","valChangeHandler","event","board","deepCopy","state","target","Number","console","log","setState","puzzle","cellValues","Array","fill","map","visited","solution","saved_board","cellCheck","buttonText","getSolution","getUniquePuzzle","solveSudokuO","getSolutionNRBS","nrows","ncols","iarr","cnt","loopcnt","looparr","randIndex","Math","floor","random","push","rn","pop","slice","rowOneSeed","keys","x","shuffleArray","solvedPuzzle","location","locationArray","cntr","uniqueSolve","solutions","solveSudoku","numSolutions","pencilMarks","validPencilMarks","obj","rv","toString","call","o","Object","reduce","prev","key","index","getSolutionLS","fontWeight","onPlayAgainHandler","onResetHandler","onSeeSolutionsHandler","onSolveHandler","onSolveHandlerLS","onSolveHandlerNRBS","array","temp","displayCellForm","displaySolveCell","displaySolveCellNRBS","displaySolveCellLS","displayPlayAgainCell","displaySeeSolutionsCell","displayResetCell","displayClearCell","SudokuPuzzleSolverForLS"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >{props.value}\n    </button>\n  );\n}\n\nfunction SquareB(props) {\n    return (\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function SquareF(props) {\n      return (\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            style={props.styleSettings}\n            key={props.keyValue}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n\n    );\n  }\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: Array(9).fill(false).map(() => new Array(9).fill(false)),\n      squares: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:[]})),\n      solution: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:[]})),\n      puzzle: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      board: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      saved_board:Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      cellCheck: Array(9).fill(false).map(() => new Array(9).fill(false)),\n      buttonText:\"See Solution\"\n      // };\n      // this.valChangeHandler = this.valChangeHandler.bind(this);\n\n      };\n  }\n\n\n  onPlayAgainHandler() {\n\n\n    var solution = this.getSolution();\n    var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var board = this.deepCopy(puzzle);\n    var saved_board = this.deepCopy(puzzle);\n    var buttonText  = \"See Solution\";\n    var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    //console.log('in onPlayAgainHandler before b',board);\n\n    this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onPlayAgainHandler fter b',this.state.board);\n      console.log('in onPlayAgainHandler fter s',this.state.solution);\n      console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  onSolveHandler() {\n\n    //var solution = this.getSolution();\n    //var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var puzzle = this.deepCopy(this.state.board);\n    console.log('in onSolveHandler bef p',puzzle);\n    this.solveSudokuO(0,0,0,puzzle);\n\n    //var saved_board = this.deepCopy(puzzle);\n    //var buttonText  = \"See Solution\";\n    //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    console.log('in onSolveHandler af p',puzzle);\n\n    // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    //   console.log('in onPlayAgainHandler fter b',this.state.board);\n    //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n    //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n    //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    // });\n  }\n\n  onSolveHandlerNRBS() {\n\n    //var solution = this.getSolution();\n    //var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var puzzle = this.deepCopy(this.state.board);\n    console.log('in onSolveHandlerNRBS bef p',puzzle);\n    this.getSolutionNRBS(puzzle);\n\n    //var saved_board = this.deepCopy(puzzle);\n    //var buttonText  = \"See Solution\";\n    //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    console.log('in onSolveHandlerNRBS af p',puzzle);\n\n    // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    //   console.log('in onPlayAgainHandler fter b',this.state.board);\n    //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n    //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n    //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    // });\n  }\n\n//   onSolveHandlerLS() {\n//\n//     //var solution = this.getSolution();\n//     //var puzzle = this.getUniquePuzzle(solution);\n//\n//     //this.getSolution();\n//     //this.getUniquePuzzle(this.state.solution);\n//\n//     var puzzle = this.deepCopy(this.state.board);\n//     console.log('in onSolveHandlerLS bef p',puzzle);\n//     this.getSolutionLS(puzzle);\n//\n//     //var saved_board = this.deepCopy(puzzle);\n//     //var buttonText  = \"See Solution\";\n//     //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n//     console.log('in onSolveHandlerLS af p',puzzle);\n//\n//     // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n//     //   console.log('in onPlayAgainHandler fter b',this.state.board);\n//     //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n//     //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n//     //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n//     // });\n//   }\n//\n//   getSolutionLS(puzzle){\n//     var nrows = 9;\n//     var ncols = 9;\n//     var squares = this.deepCopy(puzzle);\n//     for (var r=0;r<nrows;r++) {\n//        for (var c=0;c<ncols;c++) {\n//          squares[r][c].pencilMark = [];\n//        }\n//      }\n//\n//     //init board with valid pencilMarks\n//\n//     for (var r=0;r<nrows;r++) {\n//        for (var c=0;c<ncols;c++) {\n//          if(squares[r][c].given == true){continue;}\n//\n//          var pencilMarks = this.validPencilMarks(r,c,squares);\n//\n//          if(pencilMarks.length == 0){console.log(\"No solution!\");return false;}\n//          else if(pencilMarks.length == 1){//pm going to []\n//              squares[r][c].value = pencilMarks[0];\n//              squares[r][c].given = true;\n//             console.log('pencilMarks.length == 1  r c ',r,c,squares[r][c]);\n//              this.updatePencilMarks(r,c,squares);\n//          } else {\n//            for(let rn=0; rn<pencilMarks.length; rn++){\n//              squares[r][c].pencilMark.push(pencilMarks[rn]);\n//            }\n//          }\n//        }\n//     }\n//\n//     console.log(\"sq LS init\",squares);\n// var given = 0;\n// var cnt = 0;\n//     while(cnt < 81){\n//       var given = 0;\n//       cnt=cnt+1;\n// console.log('given1',given);\n//       for (var r=0;r<nrows;r++) {\n//          for (var c=0;c<ncols;c++) {\n//            if(squares[r][c].given == true){given = given + 1; continue;}\n//\n//            //this.applyStrategies(r,c,squares);\n//\n//            if(squares[r][c].pencilMark.length == 0){console.log(\"No solution!\");return false;}\n//            else if(squares[r][c].pencilMark.length == 1){\n//                squares[r][c].value = pencilMarks[0];\n//                squares[r][c].given = true;\n//                this.updatePencilMarks(r,c,squares);\n//            }\n//          }\n//       }\n// console.log('given',given);if(given == 81){break;}\n//     }\n// console.log(\"sq LS \",squares);\n//   }\n\n  getSolutionNRBS(puzzle){\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n    //var squares = puzzle;\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:puzzle[i][j].value,pencilMark:[],visited:[]};\n       }\n    }\n\n    console.log(\"sq\",squares)\n    //\n    // const cellValues = this.state.cellValues.slice();\n    // const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    // this.shuffleArray(rowOneSeed);\n    // for(let i=0; i<rowOneSeed.length; i++){\n    //     squares[0][i].value = rowOneSeed[i];\n    // }\n    //\n    // this.setState({squares: squares});\n\n\n    var iarr=[];\n    var numbers = [];\n    var cnt = 0;\n    var loopcnt=0;\n    var looparr=[];\n\n    for(let r=0; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          if(puzzle[r][c].given == true){\n            continue;\n          }\n\n          if(squares[r][c].visited.length == 0){\n            numbers = [1,2,3,4,5,6,7,8,9];\n          }\n\n          numbers = this.checkCell(r,c,numbers,squares);\n          numbers = this.checkRow(r,c,numbers,squares);\n          numbers = this.checkCol(r,c,numbers,squares);\n\n          if(numbers.length!=0){\n              var randIndex = Math.floor(Math.random() * (numbers.length-1));\n\n              iarr.push(randIndex);\n              var val = numbers[randIndex];\n              squares[r][c].value = val;\n              numbers.splice(randIndex,1);\n\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n              squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r,c])\n            while(r>=0){\n              c--;\n              if(c<0){r--;c=ncols-1}\n              if(r<0){break;}\n\n              if(puzzle[r][c].given == true){\n                continue;\n              }\n\n              if(squares[r][c].pencilMark.length!=0){\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n\n      }\n    }\n    console.log('iarr',iarr,'looparr',looparr);\n    console.log('loopcnt',loopcnt);\n    //this.setState({squares: squares, cellValues: cellValues});\n    // var solution = this.deepCopy(squares);\n    // this.setState({squares: squares, solution: solution}, function () {\n    //   console.log('state updated');\n    // });\n    // console.log('st',this.state.squares);\n    console.log('st',squares);\n    return squares;\n  }\n\n  getSolution(){\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:undefined,pencilMark:[],visited:[]};\n       }\n    }\n\n    const cellValues = this.state.cellValues.slice();\n    const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    this.shuffleArray(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i].value = rowOneSeed[i];\n    }\n\n    this.setState({squares: squares});\n\n\n    var iarr=[];\n    var numbers = [];\n    var cnt = 0;\n    var loopcnt=0;\n    var looparr=[];\n\n    for(let r=1; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          if(squares[r][c].visited.length == 0){\n            numbers = [1,2,3,4,5,6,7,8,9];\n          }\n\n          numbers = this.checkCell(r,c,numbers,squares);\n          numbers = this.checkRow(r,c,numbers,squares);\n          numbers = this.checkCol(r,c,numbers,squares);\n\n          if(numbers.length!=0){\n              var randIndex = Math.floor(Math.random() * (numbers.length-1));\n\n              iarr.push(randIndex);\n              var val = numbers[randIndex];\n              squares[r][c].value = val;\n              numbers.splice(randIndex,1);\n\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n              squares[r][c].visited.push(val);\n          } else {\n            loopcnt++;\n            looparr.push([r,c])\n            while(r!=0){\n              c--;\n              if(c<0){r--;c=ncols-1}\n              if(r<=0){break;}\n\n              if(squares[r][c].pencilMark.length!=0){\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                squares[r][c].visited.push(squares[r][c].value);\n                numbers = squares[r][c].pencilMark;\n                break;\n              } else {\n                squares[r][c].value = 'X';\n                squares[r][c].visited = [];\n              }\n            }\n          }\n\n      }\n    }\n    console.log('iarr',iarr,'looparr',looparr);\n    console.log('loopcnt',loopcnt);\n    //this.setState({squares: squares, cellValues: cellValues});\n    // var solution = this.deepCopy(squares);\n    // this.setState({squares: squares, solution: solution}, function () {\n    //   console.log('state updated');\n    // });\n    console.log('st',this.state.squares);\n    return squares;\n  }\n\n  //getUniquePuzzle(solution){\n  getUniquePuzzle(solvedPuzzle){\n    var nrows        = 9;\n    var ncols        = 9;\n    var location;\n    //var solvedPuzzle = solution;\n    var puzzle       = new Array(nrows);\n\n    console.log('sol',solvedPuzzle);\n\n    for (var i=0;i<nrows;i++) {\n      puzzle[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         puzzle[i][j] = {value:solvedPuzzle[i][j].value,given:true};\n       }\n    }\n\n    console.log('puzzle',puzzle);\n\n    var locationArray = [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],\n                         [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],\n                         [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],\n                         [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],\n                         [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],\n                         [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],\n                         [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],\n                         [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],\n                         [8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8]];\n\n    this.shuffleArray(locationArray);\n    //console.log(locationArray);\n    location = locationArray.pop();\n    //console.log('la',locationArray);\n    //console.log('l',location);\nvar cntr=0;\n    while(locationArray.length != 0){\n      cntr++;\n      puzzle[location[0]][location[1]].value = undefined;\n      puzzle[location[0]][location[1]].given = false;\n      //break;\n      if(this.uniqueSolve(puzzle)==false){\n        console.log(\"in here\");\n        puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n        puzzle[location[0]][location[1]].given = true;\n      }\n      //break;\n      if(cntr==54){break;}\n      location = locationArray.pop();\n   }\n\n   return puzzle;\n  }\n\n  uniqueSolve(puzzle){\n    var solutions =[];\n    this.solveSudoku(0,0,0,solutions,puzzle);\n    var numSolutions = solutions.length;\n    //console.log('numSolutions',numSolutions);\n    //console.log('Solutions',solutions);\n    if(numSolutions==0 || numSolutions>1){return false;}\n    else {return true;}\n  }\n\n  solveSudoku(row, col, cnt, solutions, board){\n    //if(cnt>1){return true;}\n//console.log(\"in solvesudoku\");\n\n//console.log(\"in solvesudokuboard\",board);\n    if(row>=9){\n      cnt=cnt+1;;\n      solutions.push(board);\n      return true;\n    }\n//console.log(\"in solvesudoku\");\n\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){cnt=cnt+1;\n      solutions.push(board);\n      return true;}\n      //console.log('r,c',row,col);\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n    c = (c<=8)?c  :0;\n\n// console.log('r c in b',row,col);\n//     console.log('b rc',board[row][col]);\n//console.log('b pm',pencilMarks);\n    for(let i=0; i<pencilMarks.length; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      this.solveSudoku(r,c,cnt,solutions,board);\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n    }\n\n    return false;\n  }\n\n  solveSudokuO(row, col,cnt=0, board){\n    //if(cnt>1){return true;}\n//console.log(\"in solvesudoku\");\n//cnt=cnt+1;\nconsole.log(\"in solvesudokuboard\",board);\nconsole.log(\"in solvesudokuboard cnt\",cnt);\n    if(row>=9){\n      //cnt=cnt+1;;\n      //solutions.push(board);\n      return true;\n    }\n    //if(cnt==1){return true;}\n//console.log(\"in solvesudoku\");\ncnt=cnt+1;\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){//cnt=cnt+1;\n      //solutions.push(board);\n      return true;}\n      //console.log('r,c',row,col);\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n    c = (c<=8)?c  :0;\nconsole.log('row col in b',row,col);\n console.log('r c in b',r,c);\n//     console.log('b rc',board[row][col]);\nconsole.log('b pm',pencilMarks);\n    for(let i=0; i<pencilMarks.length; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      console.log(\"in for pencilMarks[i]\", pencilMarks[i]);\n      console.log(\"in for board[row][col].value\", board[row][col].value);\n      console.log(\"in for board[row][col].given\", board[row][col].given);\n      console.log(\"in for b\", board);\n      if(this.solveSudokuO(r,c,cnt,board)){return true;}\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n    }\n\n    return false;\n  }\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  // null => null\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          // It's an array, create a new array with\n                          // deep copies of the entries\n                          rv = obj.map(o => this.deepCopy(o));\n                          break;\n                      default:\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              // It's a primitive, copy via assignment\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  getStartIndex(index){\n    switch(index) {\n        case 0:\n        case 1:\n        case 2:\n            return 0;\n        case 3:\n        case 4:\n        case 5:\n            return 3;\n        case 6:\n        case 7:\n        case 8:\n            return 6;\n        default:\n            return 0;\n    }\n  }\n  onSolveHandlerLS() {\n\n    //var solution = this.getSolution();\n    //var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var puzzle = this.deepCopy(this.state.board);\n    console.log('in onSolveHandlerLS bef p',puzzle);\n    this.getSolutionLS(puzzle);\n\n    //var saved_board = this.deepCopy(puzzle);\n    //var buttonText  = \"See Solution\";\n    //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    console.log('in onSolveHandlerLS af p',puzzle);\n\n    // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    //   console.log('in onPlayAgainHandler fter b',this.state.board);\n    //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n    //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n    //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    // });\n  }\n\n  getSolutionLS(puzzle){\n    var nrows = 9;\n    var ncols = 9;\n    var squares = this.deepCopy(puzzle);\n    for (var r=0;r<nrows;r++) {\n       for (var c=0;c<ncols;c++) {\n         squares[r][c].pencilMark = [];\n       }\n     }\n\n    //init board with valid pencilMarks\n\n    for (var r=0;r<nrows;r++) {\n       for (var c=0;c<ncols;c++) {\n         if(squares[r][c].given == true){continue;}\n\n         var pencilMarks = this.validPencilMarks(r,c,squares);\n\n         if(pencilMarks.length == 0){console.log(\"No solution!\");return false;}\n         else if(pencilMarks.length == 1){//pm going to []\n             squares[r][c].value = pencilMarks[0];\n             squares[r][c].given = true;\n            console.log('pencilMarks.length == 1  r c ',r,c,squares[r][c]);\n             this.updatePencilMarks(r,c,squares);\n         } else {\n           for(let rn=0; rn<pencilMarks.length; rn++){\n             squares[r][c].pencilMark.push(pencilMarks[rn]);\n           }\n         }\n       }\n    }\n\n    console.log(\"sq LS init\",squares);\nvar given = 0;\nvar cnt = 0;\n    while(cnt < 81){\n      var given = 0;\n      cnt=cnt+1;\nconsole.log('given1',given);\n      for (var r=0;r<nrows;r++) {\n         for (var c=0;c<ncols;c++) {\n           if(squares[r][c].given == true){given = given + 1; continue;}\n\n           //this.applyStrategies(r,c,squares);\n\n           if(squares[r][c].pencilMark.length == 0){console.log(\"No solution!\");return false;}\n           else if(squares[r][c].pencilMark.length == 1){\n               squares[r][c].value = pencilMarks[0];\n               squares[r][c].given = true;\n               this.updatePencilMarks(r,c,squares);\n           }\n         }\n      }\nconsole.log('given',given);if(given == 81){break;}\n    }\nconsole.log(\"sq LS \",squares);\n  }\n\n  validPencilMarks(row,col,board){\n    var pM = [1,2,3,4,5,6,7,8,9];\n    pM = this.checkCell(row,col,pM,board);\n    pM = this.checkRow(row,col,pM,board);\n    pM = this.checkCol(row,col,pM,board);\n    return pM;\n  }\n\n  updatePencilMarks(row,col,squares){\n    //console.log('updatePencilMarks',squares);\n    this.updateCell(row,col,squares);\n    this.updateRow(row,col,squares);\n    this.updateCol(row,col,squares);\n  }\n\n  applyStrategies(row,col,squares){\n    //console.log('updatePencilMarks',squares);\n    this.hiddenSingle(row,col,squares);\n    // this.updateRow(row,col,squares);\n    // this.updateCol(row,col,squares);\n  }\n\n\n  hiddenSingle = (r,c,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n    var val = squares[r][c].value;\n    var pM = squares[r][c].pencilMark;\n  //console.log('updateCell',squares);\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          //console.log('updateCell sq,row,col',row,col,squares[row][col]);\n          if(squares[row][col].given == false && squares[row][col].pencilMark.length!=0){\n            if(squares[row][col].pencilMark.indexOf(val)!=-1){\n             squares[row][col].pencilMark.splice(squares[row][col].pencilMark.indexOf(val),1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n  checkCell = (r,c,numbers,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          if(squares[row][col].value != undefined){\n            if(numbers.indexOf(squares[row][col].value)!=-1){\n             numbers.splice(numbers.indexOf(squares[row][col].value),1);\n            }\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  updateCell = (r,c,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n    var val = squares[r][c].value;\n//console.log('updateCell',squares);\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          //console.log('updateCell sq,row,col',row,col,squares[row][col]);\n          if(squares[row][col].given == false && squares[row][col].pencilMark.length!=0){\n            if(squares[row][col].pencilMark.indexOf(val)!=-1){\n             squares[row][col].pencilMark.splice(squares[row][col].pencilMark.indexOf(val),1);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  checkRow = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].value != undefined){\n          if(numbers.indexOf(squares[r][i].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[r][i].value),1);\n          }\n        }\n      }\n    }\n      return numbers;\n  }\n\n  updateRow = (r,c,squares) => {\n    var val = squares[r][c].value;\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].given == false && squares[r][i].pencilMark.length!=0){\n          if(squares[r][i].pencilMark.indexOf(val)!=-1){\n           squares[r][i].pencilMark.splice(squares[r][i].pencilMark.indexOf(val),1);\n          }\n        }\n      }\n    }\n  }\n\n  hiddenSingleRow = (r,c,squares) => {\n    //var val = squares[r][c].value;\n    var pM = squares[r][c].pencilMark;\n    //var flag = false;\n\n    for(let j=0; j<squares[r][c].pencilMark; j++){\n      var val = squares[r][c].pencilMark[j];\n\n      for(let i=0; i<9; i++){\n\n        if(i != c){\n\n          if(squares[r][i].given == false && squares[r][i].pencilMark.length!=0){\n            if(squares[r][i].pencilMark.indexOf(val)!=-1){\n              break;\n            }\n          }\n\n        }//i!=c\n        if(i==8) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n        {\n          squares[r][c].value = val;\n          squares[r][c].given = true;\n          this.updatePencilMarks(r,c,squares);\n          return true;\n        }\n      }//for i\n\n    }//for pm\n    return false;\n  }\n\n  hiddenSingleCol = (r,c,squares) => {\n    var pM = squares[r][c].pencilMark;\n\n    for(let j=0; j<squares[r][c].pencilMark; j++){\n      var val = squares[r][c].pencilMark[j];\n\n      for(let i=0; i<9; i++){\n\n        if(i != r){\n\n          if(squares[i][c].given == false && squares[i][c].pencilMark.length!=0){\n            if(squares[i][c].pencilMark.indexOf(val)!=-1){\n              break;\n            }\n          }\n\n        }//i!=c\n        if(i==8) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n        {\n          squares[r][c].value = val;\n          squares[r][c].given = true;\n          this.updatePencilMarks(r,c,squares);\n          return true;\n        }\n      }//for i\n\n    }//for pm\n    return false;\n  }\n\n  hiddenSingleCell = (r,c,squares) => {\n    var pM = squares[r][c].pencilMark;\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n    var col;\n\n    for(let j=0; j<squares[r][c].pencilMark; j++){\n      var val = squares[r][c].pencilMark[j];\n      var flag = false;\n      for(let row=rowStart; row<=rowStart+2; row++){\n        for(col=colStart; col<=colStart+2; col++){\n          if(!(row == r && col == c)){\n            if(squares[row][col].given == false && squares[row][col].pencilMark.length!=0){\n              if(squares[row][col].pencilMark.indexOf(val)!=-1){\n                flag = true;\n                break;\n              }\n            }\n\n          }//!(row == r && col == c)\n        }//for col\n        if(flag == true){break;}\n        if(row==rowStart+2 && col==colStart+2) //&& squares[r][i].pencilMark.indexOf(val)==-1){\n        {\n          squares[r][c].value = val;\n          squares[r][c].given = true;\n          this.updatePencilMarks(r,c,squares);\n          return true;\n        }\n      }//for row\n\n    }//for pm\n    return false;\n  }\n\n  checkCol = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != r){\n        if(squares[i][c].value != undefined){\n          if(numbers.indexOf(squares[i][c].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[i][c].value),1);\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  updateCol = (r,c,squares) => {\n    var val = squares[r][c].value;\n    for(let i=0; i<9; i++){\n      if(i != r){\n        if(squares[i][c].given == false && squares[i][c].pencilMark.length!=0){\n          if(squares[i][c].pencilMark.indexOf(val)!=-1){\n           squares[i][c].pencilMark.splice(squares[i][c].pencilMark.indexOf(val),1);\n          }\n        }\n      }\n    }\n  }\n\n  onSeeSolutionsHandler(){\n\n    console.log('in onSeeSolutionsHandler before');\n    var buttonText = this.state.buttonText;\n    var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    var saved_board;\n    var board;\n\n    if(buttonText == \"See Solution\"){\n      buttonText  = \"Back To Puzzle\";\n      saved_board = this.deepCopy(this.state.board);\n      board       = this.deepCopy(this.state.solution);\n    } else {\n      buttonText  = \"See Solution\";\n      board       = this.deepCopy(this.state.saved_board);\n    }\n\n\n    console.log('in onSeeSolutionsHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onSeeSolutionsHandler fter b',this.state.board);\n      console.log('in onSeeSolutionsHandler fter sb',this.state.saved_board);\n    });\n  }\n\n\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true;\n\n        console.log(board[i][j].value,i,j);\n        console.log(board[i][j].given,i,j);\n        //this.setState({board: board});\n        this.setState({board: board}, function () {\n          console.log('in val b',this.state.board);\n          console.log('in val pu',this.state.puzzle);\n        });\n    } else {\n      board[i][j].value = undefined;\n      board[i][j].given = false;//check logic\n      this.setState({board: board}, function () {\n        console.log('in val b',this.state.board);\n        console.log('in val pu',this.state.puzzle);\n      });\n      console.log(board[i][j].value,i,j);\n      console.log(board[i][j].given,i,j);\n    }\n  }\n\n  onResetHandler(){\n    var  board = this.deepCopy(this.state.puzzle);\n    this.setState({board: board}, function () {\n      //console.log('in onResetHandler fter b',this.state.board);\n    });\n  }\n\n  displayCellForm(i,j) {\n    return (\n      <SquareF\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n      />\n    );\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <SquareB\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n        value=\"Play Again\"\n      />\n    );\n  }\n\n  displayResetCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onResetHandler()}\n        value=\"Reset\"\n      />\n    );\n  }\n\n\ndisplayClearCell() {\n  return (\n    <SquareB\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => {var board = Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      var puzzle=Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      this.setState({board: board,puzzle:puzzle})}}\n      value=\"Clear\"\n    />\n  );\n}\n\n  displaySeeSolutionsCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n        value={this.state.buttonText}\n      />\n    );\n  }\n\n  displaySolveCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandler()}\n        value=\"Solve Using Recursive Backtracking Solver\"\n      />\n    );\n  }\n\n  displaySolveCellLS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerLS()}\n        value=\"Solve Using Strategy Based Logical Solver\"\n      />\n    );\n  }\n\n  displaySolveCellNRBS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerNRBS()}\n        value=\"Solve Using Non-Recursive Backtracking Solver\"\n      />\n    );\n  }\n\n  shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nrender() {\n  return (\n    <div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellForm(0,0)}\n        {this.displayCellForm(0,1)}\n        {this.displayCellForm(0,2)}\n        {this.displayCellForm(0,3)}\n        {this.displayCellForm(0,4)}\n        {this.displayCellForm(0,5)}\n        {this.displayCellForm(0,6)}\n        {this.displayCellForm(0,7)}\n        {this.displayCellForm(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(1,0)}\n        {this.displayCellForm(1,1)}\n        {this.displayCellForm(1,2)}\n        {this.displayCellForm(1,3)}\n        {this.displayCellForm(1,4)}\n        {this.displayCellForm(1,5)}\n        {this.displayCellForm(1,6)}\n        {this.displayCellForm(1,7)}\n        {this.displayCellForm(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(2,0)}\n        {this.displayCellForm(2,1)}\n        {this.displayCellForm(2,2)}\n        {this.displayCellForm(2,3)}\n        {this.displayCellForm(2,4)}\n        {this.displayCellForm(2,5)}\n        {this.displayCellForm(2,6)}\n        {this.displayCellForm(2,7)}\n        {this.displayCellForm(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(3,0)}\n        {this.displayCellForm(3,1)}\n        {this.displayCellForm(3,2)}\n        {this.displayCellForm(3,3)}\n        {this.displayCellForm(3,4)}\n        {this.displayCellForm(3,5)}\n        {this.displayCellForm(3,6)}\n        {this.displayCellForm(3,7)}\n        {this.displayCellForm(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(4,0)}\n        {this.displayCellForm(4,1)}\n        {this.displayCellForm(4,2)}\n        {this.displayCellForm(4,3)}\n        {this.displayCellForm(4,4)}\n        {this.displayCellForm(4,5)}\n        {this.displayCellForm(4,6)}\n        {this.displayCellForm(4,7)}\n        {this.displayCellForm(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(5,0)}\n        {this.displayCellForm(5,1)}\n        {this.displayCellForm(5,2)}\n        {this.displayCellForm(5,3)}\n        {this.displayCellForm(5,4)}\n        {this.displayCellForm(5,5)}\n        {this.displayCellForm(5,6)}\n        {this.displayCellForm(5,7)}\n        {this.displayCellForm(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(6,0)}\n        {this.displayCellForm(6,1)}\n        {this.displayCellForm(6,2)}\n        {this.displayCellForm(6,3)}\n        {this.displayCellForm(6,4)}\n        {this.displayCellForm(6,5)}\n        {this.displayCellForm(6,6)}\n        {this.displayCellForm(6,7)}\n        {this.displayCellForm(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(7,0)}\n        {this.displayCellForm(7,1)}\n        {this.displayCellForm(7,2)}\n        {this.displayCellForm(7,3)}\n        {this.displayCellForm(7,4)}\n        {this.displayCellForm(7,5)}\n        {this.displayCellForm(7,6)}\n        {this.displayCellForm(7,7)}\n        {this.displayCellForm(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(8,0)}\n        {this.displayCellForm(8,1)}\n        {this.displayCellForm(8,2)}\n        {this.displayCellForm(8,3)}\n        {this.displayCellForm(8,4)}\n        {this.displayCellForm(8,5)}\n        {this.displayCellForm(8,6)}\n        {this.displayCellForm(8,7)}\n        {this.displayCellForm(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellNRBS()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellLS()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySeeSolutionsCell()}\n      </div>\n\n\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayResetCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayClearCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass SudokuPuzzleSolverForLS extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Sudoku </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default SudokuPuzzleSolverForLS;\n"]},"metadata":{},"sourceType":"module"}