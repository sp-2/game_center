{"ast":null,"code":"import _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction SquareB(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction SquareF(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    style: props.styleSettings,\n    key: props.keyValue,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != undefined) {\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              }\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != undefined) {\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != undefined) {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true; // console.log(board[i][j].value,i,j);\n        // console.log(board[i][j].given,i,j);\n        //this.setState({board: board});\n\n        _this.setState({\n          board: board\n        }, function () {// console.log('in val b',this.state.board);\n          // console.log('in val pu',this.state.puzzle);\n        });\n      } else {\n        board[i][j].value = undefined;\n        board[i][j].given = false; //check logic\n\n        _this.setState({\n          board: board\n        }, function () {// console.log('in val b',this.state.board);\n          // console.log('in val pu',this.state.puzzle);\n        }); // console.log(board[i][j].value,i,j);\n        // console.log(board[i][j].given,i,j);\n\n      }\n    };\n\n    _this.state = {\n      squares: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: false\n        });\n      }),\n      solution: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: false\n        });\n      }),\n      puzzle: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onSolveHandlerRBS\",\n    value: function onSolveHandlerRBS() {\n      //var solution = this.getSolution();\n      //var puzzle = this.getUniquePuzzle(solution);\n      //this.getSolution();\n      //this.getUniquePuzzle(this.state.solution);\n      var puzzle = this.deepCopy(this.state.board);\n      console.log('in onSolveHandler bef p', puzzle);\n      this.solveSudokuRBS(0, 0, puzzle); //var saved_board = this.deepCopy(puzzle);\n      //var buttonText  = \"See Solution\";\n      //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n\n      console.log('in onSolveHandler af p', puzzle); // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      //   console.log('in onPlayAgainHandler fter b',this.state.board);\n      //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n      //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n      // });\n    }\n  }, {\n    key: \"onSolveHandlerNRBS\",\n    value: function onSolveHandlerNRBS() {\n      var puzzle = this.deepCopy(this.state.board);\n      console.log('in onSolveHandlerNRBS bef p', puzzle);\n      var board = this.getSolutionNRBS(puzzle);\n      console.log('in onSolveHandlerNRBS af p', puzzle);\n      this.setState({\n        board: board,\n        puzzle: puzzle\n      }, function () {\n        console.log('in onPlayAgainHandler fter b', this.state.board); // console.log('in onPlayAgainHandler fter s',this.state.solution);\n\n        console.log('in onPlayAgainHandler fter p', this.state.puzzle); // console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"getSolutionNRBS\",\n    value: function getSolutionNRBS(puzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: puzzle[i][j].value,\n            pencilMark: []\n          };\n        }\n      }\n\n      var numbers = [];\n\n      for (var r = 0; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          if (puzzle[r][c].given == true) {\n            continue;\n          }\n\n          numbers = this.validPencilMarks(r, c, squares);\n\n          if (numbers.length != 0) {\n            var val = numbers.pop();\n            squares[r][c].value = val;\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n          } else {\n            while (r >= 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r < 0) {\n                break;\n              }\n\n              if (puzzle[r][c].given == true) {\n                continue;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                break;\n              } else {\n                squares[r][c].value = undefined;\n              }\n            }\n          }\n        }\n      }\n\n      console.log('st', squares);\n      return squares;\n    }\n  }, {\n    key: \"solveSudokuRBS\",\n    value: function solveSudokuRBS(row, col, board) {\n      if (row >= 9) {\n        return true;\n      }\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          return true;\n        }\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0;\n\n      for (var i = 0; i < pencilMarks.length; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n\n        if (this.solveSudokuRBS(r, c, board)) {\n          return true;\n        }\n\n        board[row][col].value = undefined;\n        board[row][col].given = false;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"validPencilMarks\",\n    value: function validPencilMarks(row, col, board) {\n      var pM = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      pM = this.checkCell(row, col, pM, board);\n      pM = this.checkRow(row, col, pM, board);\n      pM = this.checkCol(row, col, pM, board);\n      return pM;\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            // null => null\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                // It's an array, create a new array with\n                // deep copies of the entries\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                break;\n\n              default:\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          // It's a primitive, copy via assignment\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"onResetHandler\",\n    value: function onResetHandler() {\n      var board = this.deepCopy(this.state.puzzle);\n      this.setState({\n        board: board\n      }, function () {//console.log('in onResetHandler fter b',this.state.board);\n      });\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this3 = this;\n\n      return React.createElement(SquareF, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        styleSettings: (this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n          fontWeight: 'bold'\n        } : {\n          fontWeight: 'normal'\n        },\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this3.valChangeHandler(i, j, event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayResetCell\",\n    value: function displayResetCell() {\n      var _this4 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this4.onResetHandler();\n        },\n        value: \"Reset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayClearCell\",\n    value: function displayClearCell() {\n      var _this5 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          var board = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n          var puzzle = Array(9).fill().map(function () {\n            return new Array(9).fill({\n              value: undefined,\n              given: false\n            });\n          });\n\n          _this5.setState({\n            board: board,\n            puzzle: puzzle\n          });\n        },\n        value: \"Clear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      });\n    } // displaySeeSolutionsCell() {\n    //   return (\n    //     <SquareB\n    //       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n    //       className=\"square\"\n    //       onClick={() => this.onSeeSolutionsHandler()}\n    //       value={this.state.buttonText}\n    //     />\n    //   );\n    // }\n\n  }, {\n    key: \"displaySolveCellRBS\",\n    value: function displaySolveCellRBS() {\n      var _this6 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this6.onSolveHandlerRBS();\n        },\n        value: \"Solve Using Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellLS\",\n    value: function displaySolveCellLS() {\n      var _this7 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this7.onSolveHandlerNRBS();\n        },\n        value: \"Solve Using Strategy Based Logical Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySolveCellNRBS\",\n    value: function displaySolveCellNRBS() {\n      var _this8 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this8.onSolveHandlerNRBS();\n        },\n        value: \"Solve Using Non-Recursive Backtracking Solver\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      });\n    } //   shuffleArray(array) {\n    //     for (var i = array.length - 1; i > 0; i--) {\n    //         var j = Math.floor(Math.random() * (i + 1));\n    //         var temp = array[i];\n    //         array[i] = array[j];\n    //         array[j] = temp;\n    //     }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2), this.displayCellForm(0, 3), this.displayCellForm(0, 4), this.displayCellForm(0, 5), this.displayCellForm(0, 6), this.displayCellForm(0, 7), this.displayCellForm(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2), this.displayCellForm(1, 3), this.displayCellForm(1, 4), this.displayCellForm(1, 5), this.displayCellForm(1, 6), this.displayCellForm(1, 7), this.displayCellForm(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, this.displayCellForm(2, 0), this.displayCellForm(2, 1), this.displayCellForm(2, 2), this.displayCellForm(2, 3), this.displayCellForm(2, 4), this.displayCellForm(2, 5), this.displayCellForm(2, 6), this.displayCellForm(2, 7), this.displayCellForm(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, this.displayCellForm(3, 0), this.displayCellForm(3, 1), this.displayCellForm(3, 2), this.displayCellForm(3, 3), this.displayCellForm(3, 4), this.displayCellForm(3, 5), this.displayCellForm(3, 6), this.displayCellForm(3, 7), this.displayCellForm(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, this.displayCellForm(4, 0), this.displayCellForm(4, 1), this.displayCellForm(4, 2), this.displayCellForm(4, 3), this.displayCellForm(4, 4), this.displayCellForm(4, 5), this.displayCellForm(4, 6), this.displayCellForm(4, 7), this.displayCellForm(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, this.displayCellForm(5, 0), this.displayCellForm(5, 1), this.displayCellForm(5, 2), this.displayCellForm(5, 3), this.displayCellForm(5, 4), this.displayCellForm(5, 5), this.displayCellForm(5, 6), this.displayCellForm(5, 7), this.displayCellForm(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, this.displayCellForm(6, 0), this.displayCellForm(6, 1), this.displayCellForm(6, 2), this.displayCellForm(6, 3), this.displayCellForm(6, 4), this.displayCellForm(6, 5), this.displayCellForm(6, 6), this.displayCellForm(6, 7), this.displayCellForm(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, this.displayCellForm(7, 0), this.displayCellForm(7, 1), this.displayCellForm(7, 2), this.displayCellForm(7, 3), this.displayCellForm(7, 4), this.displayCellForm(7, 5), this.displayCellForm(7, 6), this.displayCellForm(7, 7), this.displayCellForm(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, this.displayCellForm(8, 0), this.displayCellForm(8, 1), this.displayCellForm(8, 2), this.displayCellForm(8, 3), this.displayCellForm(8, 4), this.displayCellForm(8, 5), this.displayCellForm(8, 6), this.displayCellForm(8, 7), this.displayCellForm(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, this.displaySolveCellRBS()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, this.displaySolveCellNRBS()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, this.displaySolveCellLS()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, this.displayResetCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, this.displayClearCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar SudokuPuzzleSolver =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SudokuPuzzleSolver, _React$Component2);\n\n  function SudokuPuzzleSolver() {\n    _classCallCheck(this, SudokuPuzzleSolver);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SudokuPuzzleSolver).apply(this, arguments));\n  }\n\n  _createClass(SudokuPuzzleSolver, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, \" Sudoku \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SudokuPuzzleSolver;\n}(React.Component);\n\nexport default SudokuPuzzleSolver;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleSolver.js"],"names":["React","Component","SquareB","props","style","onClick","value","SquareF","readOnlyVal","styleSettings","keyValue","defaultValue","onChange","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","row","col","undefined","indexOf","splice","checkRow","i","checkCol","valChangeHandler","j","event","board","deepCopy","state","target","Number","given","setState","Array","fill","map","pencilMark","visited","solution","puzzle","console","log","solveSudokuRBS","getSolutionNRBS","nrows","ncols","validPencilMarks","length","val","pop","rn","push","pencilMarks","pM","obj","rv","toString","call","o","Object","keys","reduce","prev","key","index","fontWeight","backgroundColor","color","height","width","onResetHandler","onSolveHandlerRBS","onSolveHandlerNRBS","displayCellForm","displaySolveCellRBS","displaySolveCellNRBS","displaySolveCellLS","displayResetCell","displayClearCell","SudokuPuzzleSolver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction SquareB(props) {\n    return (\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function SquareF(props) {\n      return (\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            style={props.styleSettings}\n            key={props.keyValue}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n    );\n  }\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      squares: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:false})),\n      solution: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:false})),\n      puzzle: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      board: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n      };\n  }\n\n  onSolveHandlerRBS() {\n\n    //var solution = this.getSolution();\n    //var puzzle = this.getUniquePuzzle(solution);\n\n    //this.getSolution();\n    //this.getUniquePuzzle(this.state.solution);\n\n    var puzzle = this.deepCopy(this.state.board);\n    console.log('in onSolveHandler bef p',puzzle);\n    this.solveSudokuRBS(0,0,puzzle);\n\n    //var saved_board = this.deepCopy(puzzle);\n    //var buttonText  = \"See Solution\";\n    //var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    console.log('in onSolveHandler af p',puzzle);\n\n    // this.setState({solution: solution, puzzle: puzzle, board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    //   console.log('in onPlayAgainHandler fter b',this.state.board);\n    //   console.log('in onPlayAgainHandler fter s',this.state.solution);\n    //   console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n    //   console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    // });\n  }\n\n  onSolveHandlerNRBS() {\n\n    var puzzle = this.deepCopy(this.state.board);\n    console.log('in onSolveHandlerNRBS bef p',puzzle);\n    var board = this.getSolutionNRBS(puzzle);\n\n\n    console.log('in onSolveHandlerNRBS af p',puzzle);\n\n    this.setState({board: board, puzzle: puzzle}, function () {\n      console.log('in onPlayAgainHandler fter b',this.state.board);\n      // console.log('in onPlayAgainHandler fter s',this.state.solution);\n      console.log('in onPlayAgainHandler fter p',this.state.puzzle);\n      // console.log('in onPlayAgainHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  getSolutionNRBS(puzzle){\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:puzzle[i][j].value,pencilMark:[]};\n       }\n    }\n\n    var numbers = [];\n\n    for(let r=0; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          if(puzzle[r][c].given == true){\n            continue;\n          }\n\n          numbers = this.validPencilMarks(r,c,squares);\n\n          if(numbers.length!=0){\n              var val = numbers.pop();\n              squares[r][c].value = val;\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n          } else {\n              while(r>=0){\n                c--;\n                if(c<0){r--;c=ncols-1}\n                if(r<0){break;}\n\n                if(puzzle[r][c].given == true){\n                  continue;\n                }\n\n                if(squares[r][c].pencilMark.length!=0){\n                  squares[r][c].value = squares[r][c].pencilMark.pop();\n                  break;\n                } else {\n                  squares[r][c].value = undefined;\n                }\n              }\n          }\n      }\n    }\n    console.log('st',squares);\n    return squares;\n  }\n\n\n\n  solveSudokuRBS(row, col, board){\n    if(row>=9){return true;}\n\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){return true;}\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n    c = (c<=8)?c  :0;\n\n    for(let i=0; i<pencilMarks.length; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      if(this.solveSudokuRBS(r,c,board)){return true;}\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n    }\n\n    return false;\n  }\n\n  validPencilMarks(row,col,board){\n    var pM = [1,2,3,4,5,6,7,8,9];\n    pM = this.checkCell(row,col,pM,board);\n    pM = this.checkRow(row,col,pM,board);\n    pM = this.checkCol(row,col,pM,board);\n    return pM;\n  }\n\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  // null => null\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          // It's an array, create a new array with\n                          // deep copies of the entries\n                          rv = obj.map(o => this.deepCopy(o));\n                          break;\n                      default:\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              // It's a primitive, copy via assignment\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  getStartIndex(index){\n    switch(index) {\n        case 0:\n        case 1:\n        case 2:\n            return 0;\n        case 3:\n        case 4:\n        case 5:\n            return 3;\n        case 6:\n        case 7:\n        case 8:\n            return 6;\n        default:\n            return 0;\n    }\n  }\n\n\n  checkCell = (r,c,numbers,squares) => {\n\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          if(squares[row][col].value != undefined){\n            if(numbers.indexOf(squares[row][col].value)!=-1){\n             numbers.splice(numbers.indexOf(squares[row][col].value),1);\n            }\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  checkRow = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].value != undefined){\n          if(numbers.indexOf(squares[r][i].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[r][i].value),1);\n          }\n        }\n      }\n    }\n      return numbers;\n  }\n\n  checkCol = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != r){\n        if(squares[i][c].value != undefined){\n          if(numbers.indexOf(squares[i][c].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[i][c].value),1);\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n        board[i][j].value = Number(event.target.value);\n        board[i][j].given = true;\n\n        // console.log(board[i][j].value,i,j);\n        // console.log(board[i][j].given,i,j);\n        //this.setState({board: board});\n        this.setState({board: board}, function () {\n          // console.log('in val b',this.state.board);\n          // console.log('in val pu',this.state.puzzle);\n        });\n    } else {\n      board[i][j].value = undefined;\n      board[i][j].given = false;//check logic\n      this.setState({board: board}, function () {\n        // console.log('in val b',this.state.board);\n        // console.log('in val pu',this.state.puzzle);\n      });\n      // console.log(board[i][j].value,i,j);\n      // console.log(board[i][j].given,i,j);\n    }\n  }\n\n  onResetHandler(){\n    var  board = this.deepCopy(this.state.puzzle);\n    this.setState({board: board}, function () {\n      //console.log('in onResetHandler fter b',this.state.board);\n    });\n  }\n\n  displayCellForm(i,j) {\n    return (\n      <SquareF\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n      />\n    );\n  }\n\n\n  displayResetCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onResetHandler()}\n        value=\"Reset\"\n      />\n    );\n  }\n\n\ndisplayClearCell() {\n  return (\n    <SquareB\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => {var board = Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      var puzzle=Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false}));\n      this.setState({board: board,puzzle:puzzle})}}\n      value=\"Clear\"\n    />\n  );\n}\n\n  // displaySeeSolutionsCell() {\n  //   return (\n  //     <SquareB\n  //       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n  //       className=\"square\"\n  //       onClick={() => this.onSeeSolutionsHandler()}\n  //       value={this.state.buttonText}\n  //     />\n  //   );\n  // }\n\n  displaySolveCellRBS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerRBS()}\n        value=\"Solve Using Recursive Backtracking Solver\"\n      />\n    );\n  }\n\n  displaySolveCellLS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerNRBS()}\n        value=\"Solve Using Strategy Based Logical Solver\"\n      />\n    );\n  }\n\n  displaySolveCellNRBS() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSolveHandlerNRBS()}\n        value=\"Solve Using Non-Recursive Backtracking Solver\"\n      />\n    );\n  }\n\n//   shuffleArray(array) {\n//     for (var i = array.length - 1; i > 0; i--) {\n//         var j = Math.floor(Math.random() * (i + 1));\n//         var temp = array[i];\n//         array[i] = array[j];\n//         array[j] = temp;\n//     }\n// }\nrender() {\n  return (\n    <div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellForm(0,0)}\n        {this.displayCellForm(0,1)}\n        {this.displayCellForm(0,2)}\n        {this.displayCellForm(0,3)}\n        {this.displayCellForm(0,4)}\n        {this.displayCellForm(0,5)}\n        {this.displayCellForm(0,6)}\n        {this.displayCellForm(0,7)}\n        {this.displayCellForm(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(1,0)}\n        {this.displayCellForm(1,1)}\n        {this.displayCellForm(1,2)}\n        {this.displayCellForm(1,3)}\n        {this.displayCellForm(1,4)}\n        {this.displayCellForm(1,5)}\n        {this.displayCellForm(1,6)}\n        {this.displayCellForm(1,7)}\n        {this.displayCellForm(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(2,0)}\n        {this.displayCellForm(2,1)}\n        {this.displayCellForm(2,2)}\n        {this.displayCellForm(2,3)}\n        {this.displayCellForm(2,4)}\n        {this.displayCellForm(2,5)}\n        {this.displayCellForm(2,6)}\n        {this.displayCellForm(2,7)}\n        {this.displayCellForm(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(3,0)}\n        {this.displayCellForm(3,1)}\n        {this.displayCellForm(3,2)}\n        {this.displayCellForm(3,3)}\n        {this.displayCellForm(3,4)}\n        {this.displayCellForm(3,5)}\n        {this.displayCellForm(3,6)}\n        {this.displayCellForm(3,7)}\n        {this.displayCellForm(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(4,0)}\n        {this.displayCellForm(4,1)}\n        {this.displayCellForm(4,2)}\n        {this.displayCellForm(4,3)}\n        {this.displayCellForm(4,4)}\n        {this.displayCellForm(4,5)}\n        {this.displayCellForm(4,6)}\n        {this.displayCellForm(4,7)}\n        {this.displayCellForm(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(5,0)}\n        {this.displayCellForm(5,1)}\n        {this.displayCellForm(5,2)}\n        {this.displayCellForm(5,3)}\n        {this.displayCellForm(5,4)}\n        {this.displayCellForm(5,5)}\n        {this.displayCellForm(5,6)}\n        {this.displayCellForm(5,7)}\n        {this.displayCellForm(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(6,0)}\n        {this.displayCellForm(6,1)}\n        {this.displayCellForm(6,2)}\n        {this.displayCellForm(6,3)}\n        {this.displayCellForm(6,4)}\n        {this.displayCellForm(6,5)}\n        {this.displayCellForm(6,6)}\n        {this.displayCellForm(6,7)}\n        {this.displayCellForm(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(7,0)}\n        {this.displayCellForm(7,1)}\n        {this.displayCellForm(7,2)}\n        {this.displayCellForm(7,3)}\n        {this.displayCellForm(7,4)}\n        {this.displayCellForm(7,5)}\n        {this.displayCellForm(7,6)}\n        {this.displayCellForm(7,7)}\n        {this.displayCellForm(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(8,0)}\n        {this.displayCellForm(8,1)}\n        {this.displayCellForm(8,2)}\n        {this.displayCellForm(8,3)}\n        {this.displayCellForm(8,4)}\n        {this.displayCellForm(8,5)}\n        {this.displayCellForm(8,6)}\n        {this.displayCellForm(8,7)}\n        {this.displayCellForm(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellRBS()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellNRBS()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySolveCellLS()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayResetCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayClearCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass SudokuPuzzleSolver extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Sudoku </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default SudokuPuzzleSolver;\n"]},"metadata":{},"sourceType":"module"}