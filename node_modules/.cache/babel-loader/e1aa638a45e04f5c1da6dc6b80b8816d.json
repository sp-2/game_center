{"ast":null,"code":"import _slicedToArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square_B(props) {\n  return (// <button\n    //   style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n    //   className=\"square\"\n    //   onClick={() => this.onPlayAgainHandler()}\n    // >\n    //   Play Again\n    // </button>\n    React.createElement(\"button\", {\n      style: props.style,\n      className: \"square\",\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, props.value)\n  );\n}\n\nfunction Square_F(props) {\n  return (// <input size=\"2\" maxlength=\"1\" readOnly={props.readOnlyVal}\n    //   type=\"text\"\n    //   placeholder=\"\"\n    //   name={props.value}\n    //   value={props.value}\n    //   //onChange={props.onChange}\n    //   //onChange={props.onChange}\n    //   onChange={(event) => props.onChangeHandler}\n    // />\n    React.createElement(\"input\", {\n      size: \"2\",\n      maxLength: \"1\",\n      readOnly: props.readOnlyVal,\n      type: \"text\",\n      placeholder: \"\" //readOnly={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n      //style={{fontWeight: 'bold'}}\n      ,\n      style: props.style,\n      key: props.key,\n      defaultValue: props.defaultValue,\n      onChange: props.onChange,\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })\n  );\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        console.log(board[i][j].value, i, j); //this.setState({board: board});\n\n        _this.setState({\n          board: board\n        }, function () {\n          console.log('in val b', this.state.board);\n          console.log('in val pu', this.state.puzzle);\n        });\n      }\n    };\n\n    _this.state = {\n      squares: Array(6).fill(''),\n      solution: Array(6).fill(''),\n      puzzle: Array(6).fill(''),\n      //board: Array(6).fill(null),\n      board: Array(2).fill({\n        value: '',\n        given: false\n      }),\n      cellCheck: Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      }),\n      saved_board: Array(2).fill({\n        value: '',\n        given: false\n      }),\n      xIsNext: true,\n      readOnlyVal: false,\n      buttonText: \"See Solution\"\n    };\n    _this.valChangeHandler = _this.valChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    } // displayCell(i) {\n    //   return (\n    //     <Square\n    //       value={this.state.squares[i]}\n    //       onClick={() => this.handleClick(i)}\n    //     />\n    //   );\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // var solution = this.state.solution;\n      // var puzzle = this.state.puzzle;\n      // var board = puzzle;\n      var solution = [[{\n        value: 1,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 2,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 9,\n        pencilMark: [],\n        visited: []\n      }], [{\n        value: 4,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 5,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 6,\n        pencilMark: [],\n        visited: []\n      }]];\n      var puzzle = [[{\n        value: 1,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }, {\n        value: undefined,\n        given: false\n      }], [{\n        value: undefined,\n        given: false\n      }, {\n        value: 5,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }]]; //const board = puzzle.slice();\n\n      var board = this.deepCopy(puzzle);\n\n      if (board === puzzle) {\n        console.log('equal');\n      } else {\n        console.log('not equal');\n      }\n\n      var cellCheck0 = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      });\n      console.log(cellCheck0); //  this.setState({solution: solution, puzzle: puzzle, board: board});\n\n      this.setState({\n        solution: solution,\n        puzzle: puzzle,\n        board: board\n      }, function () {\n        console.log('in mount bo', this.state.board);\n        console.log('in mount pu', this.state.puzzle);\n        console.log('in mount sol', this.state.solution);\n      });\n    }\n  }, {\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      // var board = [[{value:1,given:true},{value:null,given:false},{value:undefined,given:false}],\n      // [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n      var board = this.deepCopy(this.state.puzzle);\n      var saved_board = this.deepCopy(this.state.puzzle);\n      var buttonText = \"See Solution\";\n      var cellCheck = Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      });\n      console.log('in onPlayAgainHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onPlayAgainHandler fter b', this.state.board);\n      });\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      console.log('in onSeeSolutionsHandler before');\n      var buttonText = this.state.buttonText;\n      var cellCheck = Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      });\n      var saved_board;\n      var board;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_board = this.deepCopy(this.state.board);\n        board = this.deepCopy(this.state.solution);\n      } else {\n        buttonText = \"See Solution\";\n        board = this.deepCopy(this.state.saved_board);\n      }\n\n      console.log('in onSeeSolutionsHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onSeeSolutionsHandler fter b', this.state.board);\n        console.log('in onSeeSolutionsHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onCellCheckHandler\",\n    value: function onCellCheckHandler() {\n      console.log('in onCellCheckHandler before');\n      var board = this.deepCopy(this.state.board);\n      var solution = this.deepCopy(this.state.solution);\n      var cellCheck = this.state.cellCheck.slice();\n      var saved_board;\n      var board;\n\n      for (var i = 0; i < board.length; i++) {\n        for (var j = 0; j < board[0].length; j++) {\n          if (board[i][j].value != undefined) {\n            if (board[i][j].value != solution[i][j].value) {\n              console.log(i, j, \"err\");\n              cellCheck[i][j] = true;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onCellCheckHandler fter b', cellCheck);\n      });\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            // null => null\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                // It's an array, create a new array with\n                // deep copies of the entries\n                console.log(\"i hee\", obj);\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                console.log(\"i hee\", rv);\n                break;\n\n              default:\n                console.log(\"i heer 2\", obj);\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  console.log(\"i heer 2 pk\", prev, key, obj[key]);\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          // It's a primitive, copy via assignment\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this3 = this;\n\n      return React.createElement(Square_B, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this3.onPlayAgainHandler();\n        },\n        value: \"Play Again\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this4 = this;\n\n      return React.createElement(Square_B, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this4.onSeeSolutionsHandler();\n        },\n        value: this.state.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellCheck\",\n    value: function displayCellCheck() {\n      var _this5 = this;\n\n      return React.createElement(Square_B, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onCellCheckHandler();\n        },\n        value: \"How am I doing?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this6 = this;\n\n      return React.createElement(Square_F, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        style: ((this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n          fontWeight: 'bold'\n        } : {\n          fontWeight: 'normal'\n        }, this.state.cellCheck[i][j] ? {\n          color: \"red\"\n        } : {\n          color: \"black\"\n        }),\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this6.valChangeHandler(i, j, event);\n        },\n        onClick: function onClick() {\n          var cellCheck = Array(2).fill(false).map(function () {\n            return new Array(3).fill(false);\n          });\n\n          _this6.setState({\n            cellCheck: cellCheck\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = calculateWinner(this.state.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, status), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, this.displayCellCheck()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar TTT =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TTT, _React$Component2);\n\n  function TTT() {\n    _classCallCheck(this, TTT);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TTT).apply(this, arguments));\n  }\n\n  _createClass(TTT, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TTT;\n}(React.Component); // ========================================\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default TTT;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js"],"names":["React","Component","Square_B","props","style","onClick","value","Square_F","readOnlyVal","key","defaultValue","onChange","Board","valChangeHandler","i","j","event","board","deepCopy","state","target","Number","console","log","setState","puzzle","squares","Array","fill","solution","given","cellCheck","map","saved_board","xIsNext","buttonText","bind","slice","calculateWinner","pencilMark","visited","undefined","cellCheck0","length","obj","rv","toString","call","o","Object","keys","reduce","prev","backgroundColor","color","height","width","onPlayAgainHandler","onSeeSolutionsHandler","onCellCheckHandler","fontWeight","winner","status","displayCellForm","displayPlayAgainCell","displaySeeSolutionsCell","displayCellCheck","TTT","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction Square_B(props) {\n    return (\n      // <button\n      //   style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      //   className=\"square\"\n      //   onClick={() => this.onPlayAgainHandler()}\n      // >\n      //   Play Again\n      // </button>\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function Square_F(props) {\n      return (\n\n          // <input size=\"2\" maxlength=\"1\" readOnly={props.readOnlyVal}\n          //   type=\"text\"\n          //   placeholder=\"\"\n          //   name={props.value}\n          //   value={props.value}\n          //   //onChange={props.onChange}\n          //   //onChange={props.onChange}\n          //   onChange={(event) => props.onChangeHandler}\n          // />\n\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            //readOnly={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n            //style={{fontWeight: 'bold'}}\n            style={props.style}\n            key={props.key}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n\n      );\n    }\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        squares: Array(6).fill(''),\n        solution: Array(6).fill(''),\n        puzzle: Array(6).fill(''),\n        //board: Array(6).fill(null),\n        board: Array(2).fill({value:'',given:false}),\n        cellCheck: Array(2).fill(false).map(() => new Array(3).fill(false)),\n        saved_board:Array(2).fill({value:'',given:false}),\n        xIsNext: true,\n        readOnlyVal:false,\n        buttonText:\"See Solution\"\n        };\n        this.valChangeHandler = this.valChangeHandler.bind(this);\n\n    }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  // displayCell(i) {\n  //   return (\n  //     <Square\n  //       value={this.state.squares[i]}\n  //       onClick={() => this.handleClick(i)}\n  //     />\n  //   );\n  // }\n\n  componentDidMount(){\n    // var solution = this.state.solution;\n    // var puzzle = this.state.puzzle;\n    // var board = puzzle;\n    var solution = [[{value:1,pencilMark:[],visited:[]},{value:2,pencilMark:[],visited:[]},\n    {value:9,pencilMark:[],visited:[]}],[{value:4,pencilMark:[],visited:[]},{value:5,pencilMark:[],visited:[]},\n    {value:6,pencilMark:[],visited:[]}]];\n    var puzzle = [[{value:1,given:true},{value:undefined,given:false},{value:undefined,given:false}],\n    [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n\n    //const board = puzzle.slice();\n    const board = this.deepCopy(puzzle);\n\nif(board ===  puzzle){console.log('equal')}else{console.log('not equal')}\n\nvar cellCheck0 =  Array(9).fill(false).map(() => new Array(9).fill(false));\nconsole.log(cellCheck0);\n  //  this.setState({solution: solution, puzzle: puzzle, board: board});\n    this.setState({solution: solution, puzzle: puzzle, board: board}, function () {\n      console.log('in mount bo',this.state.board);\n      console.log('in mount pu',this.state.puzzle);\n      console.log('in mount sol',this.state.solution);\n    });\n  }\n\n  onPlayAgainHandler(){\n    // var board = [[{value:1,given:true},{value:null,given:false},{value:undefined,given:false}],\n    // [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n    var board = this.deepCopy(this.state.puzzle);\n    var saved_board = this.deepCopy(this.state.puzzle);\n    var buttonText  = \"See Solution\";\n    var cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n    console.log('in onPlayAgainHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onPlayAgainHandler fter b',this.state.board);\n    });\n  }\n  onSeeSolutionsHandler(){\n\n    console.log('in onSeeSolutionsHandler before');\n    var buttonText = this.state.buttonText;\n    var cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n    var saved_board;\n    var board;\n\n    if(buttonText == \"See Solution\"){\n      buttonText  = \"Back To Puzzle\";\n      saved_board = this.deepCopy(this.state.board);\n      board       = this.deepCopy(this.state.solution);\n    } else {\n      buttonText  = \"See Solution\";\n      board       = this.deepCopy(this.state.saved_board);\n    }\n\n\n    console.log('in onSeeSolutionsHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onSeeSolutionsHandler fter b',this.state.board);\n      console.log('in onSeeSolutionsHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  onCellCheckHandler(){\n\n    console.log('in onCellCheckHandler before');\n    var board      = this.deepCopy(this.state.board);\n    var solution   = this.deepCopy(this.state.solution);\n    var cellCheck  = this.state.cellCheck.slice();\n    var saved_board;\n    var board;\n\n    for (var i=0;i<board.length;i++) {\n       for (var j=0;j<board[0].length;j++) {\n         if(board[i][j].value != undefined){\n           if(board[i][j].value != solution[i][j].value){\n             console.log(i,j,\"err\");\n             cellCheck[i][j]=true;\n           }\n       }\n    }\n  }\n\n    this.setState({cellCheck: cellCheck}, function () {\n      console.log('in onCellCheckHandler fter b',cellCheck);\n    });\n  }\n\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  // null => null\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          // It's an array, create a new array with\n                          // deep copies of the entries\n                          console.log(\"i hee\",obj)\n                          rv = obj.map(o => this.deepCopy(o));\n                            console.log(\"i hee\",rv)\n                          break;\n                      default:\n                      console.log(\"i heer 2\",obj)\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                            console.log(\"i heer 2 pk\",prev,key,obj[key])\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              // It's a primitive, copy via assignment\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n        board[i][j].value = Number(event.target.value);\n\n        console.log(board[i][j].value,i,j);\n        //this.setState({board: board});\n        this.setState({board: board}, function () {\n          console.log('in val b',this.state.board);\n          console.log('in val pu',this.state.puzzle);\n        });\n    }\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <Square_B\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n        value=\"Play Again\"\n      />\n    );\n  }\n\n\n\n  displaySeeSolutionsCell() {\n    return (\n      <Square_B\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n        value={this.state.buttonText}\n      />\n    );\n  }\n\n  displayCellCheck() {\n    return (\n    <Square_B\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onCellCheckHandler()}\n      value=\"How am I doing?\"\n    />\n  );\n  }\n\n  displayCellForm(i,j) {\n    return (\n      <Square_F\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        style={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n        onClick={ () => {const cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n          this.setState({cellCheck: cellCheck})  }}\n      />\n    );\n  }\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n\n        <form  >\n        <div className=\"board-row\">\n          {this.displayCellForm(0,0)}\n          {this.displayCellForm(0,1)}\n          {this.displayCellForm(0,2)}\n\n        </div>\n        <div className=\"board-row\">\n          {this.displayCellForm(1,0)}\n          {this.displayCellForm(1,1)}\n          {this.displayCellForm(1,2)}\n        </div>\n        </form>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayCellForm(0,0)}\n          {this.displayCellForm(0,1)}\n          {this.displayCellForm(0,2)}\n        </div>\n        <div className=\"board-row\">\n          {this.displayCellForm(1,0)}\n          {this.displayCellForm(1,1)}\n          {this.displayCellForm(1,2)}\n        </div>\n        <div className=\"board-row\">\n          {this.displayPlayAgainCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displaySeeSolutionsCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayCellCheck()}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TTT extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default TTT;\n"]},"metadata":{},"sourceType":"module"}