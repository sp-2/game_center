{"ast":null,"code":"import _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js\";\n// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n//\n// function Square(props) {\n//   return (\n//     <button\n//       style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n//       className=\"square\"\n//       onClick={props.onClick}\n//     >{props.value}\n//     </button>\n//   );\n// }\n//\n// class Board extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       cellValues: [],\n//       squares: Array(81).fill({value:\"X\",pencilMark:[],visited:[]})\n//       };\n//   }\n//\n//   onStopHandler(i) {\n//     //const squares = this.state.squares.slice();\n//     var nrows = 9;\n//     var ncols = 9;\n//     var squares =new Array(nrows);\n//\n//     for (var i=0;i<nrows;i++) {\n//       squares[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n//        }\n//     }\n//\n//     this.setState({squares: squares});\n//   }\n//\n//\n//   onPlayAgainHandler() {\n//\n//     var solution = this.getSolution();\n//     this.getUniquePuzzle(solution);\n//\n//   }\n//\n//   getSolution(){\n//     var nrows = 9;\n//     var ncols = 9;\n//     var squares =new Array(nrows);\n//\n//     for (var i=0;i<nrows;i++) {\n//       squares[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n//        }\n//     }\n//\n//     const cellValues = this.state.cellValues.slice();\n//     const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n//     this.shuffleArray(rowOneSeed);\n//     for(let i=0; i<rowOneSeed.length; i++){\n//         squares[0][i].value = rowOneSeed[i];\n//     }\n//\n//     this.setState({squares: squares, cellValues: cellValues});\n//\n//\n//     var iarr=[];\n//     var numbers = [];\n//     var cnt = 0;\n//     var loopcnt=0;\n//     var looparr=[];\n//\n//     for(let r=1; r<nrows; r++){\n//       for(let c=0; c<ncols; c++){\n//           if(squares[r][c].visited.length == 0){\n//             numbers = [1,2,3,4,5,6,7,8,9];\n//           }\n//\n//           numbers = this.checkCell(r,c,numbers,squares);\n//           numbers = this.checkRow(r,c,numbers,squares);\n//           numbers = this.checkCol(r,c,numbers,squares);\n//\n//           if(numbers.length!=0){\n//               var randIndex = Math.floor(Math.random() * (numbers.length-1));\n//\n//               iarr.push(randIndex);\n//               var val = numbers[randIndex];\n//               squares[r][c].value = val;\n//               numbers.splice(randIndex,1);\n//\n//               for(let rn=0; rn<numbers.length; rn++){\n//                 squares[r][c].pencilMark.push(numbers[rn]);\n//               }\n//\n//               squares[r][c].visited.push(val);\n//           } else {\n//             loopcnt++;\n//             looparr.push([r,c])\n//             while(r!=0){\n//               c--;\n//               if(c<0){r--;c=ncols-1}\n//               if(r<=0){break;}\n//\n//               if(squares[r][c].pencilMark.length!=0){\n//                 squares[r][c].value = squares[r][c].pencilMark.pop();\n//                 squares[r][c].visited.push(squares[r][c].value);\n//                 numbers = squares[r][c].pencilMark;\n//                 break;\n//               } else {\n//                 squares[r][c].value = 'X';\n//                 squares[r][c].visited = [];\n//               }\n//             }\n//           }\n//\n//       }\n//     }\n//     console.log('iarr',iarr,'looparr',looparr);\n//     console.log('loopcnt',loopcnt);\n//     //this.setState({squares: squares, cellValues: cellValues});\n//     this.setState({squares: squares, cellValues: cellValues}, function () {\n//       console.log('state updated');\n//     });\n//     console.log('st',this.state.squares);\n//     return squares;\n//   }\n//\n//   getUniquePuzzle(solution){\n//     var nrows        = 9;\n//     var ncols        = 9;\n//     var location;\n//     var solvedPuzzle = solution;\n//     var puzzle       = new Array(nrows);\n//\n//     console.log('sol',solvedPuzzle);\n//\n//     for (var i=0;i<nrows;i++) {\n//       puzzle[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          puzzle[i][j] = {value:solvedPuzzle[i][j].value,given:true};\n//        }\n//     }\n//\n//     console.log('puzzle',puzzle);\n//\n//     var locationArray = [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],\n//                          [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],\n//                          [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],\n//                          [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],\n//                          [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],\n//                          [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],\n//                          [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],\n//                          [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],\n//                          [8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8]];\n//\n//     this.shuffleArray(locationArray);\n//     //console.log(locationArray);\n//     location = locationArray.pop();\n//     //console.log('la',locationArray);\n//     //console.log('l',location);\n// var cntr=0;\n//     while(locationArray.length != 0){\n//       cntr++;\n//       puzzle[location[0]][location[1]].value = \"X\";\n//       puzzle[location[0]][location[1]].given = false;\n//       //break;\n//       if(this.uniqueSolve(puzzle)==false){\n//         console.log(\"in here\");\n//         puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n//         puzzle[location[0]][location[1]].given = true;\n//       }\n//       //break;\n//       if(cntr==54){break;}\n//       location = locationArray.pop();\n//    }\n//\n//    //console.log('puzzle2',puzzle);\n//    //can return puzzle and update state in before fn\n//    var squares =new Array(nrows);\n//\n//    for (var i=0;i<nrows;i++) {\n//      squares[i]=new Array(ncols)\n//    }\n//\n//    for (var i=0;i<nrows;i++) {\n//       for (var j=0;j<nrows;j++) {\n//         squares[i][j] = {value:puzzle[i][j].value,pencilMark:[],visited:[]};\n//       }\n//    }\n//\n//    this.setState({squares: squares}, function () {\n//      //console.log('state2 updated');\n//    });\n//\n//   }\n//\n//   uniqueSolve(puzzle){\n//     var solutions =[];\n//     this.solveSudoku(0,0,0,solutions,puzzle);\n//     var numSolutions = solutions.length;\n//     //console.log('numSolutions',numSolutions);\n//     //console.log('Solutions',solutions);\n//     if(numSolutions==0 || numSolutions>1){return false;}\n//     else {return true;}\n//   }\n//\n//   solveSudoku(row, col, cnt, solutions, board){\n//     //if(cnt>1){return true;}\n// //console.log(\"in solvesudoku\");\n//\n// //console.log(\"in solvesudokuboard\",board);\n//     if(row>=9){\n//       cnt=cnt+1;;\n//       solutions.push(board);\n//       return true;\n//     }\n// //console.log(\"in solvesudoku\");\n//\n//     while(board[row][col].given == true){\n//       col = col+1;\n//       row = (col<=8)?row:row+1;\n//       col = (col<=8)?col:0;\n//       if(row==9){cnt=cnt+1;\n//       solutions.push(board);\n//       return true;}\n//       //console.log('r,c',row,col);\n//     }\n//\n//     var pencilMarks = this.validPencilMarks(row,col,board);\n//\n//     var c = col+1;\n//     var r = (c<=8)?row:row+1;\n//     c = (c<=8)?c  :0;\n//\n// // console.log('r c in b',row,col);\n// //     console.log('b rc',board[row][col]);\n// //console.log('b pm',pencilMarks);\n//     for(let i=0; i<pencilMarks.length; i++){\n//       board[row][col].value = pencilMarks[i];\n//       board[row][col].given = true;\n//       this.solveSudoku(r,c,cnt,solutions,board);\n//       board[row][col].value = \"X\";\n//       board[row][col].given = false;\n//     }\n//\n//     return false;\n//   }\n//\n//   validPencilMarks(row,col,board){\n//     var pM = [1,2,3,4,5,6,7,8,9];\n//     pM = this.checkCell(row,col,pM,board);\n//     pM = this.checkRow(row,col,pM,board);\n//     pM = this.checkCol(row,col,pM,board);\n//     return pM;\n//   }\n//\n//\n//   getStartIndex(index){\n//     switch(index) {\n//         case 0:\n//         case 1:\n//         case 2:\n//             return 0;\n//         case 3:\n//         case 4:\n//         case 5:\n//             return 3;\n//         case 6:\n//         case 7:\n//         case 8:\n//             return 6;\n//         default:\n//             return 0;\n//     }\n//   }\n//\n//\n//\n//   checkCell = (r,c,numbers,squares) => {\n//\n//     var rowStart = this.getStartIndex(r);\n//     var colStart = this.getStartIndex(c);\n//\n//     for(let row=rowStart; row<=rowStart+2; row++){\n//       for(let col=colStart; col<=colStart+2; col++){\n//         if(!(row == r && col == c)){\n//           if(squares[row][col].value != \"X\"){\n//             if(numbers.indexOf(squares[row][col].value)!=-1){\n//              numbers.splice(numbers.indexOf(squares[row][col].value),1);\n//             }\n//           }\n//         }\n//       }\n//     }\n//     return numbers;\n//   }\n//\n//   checkRow = (r,c,numbers,squares) => {\n//     for(let i=0; i<9; i++){\n//       if(i != c){\n//         if(squares[r][i].value != \"X\"){\n//           if(numbers.indexOf(squares[r][i].value)!=-1){\n//            numbers.splice(numbers.indexOf(squares[r][i].value),1);\n//           }\n//         }\n//       }\n//     }\n//       return numbers;\n//   }\n//\n//\n//\n//   checkCol = (r,c,numbers,squares) => {\n//\n//     for(let i=0; i<9; i++){\n//\n//       if(i != r){\n//         if(squares[i][c].value != \"X\"){\n//           if(numbers.indexOf(squares[i][c].value)!=-1){\n//            numbers.splice(numbers.indexOf(squares[i][c].value),1);\n//           }\n//         }\n//       }\n//     }\n//     return numbers;\n//   }\n//\n//   displayCell(i,j) {\n//     return (\n//       <Square\n//         value={this.state.squares[i][j]?this.state.squares[i][j].value:\"\"}\n//         //onClick={() => this.onClickHandler(i)}\n//       />\n//     );\n//   }\n//\n//   displayPlayAgainCell() {\n//     return (\n//       <button\n//       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n//         className=\"square\"\n//         onClick={() => this.onPlayAgainHandler()}\n//       >\n//         Play Again\n//       </button>\n//     );\n//   }\n//\n//   displayStopCell() {\n//     return (\n//       <button\n//       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n//         className=\"square\"\n//         onClick={() => this.onStopHandler()}\n//       >\n//         Stop\n//       </button>\n//     );\n//   }\n//\n//   shuffleArray(array) {\n//     for (var i = array.length - 1; i > 0; i--) {\n//         var j = Math.floor(Math.random() * (i + 1));\n//         var temp = array[i];\n//         array[i] = array[j];\n//         array[j] = temp;\n//     }\n// }\n// render() {\n//   return (\n//     <div>\n//       <div className=\"board-row\">\n//         {this.displayCell(0,0)}\n//         {this.displayCell(0,1)}\n//         {this.displayCell(0,2)}\n//         {this.displayCell(0,3)}\n//         {this.displayCell(0,4)}\n//         {this.displayCell(0,5)}\n//         {this.displayCell(0,6)}\n//         {this.displayCell(0,7)}\n//         {this.displayCell(0,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(1,0)}\n//         {this.displayCell(1,1)}\n//         {this.displayCell(1,2)}\n//         {this.displayCell(1,3)}\n//         {this.displayCell(1,4)}\n//         {this.displayCell(1,5)}\n//         {this.displayCell(1,6)}\n//         {this.displayCell(1,7)}\n//         {this.displayCell(1,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(2,0)}\n//         {this.displayCell(2,1)}\n//         {this.displayCell(2,2)}\n//         {this.displayCell(2,3)}\n//         {this.displayCell(2,4)}\n//         {this.displayCell(2,5)}\n//         {this.displayCell(2,6)}\n//         {this.displayCell(2,7)}\n//         {this.displayCell(2,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(3,0)}\n//         {this.displayCell(3,1)}\n//         {this.displayCell(3,2)}\n//         {this.displayCell(3,3)}\n//         {this.displayCell(3,4)}\n//         {this.displayCell(3,5)}\n//         {this.displayCell(3,6)}\n//         {this.displayCell(3,7)}\n//         {this.displayCell(3,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(4,0)}\n//         {this.displayCell(4,1)}\n//         {this.displayCell(4,2)}\n//         {this.displayCell(4,3)}\n//         {this.displayCell(4,4)}\n//         {this.displayCell(4,5)}\n//         {this.displayCell(4,6)}\n//         {this.displayCell(4,7)}\n//         {this.displayCell(4,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(5,0)}\n//         {this.displayCell(5,1)}\n//         {this.displayCell(5,2)}\n//         {this.displayCell(5,3)}\n//         {this.displayCell(5,4)}\n//         {this.displayCell(5,5)}\n//         {this.displayCell(5,6)}\n//         {this.displayCell(5,7)}\n//         {this.displayCell(5,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(6,0)}\n//         {this.displayCell(6,1)}\n//         {this.displayCell(6,2)}\n//         {this.displayCell(6,3)}\n//         {this.displayCell(6,4)}\n//         {this.displayCell(6,5)}\n//         {this.displayCell(6,6)}\n//         {this.displayCell(6,7)}\n//         {this.displayCell(6,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(7,0)}\n//         {this.displayCell(7,1)}\n//         {this.displayCell(7,2)}\n//         {this.displayCell(7,3)}\n//         {this.displayCell(7,4)}\n//         {this.displayCell(7,5)}\n//         {this.displayCell(7,6)}\n//         {this.displayCell(7,7)}\n//         {this.displayCell(7,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(8,0)}\n//         {this.displayCell(8,1)}\n//         {this.displayCell(8,2)}\n//         {this.displayCell(8,3)}\n//         {this.displayCell(8,4)}\n//         {this.displayCell(8,5)}\n//         {this.displayCell(8,6)}\n//         {this.displayCell(8,7)}\n//         {this.displayCell(8,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayPlayAgainCell()}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayStopCell()}\n//       </div>\n//     </div>\n//   );\n// }\n// }\n//\n// class Game extends React.Component {\n// render() {\n//   return (\n//       <div>\n//       <h1> Memory Game </h1>\n//         <Board />\n//       </div>\n//   );\n// }\n// }\n//\n// export default Game;\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport \"react-router\";\nimport { BrowserRouter, Route, Link } from 'react-router-dom'; //import Home from \"./Home.js\";\n\nimport MemoryGame from \"./MemoryGame.js\"; // import SudokuPuzzleGenerator from \"./SudokuPuzzleGenerator.js\"\n// import SudokuPuzzleSolver from \"./SudokuPuzzleSolver.js\";\n// import PlayerStats from \"./PlayerStats.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      transactionsList: [],\n      coinVal: 1,\n      numCoins: 0 //this.handleTransaction = this.handleTransaction.bind(this);\n\n    };\n    return _this;\n  } // handleTransaction(transaction) {\n  //   const transactionType = transaction.type;\n  //   var coinVal = this.state.coinVal;\n  //   var numCoins = this.state.numCoins;\n  //   const val = Number(transaction.quantity);\n  //   switch (transactionType)\n  //     {\n  //         case \"Bought\": {\n  //           coinVal+=val;\n  //           numCoins+=val;\n  //           break;\n  //         }\n  //         case \"Sold\": {\n  //           if(transaction.quantity*coinVal < numCoins*coinVal){\n  //             coinVal-=val;\n  //             numCoins-=val;\n  //           }else{return;}\n  //           break;\n  //         }\n  //         case \"Mined\": {\n  //           coinVal+=val;\n  //           numCoins+=val;\n  //           break;\n  //         }\n  //         default: ;\n  //     }\n  //   transaction.value = coinVal;\n  //   console.log(transaction);\n  //   var transactionsList = this.state.transactionsList;\n  //   transactionsList = transactionsList.concat(transaction);\n  //   this.setState({coinVal, transactionsList, numCoins});\n  //   console.log(this.state.transactionsList);\n  //}\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      }, \"Game Center\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/memoryGame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, \"Memory Game\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/generateSudoku\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578\n        },\n        __self: this\n      }, \"Sudoku\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/solveSudoku\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Solve Sudoku\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/playerStats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, \"Player Statistics\")), React.createElement(\"a\", {\n        href: \"/playerStats\",\n        target: \"_parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Click me !\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: MemoryGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        component: MemoryGame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/memoryGame\",\n        render: function render(props) {\n          return React.createElement(MemoryGame, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 590\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/generateSudoku\",\n        render: function render(props) {\n          return React.createElement(MemoryGame, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 594\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/solveSudoku\",\n        render: function render(props) {\n          return React.createElement(MemoryGame, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 598\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/playerStats\",\n        render: function render(props) {\n          return React.createElement(MemoryGame, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 602\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js"],"names":["React","Component","BrowserRouter","Route","Link","MemoryGame","App","props","state","transactionsList","coinVal","numCoins"],"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","sourcesContent":["// import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n//\n// function Square(props) {\n//   return (\n//     <button\n//       style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n//       className=\"square\"\n//       onClick={props.onClick}\n//     >{props.value}\n//     </button>\n//   );\n// }\n//\n// class Board extends React.Component {\n//   constructor(props) {\n//       super(props);\n//       this.state = {\n//       cellValues: [],\n//       squares: Array(81).fill({value:\"X\",pencilMark:[],visited:[]})\n//       };\n//   }\n//\n//   onStopHandler(i) {\n//     //const squares = this.state.squares.slice();\n//     var nrows = 9;\n//     var ncols = 9;\n//     var squares =new Array(nrows);\n//\n//     for (var i=0;i<nrows;i++) {\n//       squares[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n//        }\n//     }\n//\n//     this.setState({squares: squares});\n//   }\n//\n//\n//   onPlayAgainHandler() {\n//\n//     var solution = this.getSolution();\n//     this.getUniquePuzzle(solution);\n//\n//   }\n//\n//   getSolution(){\n//     var nrows = 9;\n//     var ncols = 9;\n//     var squares =new Array(nrows);\n//\n//     for (var i=0;i<nrows;i++) {\n//       squares[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n//        }\n//     }\n//\n//     const cellValues = this.state.cellValues.slice();\n//     const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n//     this.shuffleArray(rowOneSeed);\n//     for(let i=0; i<rowOneSeed.length; i++){\n//         squares[0][i].value = rowOneSeed[i];\n//     }\n//\n//     this.setState({squares: squares, cellValues: cellValues});\n//\n//\n//     var iarr=[];\n//     var numbers = [];\n//     var cnt = 0;\n//     var loopcnt=0;\n//     var looparr=[];\n//\n//     for(let r=1; r<nrows; r++){\n//       for(let c=0; c<ncols; c++){\n//           if(squares[r][c].visited.length == 0){\n//             numbers = [1,2,3,4,5,6,7,8,9];\n//           }\n//\n//           numbers = this.checkCell(r,c,numbers,squares);\n//           numbers = this.checkRow(r,c,numbers,squares);\n//           numbers = this.checkCol(r,c,numbers,squares);\n//\n//           if(numbers.length!=0){\n//               var randIndex = Math.floor(Math.random() * (numbers.length-1));\n//\n//               iarr.push(randIndex);\n//               var val = numbers[randIndex];\n//               squares[r][c].value = val;\n//               numbers.splice(randIndex,1);\n//\n//               for(let rn=0; rn<numbers.length; rn++){\n//                 squares[r][c].pencilMark.push(numbers[rn]);\n//               }\n//\n//               squares[r][c].visited.push(val);\n//           } else {\n//             loopcnt++;\n//             looparr.push([r,c])\n//             while(r!=0){\n//               c--;\n//               if(c<0){r--;c=ncols-1}\n//               if(r<=0){break;}\n//\n//               if(squares[r][c].pencilMark.length!=0){\n//                 squares[r][c].value = squares[r][c].pencilMark.pop();\n//                 squares[r][c].visited.push(squares[r][c].value);\n//                 numbers = squares[r][c].pencilMark;\n//                 break;\n//               } else {\n//                 squares[r][c].value = 'X';\n//                 squares[r][c].visited = [];\n//               }\n//             }\n//           }\n//\n//       }\n//     }\n//     console.log('iarr',iarr,'looparr',looparr);\n//     console.log('loopcnt',loopcnt);\n//     //this.setState({squares: squares, cellValues: cellValues});\n//     this.setState({squares: squares, cellValues: cellValues}, function () {\n//       console.log('state updated');\n//     });\n//     console.log('st',this.state.squares);\n//     return squares;\n//   }\n//\n//   getUniquePuzzle(solution){\n//     var nrows        = 9;\n//     var ncols        = 9;\n//     var location;\n//     var solvedPuzzle = solution;\n//     var puzzle       = new Array(nrows);\n//\n//     console.log('sol',solvedPuzzle);\n//\n//     for (var i=0;i<nrows;i++) {\n//       puzzle[i]=new Array(ncols)\n//     }\n//\n//     for (var i=0;i<nrows;i++) {\n//        for (var j=0;j<nrows;j++) {\n//          puzzle[i][j] = {value:solvedPuzzle[i][j].value,given:true};\n//        }\n//     }\n//\n//     console.log('puzzle',puzzle);\n//\n//     var locationArray = [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],\n//                          [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],\n//                          [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],\n//                          [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],\n//                          [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],\n//                          [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],\n//                          [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],\n//                          [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],\n//                          [8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8]];\n//\n//     this.shuffleArray(locationArray);\n//     //console.log(locationArray);\n//     location = locationArray.pop();\n//     //console.log('la',locationArray);\n//     //console.log('l',location);\n// var cntr=0;\n//     while(locationArray.length != 0){\n//       cntr++;\n//       puzzle[location[0]][location[1]].value = \"X\";\n//       puzzle[location[0]][location[1]].given = false;\n//       //break;\n//       if(this.uniqueSolve(puzzle)==false){\n//         console.log(\"in here\");\n//         puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n//         puzzle[location[0]][location[1]].given = true;\n//       }\n//       //break;\n//       if(cntr==54){break;}\n//       location = locationArray.pop();\n//    }\n//\n//    //console.log('puzzle2',puzzle);\n//    //can return puzzle and update state in before fn\n//    var squares =new Array(nrows);\n//\n//    for (var i=0;i<nrows;i++) {\n//      squares[i]=new Array(ncols)\n//    }\n//\n//    for (var i=0;i<nrows;i++) {\n//       for (var j=0;j<nrows;j++) {\n//         squares[i][j] = {value:puzzle[i][j].value,pencilMark:[],visited:[]};\n//       }\n//    }\n//\n//    this.setState({squares: squares}, function () {\n//      //console.log('state2 updated');\n//    });\n//\n//   }\n//\n//   uniqueSolve(puzzle){\n//     var solutions =[];\n//     this.solveSudoku(0,0,0,solutions,puzzle);\n//     var numSolutions = solutions.length;\n//     //console.log('numSolutions',numSolutions);\n//     //console.log('Solutions',solutions);\n//     if(numSolutions==0 || numSolutions>1){return false;}\n//     else {return true;}\n//   }\n//\n//   solveSudoku(row, col, cnt, solutions, board){\n//     //if(cnt>1){return true;}\n// //console.log(\"in solvesudoku\");\n//\n// //console.log(\"in solvesudokuboard\",board);\n//     if(row>=9){\n//       cnt=cnt+1;;\n//       solutions.push(board);\n//       return true;\n//     }\n// //console.log(\"in solvesudoku\");\n//\n//     while(board[row][col].given == true){\n//       col = col+1;\n//       row = (col<=8)?row:row+1;\n//       col = (col<=8)?col:0;\n//       if(row==9){cnt=cnt+1;\n//       solutions.push(board);\n//       return true;}\n//       //console.log('r,c',row,col);\n//     }\n//\n//     var pencilMarks = this.validPencilMarks(row,col,board);\n//\n//     var c = col+1;\n//     var r = (c<=8)?row:row+1;\n//     c = (c<=8)?c  :0;\n//\n// // console.log('r c in b',row,col);\n// //     console.log('b rc',board[row][col]);\n// //console.log('b pm',pencilMarks);\n//     for(let i=0; i<pencilMarks.length; i++){\n//       board[row][col].value = pencilMarks[i];\n//       board[row][col].given = true;\n//       this.solveSudoku(r,c,cnt,solutions,board);\n//       board[row][col].value = \"X\";\n//       board[row][col].given = false;\n//     }\n//\n//     return false;\n//   }\n//\n//   validPencilMarks(row,col,board){\n//     var pM = [1,2,3,4,5,6,7,8,9];\n//     pM = this.checkCell(row,col,pM,board);\n//     pM = this.checkRow(row,col,pM,board);\n//     pM = this.checkCol(row,col,pM,board);\n//     return pM;\n//   }\n//\n//\n//   getStartIndex(index){\n//     switch(index) {\n//         case 0:\n//         case 1:\n//         case 2:\n//             return 0;\n//         case 3:\n//         case 4:\n//         case 5:\n//             return 3;\n//         case 6:\n//         case 7:\n//         case 8:\n//             return 6;\n//         default:\n//             return 0;\n//     }\n//   }\n//\n//\n//\n//   checkCell = (r,c,numbers,squares) => {\n//\n//     var rowStart = this.getStartIndex(r);\n//     var colStart = this.getStartIndex(c);\n//\n//     for(let row=rowStart; row<=rowStart+2; row++){\n//       for(let col=colStart; col<=colStart+2; col++){\n//         if(!(row == r && col == c)){\n//           if(squares[row][col].value != \"X\"){\n//             if(numbers.indexOf(squares[row][col].value)!=-1){\n//              numbers.splice(numbers.indexOf(squares[row][col].value),1);\n//             }\n//           }\n//         }\n//       }\n//     }\n//     return numbers;\n//   }\n//\n//   checkRow = (r,c,numbers,squares) => {\n//     for(let i=0; i<9; i++){\n//       if(i != c){\n//         if(squares[r][i].value != \"X\"){\n//           if(numbers.indexOf(squares[r][i].value)!=-1){\n//            numbers.splice(numbers.indexOf(squares[r][i].value),1);\n//           }\n//         }\n//       }\n//     }\n//       return numbers;\n//   }\n//\n//\n//\n//   checkCol = (r,c,numbers,squares) => {\n//\n//     for(let i=0; i<9; i++){\n//\n//       if(i != r){\n//         if(squares[i][c].value != \"X\"){\n//           if(numbers.indexOf(squares[i][c].value)!=-1){\n//            numbers.splice(numbers.indexOf(squares[i][c].value),1);\n//           }\n//         }\n//       }\n//     }\n//     return numbers;\n//   }\n//\n//   displayCell(i,j) {\n//     return (\n//       <Square\n//         value={this.state.squares[i][j]?this.state.squares[i][j].value:\"\"}\n//         //onClick={() => this.onClickHandler(i)}\n//       />\n//     );\n//   }\n//\n//   displayPlayAgainCell() {\n//     return (\n//       <button\n//       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n//         className=\"square\"\n//         onClick={() => this.onPlayAgainHandler()}\n//       >\n//         Play Again\n//       </button>\n//     );\n//   }\n//\n//   displayStopCell() {\n//     return (\n//       <button\n//       style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n//         className=\"square\"\n//         onClick={() => this.onStopHandler()}\n//       >\n//         Stop\n//       </button>\n//     );\n//   }\n//\n//   shuffleArray(array) {\n//     for (var i = array.length - 1; i > 0; i--) {\n//         var j = Math.floor(Math.random() * (i + 1));\n//         var temp = array[i];\n//         array[i] = array[j];\n//         array[j] = temp;\n//     }\n// }\n// render() {\n//   return (\n//     <div>\n//       <div className=\"board-row\">\n//         {this.displayCell(0,0)}\n//         {this.displayCell(0,1)}\n//         {this.displayCell(0,2)}\n//         {this.displayCell(0,3)}\n//         {this.displayCell(0,4)}\n//         {this.displayCell(0,5)}\n//         {this.displayCell(0,6)}\n//         {this.displayCell(0,7)}\n//         {this.displayCell(0,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(1,0)}\n//         {this.displayCell(1,1)}\n//         {this.displayCell(1,2)}\n//         {this.displayCell(1,3)}\n//         {this.displayCell(1,4)}\n//         {this.displayCell(1,5)}\n//         {this.displayCell(1,6)}\n//         {this.displayCell(1,7)}\n//         {this.displayCell(1,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(2,0)}\n//         {this.displayCell(2,1)}\n//         {this.displayCell(2,2)}\n//         {this.displayCell(2,3)}\n//         {this.displayCell(2,4)}\n//         {this.displayCell(2,5)}\n//         {this.displayCell(2,6)}\n//         {this.displayCell(2,7)}\n//         {this.displayCell(2,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(3,0)}\n//         {this.displayCell(3,1)}\n//         {this.displayCell(3,2)}\n//         {this.displayCell(3,3)}\n//         {this.displayCell(3,4)}\n//         {this.displayCell(3,5)}\n//         {this.displayCell(3,6)}\n//         {this.displayCell(3,7)}\n//         {this.displayCell(3,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(4,0)}\n//         {this.displayCell(4,1)}\n//         {this.displayCell(4,2)}\n//         {this.displayCell(4,3)}\n//         {this.displayCell(4,4)}\n//         {this.displayCell(4,5)}\n//         {this.displayCell(4,6)}\n//         {this.displayCell(4,7)}\n//         {this.displayCell(4,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(5,0)}\n//         {this.displayCell(5,1)}\n//         {this.displayCell(5,2)}\n//         {this.displayCell(5,3)}\n//         {this.displayCell(5,4)}\n//         {this.displayCell(5,5)}\n//         {this.displayCell(5,6)}\n//         {this.displayCell(5,7)}\n//         {this.displayCell(5,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(6,0)}\n//         {this.displayCell(6,1)}\n//         {this.displayCell(6,2)}\n//         {this.displayCell(6,3)}\n//         {this.displayCell(6,4)}\n//         {this.displayCell(6,5)}\n//         {this.displayCell(6,6)}\n//         {this.displayCell(6,7)}\n//         {this.displayCell(6,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(7,0)}\n//         {this.displayCell(7,1)}\n//         {this.displayCell(7,2)}\n//         {this.displayCell(7,3)}\n//         {this.displayCell(7,4)}\n//         {this.displayCell(7,5)}\n//         {this.displayCell(7,6)}\n//         {this.displayCell(7,7)}\n//         {this.displayCell(7,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayCell(8,0)}\n//         {this.displayCell(8,1)}\n//         {this.displayCell(8,2)}\n//         {this.displayCell(8,3)}\n//         {this.displayCell(8,4)}\n//         {this.displayCell(8,5)}\n//         {this.displayCell(8,6)}\n//         {this.displayCell(8,7)}\n//         {this.displayCell(8,8)}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayPlayAgainCell()}\n//       </div>\n//       <div className=\"board-row\">\n//         {this.displayStopCell()}\n//       </div>\n//     </div>\n//   );\n// }\n// }\n//\n// class Game extends React.Component {\n// render() {\n//   return (\n//       <div>\n//       <h1> Memory Game </h1>\n//         <Board />\n//       </div>\n//   );\n// }\n// }\n//\n// export default Game;\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport \"react-router\";\nimport {\n  BrowserRouter,\n  Route,\n  Link\n} from 'react-router-dom'\n//import Home from \"./Home.js\";\nimport MemoryGame from \"./MemoryGame.js\"\n// import SudokuPuzzleGenerator from \"./SudokuPuzzleGenerator.js\"\n// import SudokuPuzzleSolver from \"./SudokuPuzzleSolver.js\";\n// import PlayerStats from \"./PlayerStats.js\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactionsList: [],\n      coinVal: 1,\n      numCoins:0\n    }\n    //this.handleTransaction = this.handleTransaction.bind(this);\n}\n\n// handleTransaction(transaction) {\n//   const transactionType = transaction.type;\n//   var coinVal = this.state.coinVal;\n//   var numCoins = this.state.numCoins;\n//   const val = Number(transaction.quantity);\n//   switch (transactionType)\n//     {\n//         case \"Bought\": {\n//           coinVal+=val;\n//           numCoins+=val;\n//           break;\n//         }\n//         case \"Sold\": {\n//           if(transaction.quantity*coinVal < numCoins*coinVal){\n//             coinVal-=val;\n//             numCoins-=val;\n//           }else{return;}\n//           break;\n//         }\n//         case \"Mined\": {\n//           coinVal+=val;\n//           numCoins+=val;\n//           break;\n//         }\n//         default: ;\n//     }\n//   transaction.value = coinVal;\n//   console.log(transaction);\n//   var transactionsList = this.state.transactionsList;\n//   transactionsList = transactionsList.concat(transaction);\n//   this.setState({coinVal, transactionsList, numCoins});\n//   console.log(this.state.transactionsList);\n//}\n\n  render(){\n    return (\n      <BrowserRouter>\n      <div>\n\n          <div>\n\n              <li><Link to=\"/home\">Game Center</Link></li>\n              <li><Link to=\"/memoryGame\">Memory Game</Link></li>\n              <li><Link to=\"/generateSudoku\">Sudoku</Link></li>\n              <li><Link to=\"/solveSudoku\">Solve Sudoku</Link></li>\n              <li><Link to=\"/playerStats\">Player Statistics</Link></li>\n              <a href=\"/playerStats\" target=\"_parent\"><button>Click me !</button></a>\n              <hr/>\n\n          </div>\n\n            <Route exact path=\"/\" component={MemoryGame} />\n            <Route path=\"/home\" component={MemoryGame} />\n            <Route\n              path='/memoryGame'\n              render={(props) => <MemoryGame  />}\n            />\n            <Route\n              path='/generateSudoku'\n              render={(props) => <MemoryGame />}\n            />\n            <Route\n              path='/solveSudoku'\n              render={(props) => <MemoryGame/>}\n            />\n            <Route\n              path='/playerStats'\n              render={(props) => <MemoryGame  />}\n            />\n\n          </div>\n  </BrowserRouter>\n    )\n}\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}