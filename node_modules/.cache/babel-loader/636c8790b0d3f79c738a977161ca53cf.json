{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: \"grey\",\n      color: \"white\",\n      height: \"50px\",\n      width: \"50px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      console.log(rowStart, colStart);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col] != \"X\") {\n              numbers = numbers.replace(squares[row][col], ''); ////console.log('rrrr',numbers);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      //console.log(\"HII\");\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i] != \"X\") {\n            //console.log(\"HII0\");\n            //console.log(squares[r][i]);\n            numbers = numbers.replace(squares[r][i], ''); //console.log('r',numbers);\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c] != \"X\") {\n            //console.log(squares[i][c]);\n            numbers = numbers.replace(squares[i][c], ''); //console.log('rr',numbers);\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.state = {\n      cellValues: [],\n      // cellValues: [\"blue\", \"yellow\", \"white\", \"pink\",\n      // \"yellow\",\"red\",\"white\",\"red\",\n      // \"purple\",\"blue\",\"purple\",\"pink\"],\n      //cellObj: {value:\"X\",pencilMark:[],visited:[]},\n      // cellObj['value'] = \"X\";\n      // cellObj['pencilMark'] = [];\n      // cellObj['visited'] = [];\n      squares: Array(81).fill({\n        value: \"X\",\n        pencilMark: [],\n        visited: []\n      }),\n      //squares: Array(81).fill(\"\"),\n      //squares: [],\n      guessOne: true,\n      guessTwo: false,\n      index1: false\n    };\n    return _this;\n  } //   onClickHandler(i) {\n  //   const squares = this.state.squares.slice();\n  //\n  //   if(this.state.guessOne){\n  //     squares[i] = this.state.cellValues[i];\n  //\n  //     this.setState({\n  //       squares: squares,\n  //       guessOne: false,\n  //       guessTwo: true,\n  //       index1: i,\n  //     });\n  //   } else if(this.state.guessTwo){\n  //       squares[i] = this.state.cellValues[i];\n  //\n  //       this.setState({\n  //         squares: squares,\n  //         guessOne: true,\n  //         guessTwo: false\n  //       },() => {\n  //         if (!this.isMatch(this.state.index1,i)){\n  //           this.flipCells(this.state.index1,i);\n  //         }\n  //     });\n  //\n  //   }\n  // }\n\n\n  _createClass(Board, [{\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      //const squares = Array(81).fill(\"grey\");\n      var squares = [];\n      var nrows = 9;\n      var ncols = 9; //var listOfObjects = [];\n      //var a = [\"car\", \"bike\", \"scooter\"];\n      //a.forEach(function(entry) {\n      // var singleObj = {}\n      // singleObj['type'] = 'vehicle';\n      // singleObj['value'] = entry;\n      // listOfObjects.push(singleObj);\n      //});\n\n      for (var i = 0; i < nrows; i++) {\n        // var cellObj = {};\n        // cellObj['value'] = \"X\";\n        // cellObj['pencilMark'] = [];\n        // cellObj['visited'] = [];\n        //squares[i] = Array(9).fill(cellObj);\n        squares[i] = Array(9).fill({\n          value: \"X\",\n          pencilMark: [],\n          visited: []\n        }); //squares[i] = Array(9).fill(\"X\");\n\n        console.log('pppppp', squares[i][0].value);\n        console.log('pppp', squares[i]);\n\n        for (var i = 0; i < nrows; i++) {\n          squares[i] = Array(9).fill({\n            value: \"X\",\n            pencilMark: [],\n            visited: []\n          });\n        }\n      }\n\n      console.log(squares);\n      var cellValues = this.state.cellValues.slice();\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()).map(function (x) {\n        return ++x;\n      });\n\n      console.log('ooooo', rowOneSeed);\n      this.shuffleArray(rowOneSeed);\n      console.log(rowOneSeed); //this.shuffleArray(cellValues);\n      //squares.concat(rowOneSeed);\n\n      for (var _i = 0; _i < rowOneSeed.length; _i++) {\n        squares[0][_i].value = rowOneSeed[_i];\n        console.log('uuuuuuuu', '0', _i, squares[0][_i].value);\n      }\n\n      console.log(squares); //console.log(squares[0][0]);\n\n      this.setState({\n        squares: squares,\n        cellValues: cellValues\n      }); // var iarr=[];\n      //     //var numbers = \"0123456789\";\n      //\n      //     for(let r=1; r<nrows; r++){\n      //       for(let c=0; c<ncols; c++){\n      //         var numbers = \"123456789\";\n      //         console.log(numbers);\n      //         console.log(r,c);\n      //         numbers = this.checkCell(r,c,numbers,squares);\n      //         numbers = this.checkRow(r,c,numbers,squares);\n      //         //console.log(numbers);\n      //         numbers = this.checkCol(r,c,numbers,squares);\n      //         console.log('o',numbers);\n      //         var randIndex = Math.floor(Math.random() * (numbers.length-1));\n      //         console.log(randIndex);\n      //         iarr.push(randIndex);\n      //         var val = numbers[randIndex];\n      //         console.log(val);\n      //         if(randIndex != -1){\n      //           squares[r][c] = val;\n      //         } else {squares[r][c] = 'X';}\n      //\n      //       }\n      //     }\n      //     console.log('iarr',iarr);\n      //     this.setState({squares: squares, cellValues: cellValues});\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i, j) {\n      return React.createElement(Square, {\n        value: this.state.squares[i][j] ? this.state.squares[i][j].value : \"\" //onClick={() => this.onClickHandler(i)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this2 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this2.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.displayCell(0, 0), this.displayCell(0, 1), this.displayCell(0, 2), this.displayCell(0, 3), this.displayCell(0, 4), this.displayCell(0, 5), this.displayCell(0, 6), this.displayCell(0, 7), this.displayCell(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, this.displayCell(1, 0), this.displayCell(1, 1), this.displayCell(1, 2), this.displayCell(1, 3), this.displayCell(1, 4), this.displayCell(1, 5), this.displayCell(1, 6), this.displayCell(1, 7), this.displayCell(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, this.displayCell(2, 0), this.displayCell(2, 1), this.displayCell(2, 2), this.displayCell(2, 3), this.displayCell(2, 4), this.displayCell(2, 5), this.displayCell(2, 6), this.displayCell(2, 7), this.displayCell(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, this.displayCell(3, 0), this.displayCell(3, 1), this.displayCell(3, 2), this.displayCell(3, 3), this.displayCell(3, 4), this.displayCell(3, 5), this.displayCell(3, 6), this.displayCell(3, 7), this.displayCell(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, this.displayCell(4, 0), this.displayCell(4, 1), this.displayCell(4, 2), this.displayCell(4, 3), this.displayCell(4, 4), this.displayCell(4, 5), this.displayCell(4, 6), this.displayCell(4, 7), this.displayCell(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, this.displayCell(5, 0), this.displayCell(5, 1), this.displayCell(5, 2), this.displayCell(5, 3), this.displayCell(5, 4), this.displayCell(5, 5), this.displayCell(5, 6), this.displayCell(5, 7), this.displayCell(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, this.displayCell(6, 0), this.displayCell(6, 1), this.displayCell(6, 2), this.displayCell(6, 3), this.displayCell(6, 4), this.displayCell(6, 5), this.displayCell(6, 6), this.displayCell(6, 7), this.displayCell(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, this.displayCell(7, 0), this.displayCell(7, 1), this.displayCell(7, 2), this.displayCell(7, 3), this.displayCell(7, 4), this.displayCell(7, 5), this.displayCell(7, 6), this.displayCell(7, 7), this.displayCell(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, this.displayCell(8, 0), this.displayCell(8, 1), this.displayCell(8, 2), this.displayCell(8, 3), this.displayCell(8, 4), this.displayCell(8, 5), this.displayCell(8, 6), this.displayCell(8, 7), this.displayCell(8, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, this.displayPlayAgainCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \" Memory Game \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js"],"names":["React","Component","Square","props","backgroundColor","color","height","width","onClick","value","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","console","log","row","col","replace","checkRow","i","checkCol","state","cellValues","Array","fill","pencilMark","visited","guessOne","guessTwo","index1","nrows","ncols","slice","rowOneSeed","keys","map","x","shuffleArray","length","setState","index","j","onPlayAgainHandler","array","Math","floor","random","temp","displayCell","displayPlayAgainCell","Game"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SACE;AACE,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC,MAAjB;AAAyBC,MAAAA,KAAK,EAAC,OAA/B;AAAwCC,MAAAA,MAAM,EAAC,MAA/C;AAAuDC,MAAAA,KAAK,EAAC;AAA7D,KADT;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACK,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEL,KAAK,CAACM,KAJR,CADF;AAQD;;IAEKC,K;;;;;AACJ,iBAAYP,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;;AADe,UAiJrBQ,SAjJqB,GAiJT,UAACC,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AAEnC,UAAIC,QAAQ,GAAG,MAAKC,aAAL,CAAmBL,CAAnB,CAAf;;AACA,UAAIM,QAAQ,GAAG,MAAKD,aAAL,CAAmBJ,CAAnB,CAAf;;AACFM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAqBE,QAArB;;AACE,WAAI,IAAIG,GAAG,GAACL,QAAZ,EAAsBK,GAAG,IAAEL,QAAQ,GAAC,CAApC,EAAuCK,GAAG,EAA1C,EAA6C;AAC3C,aAAI,IAAIC,GAAG,GAACJ,QAAZ,EAAsBI,GAAG,IAAEJ,QAAQ,GAAC,CAApC,EAAuCI,GAAG,EAA1C,EAA6C;AAC3C,cAAG,EAAED,GAAG,IAAIT,CAAP,IAAYU,GAAG,IAAIT,CAArB,CAAH,EAA2B;AACzB,gBAAGE,OAAO,CAACM,GAAD,CAAP,CAAaC,GAAb,KAAqB,GAAxB,EAA4B;AAC1BR,cAAAA,OAAO,GAAGA,OAAO,CAACS,OAAR,CAAgBR,OAAO,CAACM,GAAD,CAAP,CAAaC,GAAb,CAAhB,EAAkC,EAAlC,CAAV,CAD0B,CAE1B;AACD;AACF;AACF;AACF;;AACD,aAAOR,OAAP;AACD,KAjKoB;;AAAA,UAmKrBU,QAnKqB,GAmKV,UAACZ,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AACpC;AACE,WAAI,IAAIU,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;AAEpB,YAAGA,CAAC,IAAIZ,CAAR,EAAU;AACR,cAAGE,OAAO,CAACH,CAAD,CAAP,CAAWa,CAAX,KAAiB,GAApB,EAAwB;AACtB;AACA;AACAX,YAAAA,OAAO,GAAGA,OAAO,CAACS,OAAR,CAAgBR,OAAO,CAACH,CAAD,CAAP,CAAWa,CAAX,CAAhB,EAA8B,EAA9B,CAAV,CAHsB,CAItB;AACD;AACF;AACF;;AACC,aAAOX,OAAP;AACH,KAjLoB;;AAAA,UAqLrBY,QArLqB,GAqLV,UAACd,CAAD,EAAGC,CAAH,EAAKC,OAAL,EAAaC,OAAb,EAAyB;AAElC,WAAI,IAAIU,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAsB;AAEpB,YAAGA,CAAC,IAAIb,CAAR,EAAU;AACR,cAAGG,OAAO,CAACU,CAAD,CAAP,CAAWZ,CAAX,KAAiB,GAApB,EAAwB;AACtB;AACAC,YAAAA,OAAO,GAAGA,OAAO,CAACS,OAAR,CAAgBR,OAAO,CAACU,CAAD,CAAP,CAAWZ,CAAX,CAAhB,EAA8B,EAA9B,CAAV,CAFsB,CAGtB;AACD;AACF;AACF;;AACC,aAAOC,OAAP;AACH,KAlMoB;;AAEf,UAAKa,KAAL,GAAa;AACbC,MAAAA,UAAU,EAAE,EADC;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACAb,MAAAA,OAAO,EAAEc,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe;AAACrB,QAAAA,KAAK,EAAC,GAAP;AAAWsB,QAAAA,UAAU,EAAC,EAAtB;AAAyBC,QAAAA,OAAO,EAAC;AAAjC,OAAf,CATI;AAUb;AACA;AACAC,MAAAA,QAAQ,EAAE,IAZG;AAabC,MAAAA,QAAQ,EAAE,KAbG;AAcbC,MAAAA,MAAM,EAAE;AAdK,KAAb;AAFe;AAkBlB,G,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;yCAGqB;AACnB;AACA,UAAIpB,OAAO,GAAG,EAAd;AACA,UAAIqB,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAK,GAAG,CAAZ,CAJmB,CAMnB;AACA;AACA;AACI;AACA;AACA;AACA;AACJ;;AAEE,WAAK,IAAIZ,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACW,KAAf,EAAqBX,CAAC,EAAtB,EAA0B;AACvB;AACA;AACA;AACA;AACA;AACAV,QAAAA,OAAO,CAACU,CAAD,CAAP,GAAaI,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAACrB,UAAAA,KAAK,EAAC,GAAP;AAAWsB,UAAAA,UAAU,EAAC,EAAtB;AAAyBC,UAAAA,OAAO,EAAC;AAAjC,SAAd,CAAb,CANuB,CAOvB;;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBL,OAAO,CAACU,CAAD,CAAP,CAAW,CAAX,EAAchB,KAAnC;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,OAAO,CAACU,CAAD,CAA1B;;AACA,aAAK,IAAIA,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACW,KAAf,EAAqBX,CAAC,EAAtB,EAA0B;AACxBV,UAAAA,OAAO,CAACU,CAAD,CAAP,GAAaI,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAACrB,YAAAA,KAAK,EAAC,GAAP;AAAWsB,YAAAA,UAAU,EAAC,EAAtB;AAAyBC,YAAAA,OAAO,EAAC;AAAjC,WAAd,CAAb;AACD;AACH;;AAEDb,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,UAAMa,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAAX,CAAsBU,KAAtB,EAAnB;;AACA,UAAMC,UAAU,GAAG,mBAAIV,KAAK,CAAC,CAAD,CAAL,CAASW,IAAT,EAAJ,EAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,eAAI,EAAEA,CAAN;AAAA,OAA1B,CAAnB;;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBmB,UAApB;AACA,WAAKI,YAAL,CAAkBJ,UAAlB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,UAAZ,EAnCiB,CAoCjB;AACA;;AACA,WAAI,IAAId,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACc,UAAU,CAACK,MAA1B,EAAkCnB,EAAC,EAAnC,EAAsC;AAClCV,QAAAA,OAAO,CAAC,CAAD,CAAP,CAAWU,EAAX,EAAchB,KAAd,GAAsB8B,UAAU,CAACd,EAAD,CAAhC;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,GAAvB,EAA2BK,EAA3B,EAA6BV,OAAO,CAAC,CAAD,CAAP,CAAWU,EAAX,EAAchB,KAA3C;AACH;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ,EA1CiB,CA2CjB;;AACA,WAAK8B,QAAL,CAAc;AAAC9B,QAAAA,OAAO,EAAEA,OAAV;AAAmBa,QAAAA,UAAU,EAAEA;AAA/B,OAAd,EA5CiB,CA+CrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;;kCAEakB,K,EAAM;AAClB,cAAOA,KAAP;AACI,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ,aAAK,CAAL;AACA,aAAK,CAAL;AACA,aAAK,CAAL;AACI,iBAAO,CAAP;;AACJ;AACI,iBAAO,CAAP;AAdR;AAgBD;;;gCAuDWrB,C,EAAEsB,C,EAAG;AACf,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWZ,OAAX,CAAmBU,CAAnB,EAAsBsB,CAAtB,IAAyB,KAAKpB,KAAL,CAAWZ,OAAX,CAAmBU,CAAnB,EAAsBsB,CAAtB,EAAyBtC,KAAlD,GAAwD,EADjE,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;2CAEsB;AAAA;;AACrB,aACE;AACA,QAAA,KAAK,EAAE;AAACL,UAAAA,eAAe,EAAC,MAAjB;AAAyBC,UAAAA,KAAK,EAAC,OAA/B;AAAwCC,UAAAA,MAAM,EAAC,MAA/C;AAAuDC,UAAAA,KAAK,EAAC;AAA7D,SADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACyC,kBAAL,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AASD;;;iCAEYC,K,EAAO;AAClB,WAAK,IAAIxB,CAAC,GAAGwB,KAAK,CAACL,MAAN,GAAe,CAA5B,EAA+BnB,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,YAAIsB,CAAC,GAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB3B,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,YAAI4B,IAAI,GAAGJ,KAAK,CAACxB,CAAD,CAAhB;AACAwB,QAAAA,KAAK,CAACxB,CAAD,CAAL,GAAWwB,KAAK,CAACF,CAAD,CAAhB;AACAE,QAAAA,KAAK,CAACF,CAAD,CAAL,GAAWM,IAAX;AACH;AACF;;;6BACQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAZF,EAuBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAvBF,EAkCE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAlCF,EA6CE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CA7CF,EAwDE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAxDF,EAmEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAnEF,EA8EE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CA9EF,EAyFE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CADH,EAEG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAFH,EAGG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAHH,EAIG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAJH,EAKG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CALH,EAMG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CANH,EAOG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CAPH,EAQG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CARH,EASG,KAAKA,WAAL,CAAiB,CAAjB,EAAmB,CAAnB,CATH,CAzFF,EAoGE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,oBAAL,EADH,CApGF,CADF;AA0GD;;;;EA7UmBvD,KAAK,CAACC,S;;IAgVpBuD,I;;;;;;;;;;;;;6BACG;AACP,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ;AAMD;;;;EARkBxD,KAAK,CAACC,S;;AAWzB,eAAeuD,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:\"grey\", color:\"white\", height:\"50px\", width:\"50px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >{props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: [],\n      // cellValues: [\"blue\", \"yellow\", \"white\", \"pink\",\n      // \"yellow\",\"red\",\"white\",\"red\",\n      // \"purple\",\"blue\",\"purple\",\"pink\"],\n      //cellObj: {value:\"X\",pencilMark:[],visited:[]},\n      // cellObj['value'] = \"X\";\n      // cellObj['pencilMark'] = [];\n      // cellObj['visited'] = [];\n      squares: Array(81).fill({value:\"X\",pencilMark:[],visited:[]}),\n      //squares: Array(81).fill(\"\"),\n      //squares: [],\n      guessOne: true,\n      guessTwo: false,\n      index1: false,\n      };\n  }\n\n//   onClickHandler(i) {\n//   const squares = this.state.squares.slice();\n//\n//   if(this.state.guessOne){\n//     squares[i] = this.state.cellValues[i];\n//\n//     this.setState({\n//       squares: squares,\n//       guessOne: false,\n//       guessTwo: true,\n//       index1: i,\n//     });\n//   } else if(this.state.guessTwo){\n//       squares[i] = this.state.cellValues[i];\n//\n//       this.setState({\n//         squares: squares,\n//         guessOne: true,\n//         guessTwo: false\n//       },() => {\n//         if (!this.isMatch(this.state.index1,i)){\n//           this.flipCells(this.state.index1,i);\n//         }\n//     });\n//\n//   }\n// }\n\n\nonPlayAgainHandler() {\n  //const squares = Array(81).fill(\"grey\");\n  var squares = [];\n  var nrows = 9;\n  var ncols = 9;\n\n  //var listOfObjects = [];\n  //var a = [\"car\", \"bike\", \"scooter\"];\n  //a.forEach(function(entry) {\n      // var singleObj = {}\n      // singleObj['type'] = 'vehicle';\n      // singleObj['value'] = entry;\n      // listOfObjects.push(singleObj);\n  //});\n\n    for (var i=0;i<nrows;i++) {\n       // var cellObj = {};\n       // cellObj['value'] = \"X\";\n       // cellObj['pencilMark'] = [];\n       // cellObj['visited'] = [];\n       //squares[i] = Array(9).fill(cellObj);\n       squares[i] = Array(9).fill({value:\"X\",pencilMark:[],visited:[]});\n       //squares[i] = Array(9).fill(\"X\");\n       console.log('pppppp',squares[i][0].value);\n       console.log('pppp',squares[i]);\n       for (var i=0;i<nrows;i++) {\n         squares[i] = Array(9).fill({value:\"X\",pencilMark:[],visited:[]});\n       }\n    }\n\n    console.log(squares);\n    const cellValues = this.state.cellValues.slice();\n    const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    console.log('ooooo',rowOneSeed);\n    this.shuffleArray(rowOneSeed);\n    console.log(rowOneSeed);\n    //this.shuffleArray(cellValues);\n    //squares.concat(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i].value = rowOneSeed[i];\n        console.log('uuuuuuuu','0',i,squares[0][i].value);\n    }\n    console.log(squares);\n    //console.log(squares[0][0]);\n    this.setState({squares: squares, cellValues: cellValues});\n\n\n// var iarr=[];\n//     //var numbers = \"0123456789\";\n//\n//     for(let r=1; r<nrows; r++){\n//       for(let c=0; c<ncols; c++){\n//         var numbers = \"123456789\";\n//         console.log(numbers);\n//         console.log(r,c);\n//         numbers = this.checkCell(r,c,numbers,squares);\n//         numbers = this.checkRow(r,c,numbers,squares);\n//         //console.log(numbers);\n//         numbers = this.checkCol(r,c,numbers,squares);\n//         console.log('o',numbers);\n//         var randIndex = Math.floor(Math.random() * (numbers.length-1));\n//         console.log(randIndex);\n//         iarr.push(randIndex);\n//         var val = numbers[randIndex];\n//         console.log(val);\n//         if(randIndex != -1){\n//           squares[r][c] = val;\n//         } else {squares[r][c] = 'X';}\n//\n//       }\n//     }\n//     console.log('iarr',iarr);\n//     this.setState({squares: squares, cellValues: cellValues});\n}\n\ngetStartIndex(index){\n  switch(index) {\n      case 0:\n      case 1:\n      case 2:\n          return 0;\n      case 3:\n      case 4:\n      case 5:\n          return 3;\n      case 6:\n      case 7:\n      case 8:\n          return 6;\n      default:\n          return 0;\n  }\n}\n\n\n\ncheckCell = (r,c,numbers,squares) => {\n\n  var rowStart = this.getStartIndex(r);\n  var colStart = this.getStartIndex(c);\nconsole.log(rowStart,colStart);\n  for(let row=rowStart; row<=rowStart+2; row++){\n    for(let col=colStart; col<=colStart+2; col++){\n      if(!(row == r && col == c)){\n        if(squares[row][col] != \"X\"){\n          numbers = numbers.replace(squares[row][col],'');\n          ////console.log('rrrr',numbers);\n        }\n      }\n    }\n  }\n  return numbers;\n}\n\ncheckRow = (r,c,numbers,squares) => {\n//console.log(\"HII\");\n  for(let i=0; i<9; i++){\n\n    if(i != c){\n      if(squares[r][i] != \"X\"){\n        //console.log(\"HII0\");\n        //console.log(squares[r][i]);\n        numbers = numbers.replace(squares[r][i],'');\n        //console.log('r',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\n\n\ncheckCol = (r,c,numbers,squares) => {\n\n  for(let i=0; i<9; i++){\n\n    if(i != r){\n      if(squares[i][c] != \"X\"){\n        //console.log(squares[i][c]);\n        numbers = numbers.replace(squares[i][c],'');\n        //console.log('rr',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\ndisplayCell(i,j) {\n  return (\n    <Square\n      value={this.state.squares[i][j]?this.state.squares[i][j].value:\"\"}\n      //onClick={() => this.onClickHandler(i)}\n    />\n  );\n}\n\ndisplayPlayAgainCell() {\n  return (\n    <button\n    style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onPlayAgainHandler()}\n    >\n      Play Again\n    </button>\n  );\n}\n\nshuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCell(0,0)}\n        {this.displayCell(0,1)}\n        {this.displayCell(0,2)}\n        {this.displayCell(0,3)}\n        {this.displayCell(0,4)}\n        {this.displayCell(0,5)}\n        {this.displayCell(0,6)}\n        {this.displayCell(0,7)}\n        {this.displayCell(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(1,0)}\n        {this.displayCell(1,1)}\n        {this.displayCell(1,2)}\n        {this.displayCell(1,3)}\n        {this.displayCell(1,4)}\n        {this.displayCell(1,5)}\n        {this.displayCell(1,6)}\n        {this.displayCell(1,7)}\n        {this.displayCell(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(2,0)}\n        {this.displayCell(2,1)}\n        {this.displayCell(2,2)}\n        {this.displayCell(2,3)}\n        {this.displayCell(2,4)}\n        {this.displayCell(2,5)}\n        {this.displayCell(2,6)}\n        {this.displayCell(2,7)}\n        {this.displayCell(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(3,0)}\n        {this.displayCell(3,1)}\n        {this.displayCell(3,2)}\n        {this.displayCell(3,3)}\n        {this.displayCell(3,4)}\n        {this.displayCell(3,5)}\n        {this.displayCell(3,6)}\n        {this.displayCell(3,7)}\n        {this.displayCell(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(4,0)}\n        {this.displayCell(4,1)}\n        {this.displayCell(4,2)}\n        {this.displayCell(4,3)}\n        {this.displayCell(4,4)}\n        {this.displayCell(4,5)}\n        {this.displayCell(4,6)}\n        {this.displayCell(4,7)}\n        {this.displayCell(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(5,0)}\n        {this.displayCell(5,1)}\n        {this.displayCell(5,2)}\n        {this.displayCell(5,3)}\n        {this.displayCell(5,4)}\n        {this.displayCell(5,5)}\n        {this.displayCell(5,6)}\n        {this.displayCell(5,7)}\n        {this.displayCell(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(6,0)}\n        {this.displayCell(6,1)}\n        {this.displayCell(6,2)}\n        {this.displayCell(6,3)}\n        {this.displayCell(6,4)}\n        {this.displayCell(6,5)}\n        {this.displayCell(6,6)}\n        {this.displayCell(6,7)}\n        {this.displayCell(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(7,0)}\n        {this.displayCell(7,1)}\n        {this.displayCell(7,2)}\n        {this.displayCell(7,3)}\n        {this.displayCell(7,4)}\n        {this.displayCell(7,5)}\n        {this.displayCell(7,6)}\n        {this.displayCell(7,7)}\n        {this.displayCell(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(8,0)}\n        {this.displayCell(8,1)}\n        {this.displayCell(8,2)}\n        {this.displayCell(8,3)}\n        {this.displayCell(8,4)}\n        {this.displayCell(8,5)}\n        {this.displayCell(8,6)}\n        {this.displayCell(8,7)}\n        {this.displayCell(8,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass Game extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Memory Game </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}