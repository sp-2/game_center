{"ast":null,"code":"import _slicedToArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction Square2(props) {\n  var _this = this;\n\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    type: \"text\",\n    placeholder: \"\",\n    readOnly: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false //style={{fontWeight: 'bold'}}\n    ,\n    style: ((this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n      fontWeight: 'bold'\n    } : {\n      fontWeight: 'normal'\n    }, this.state.cellCheck[i][j] ? {\n      color: \"red\"\n    } : {\n      color: \"black\"\n    }),\n    key: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n    defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n    onChange: function onChange(event) {\n      return _this.valChangeHandler(i, j, event);\n    },\n    onClick: function onClick() {\n      var cellCheck = Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      });\n\n      _this.setState({\n        cellCheck: cellCheck\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this2;\n\n    _classCallCheck(this, Board);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this2.valChangeHandler = function (i, j, event) {\n      //event.preventDefault();\n      var board = _this2.state.board.slice();\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n        console.log(board[i][j].value, i, j); //this.setState({board: board});\n\n        _this2.setState({\n          board: board\n        }, function () {\n          console.log('in val b', this.state.board);\n          console.log('in val pu', this.state.puzzle);\n        });\n      }\n    };\n\n    _this2.state = {\n      squares: Array(6).fill(''),\n      solution: Array(6).fill(''),\n      puzzle: Array(6).fill(''),\n      //board: Array(6).fill(null),\n      board: Array(2).fill({\n        value: '',\n        given: false\n      }),\n      cellCheck: Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      }),\n      saved_board: Array(2).fill({\n        value: '',\n        given: false\n      }),\n      xIsNext: true,\n      readOnlyVal: false,\n      buttonText: \"See Solution\"\n    };\n    _this2.valChangeHandler = _this2.valChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var squares = this.state.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i) {\n      var _this3 = this;\n\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // var solution = this.state.solution;\n      // var puzzle = this.state.puzzle;\n      // var board = puzzle;\n      var solution = [[{\n        value: 1,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 2,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 9,\n        pencilMark: [],\n        visited: []\n      }], [{\n        value: 4,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 5,\n        pencilMark: [],\n        visited: []\n      }, {\n        value: 6,\n        pencilMark: [],\n        visited: []\n      }]];\n      var puzzle = [[{\n        value: 1,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }, {\n        value: undefined,\n        given: false\n      }], [{\n        value: undefined,\n        given: false\n      }, {\n        value: 5,\n        given: true\n      }, {\n        value: undefined,\n        given: false\n      }]]; //const board = puzzle.slice();\n\n      var board = this.deepCopy(puzzle);\n\n      if (board === puzzle) {\n        console.log('equal');\n      } else {\n        console.log('not equal');\n      } //  this.setState({solution: solution, puzzle: puzzle, board: board});\n\n\n      this.setState({\n        solution: solution,\n        puzzle: puzzle,\n        board: board\n      }, function () {\n        console.log('in mount bo', this.state.board);\n        console.log('in mount pu', this.state.puzzle);\n        console.log('in mount sol', this.state.solution);\n      });\n    }\n  }, {\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      // var board = [[{value:1,given:true},{value:null,given:false},{value:undefined,given:false}],\n      // [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n      var board = this.deepCopy(this.state.puzzle);\n      var saved_board = this.deepCopy(this.state.puzzle);\n      var buttonText = \"See Solution\";\n      var cellCheck = Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      });\n      console.log('in onPlayAgainHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onPlayAgainHandler fter b', this.state.board);\n      });\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      console.log('in onSeeSolutionsHandler before');\n      var buttonText = this.state.buttonText;\n      var cellCheck = Array(2).fill(false).map(function () {\n        return new Array(3).fill(false);\n      });\n      var saved_board;\n      var board;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_board = this.deepCopy(this.state.board);\n        board = this.deepCopy(this.state.solution);\n      } else {\n        buttonText = \"See Solution\";\n        board = this.deepCopy(this.state.saved_board);\n      }\n\n      console.log('in onSeeSolutionsHandler before b', board);\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onSeeSolutionsHandler fter b', this.state.board);\n        console.log('in onSeeSolutionsHandler fter sb', this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onCellCheckHandler\",\n    value: function onCellCheckHandler() {\n      console.log('in onCellCheckHandler before');\n      var board = this.deepCopy(this.state.board);\n      var solution = this.deepCopy(this.state.solution);\n      var cellCheck = this.state.cellCheck.slice();\n      var saved_board;\n      var board;\n\n      for (var i = 0; i < board.length; i++) {\n        for (var j = 0; j < board[0].length; j++) {\n          if (board[i][j].value != undefined) {\n            if (board[i][j].value != solution[i][j].value) {\n              console.log(i, j, \"err\");\n              cellCheck[i][j] = true;\n            }\n          }\n        }\n      } // if(buttonText == \"See Solution\"){\n      //   buttonText  = \"Back To Puzzle\";\n      //   saved_board = this.deepCopy(this.state.board);\n      //   board       = this.deepCopy(this.state.solution);\n      // } else {\n      //   buttonText  = \"See Solution\";\n      //   board       = this.deepCopy(this.state.saved_board);\n      // }\n      //\n      //\n      // console.log('in onCellCheckHandler before b',board);\n      //\n\n\n      this.setState({\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onCellCheckHandler fter b', cellCheck);\n      });\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this4 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            // null => null\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                // It's an array, create a new array with\n                // deep copies of the entries\n                console.log(\"i hee\", obj);\n                rv = obj.map(function (o) {\n                  return _this4.deepCopy(o);\n                });\n                console.log(\"i hee\", rv);\n                break;\n\n              default:\n                console.log(\"i heer 2\", obj);\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  console.log(\"i heer 2 pk\", prev, key, obj[key]);\n                  prev[key] = _this4.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          // It's a primitive, copy via assignment\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"onStopHandler\",\n    value: function onStopHandler(i) {\n      //const squares = this.state.squares.slice();\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: \"X\",\n            pencilMark: [],\n            visited: []\n          };\n        }\n      }\n\n      this.setState({\n        squares: squares\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this5 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this6 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this6.onSeeSolutionsHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" \", this.state.buttonText);\n    }\n  }, {\n    key: \"displayCellCheck\",\n    value: function displayCellCheck() {\n      var _this7 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this7.onCellCheckHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"How am I doing?\");\n    }\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this8 = this;\n\n      return (// <Square2\n        //   value={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        //\n        //   //readOnlyVal={this.state.readOnlyVal}\n        //   // readOnlyVal={this.state.board[i][j].given}\n        //\n        //   onChangeHandler={(event) => this.valChangeHandler(i,j)}\n        //   //onChange={this.valChangeHandler(i,j)}\n        // />\n        React.createElement(\"input\", {\n          size: \"2\",\n          maxLength: \"1\",\n          type: \"text\",\n          placeholder: \"\",\n          readOnly: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false //style={{fontWeight: 'bold'}}\n          ,\n          style: ((this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false) ? {\n            fontWeight: 'bold'\n          } : {\n            fontWeight: 'normal'\n          }, this.state.cellCheck[i][j] ? {\n            color: \"red\"\n          } : {\n            color: \"black\"\n          }),\n          key: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n          defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n          onChange: function onChange(event) {\n            return _this8.valChangeHandler(i, j, event);\n          },\n          onClick: function onClick() {\n            var cellCheck = Array(2).fill(false).map(function () {\n              return new Array(3).fill(false);\n            });\n\n            _this8.setState({\n              cellCheck: cellCheck\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        })\n      );\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var winner = calculateWinner(this.state.squares);\n      var status;\n\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, status), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, this.displayCellCheck()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar TTT =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TTT, _React$Component2);\n\n  function TTT() {\n    _classCallCheck(this, TTT);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TTT).apply(this, arguments));\n  }\n\n  _createClass(TTT, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return TTT;\n}(React.Component); // ========================================\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var _i = 0; _i < lines.length; _i++) {\n    var _lines$_i = _slicedToArray(lines[_i], 3),\n        a = _lines$_i[0],\n        b = _lines$_i[1],\n        c = _lines$_i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default TTT;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/TTT.js"],"names":["React","Component","Square","props","onClick","value","Square2","state","puzzle","i","j","given","fontWeight","cellCheck","color","board","undefined","event","valChangeHandler","Array","fill","map","setState","Board","slice","target","Number","console","log","squares","solution","saved_board","xIsNext","readOnlyVal","buttonText","bind","calculateWinner","handleClick","pencilMark","visited","deepCopy","length","obj","rv","toString","call","o","Object","keys","reduce","prev","key","nrows","ncols","backgroundColor","height","width","onPlayAgainHandler","onSeeSolutionsHandler","onCellCheckHandler","winner","status","displayCellForm","displayPlayAgainCell","displaySeeSolutionsCell","displayCellCheck","TTT","lines","a","b","c"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction Square(props) {\n    return (\n      <button\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function Square2(props) {\n      return (\n\n        <input size=\"2\" maxLength=\"1\"\n          type=\"text\"\n          placeholder=\"\"\n          readOnly={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n          //style={{fontWeight: 'bold'}}\n          style={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n          key={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n          defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n          onChange={(event) => this.valChangeHandler(i,j,event)}\n          onClick={ () => {const cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n            this.setState({cellCheck: cellCheck})  }}\n        />\n\n      );\n    }\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        squares: Array(6).fill(''),\n        solution: Array(6).fill(''),\n        puzzle: Array(6).fill(''),\n        //board: Array(6).fill(null),\n        board: Array(2).fill({value:'',given:false}),\n        cellCheck: Array(2).fill(false).map(() => new Array(3).fill(false)),\n        saved_board:Array(2).fill({value:'',given:false}),\n        xIsNext: true,\n        readOnlyVal:false,\n        buttonText:\"See Solution\"\n        };\n        this.valChangeHandler = this.valChangeHandler.bind(this);\n\n    }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  displayCell(i) {\n    return (\n      <Square\n        value={this.state.squares[i]}\n        onClick={() => this.handleClick(i)}\n      />\n    );\n  }\n\n  componentDidMount(){\n    // var solution = this.state.solution;\n    // var puzzle = this.state.puzzle;\n    // var board = puzzle;\n    var solution = [[{value:1,pencilMark:[],visited:[]},{value:2,pencilMark:[],visited:[]},\n    {value:9,pencilMark:[],visited:[]}],[{value:4,pencilMark:[],visited:[]},{value:5,pencilMark:[],visited:[]},\n    {value:6,pencilMark:[],visited:[]}]];\n    var puzzle = [[{value:1,given:true},{value:undefined,given:false},{value:undefined,given:false}],\n    [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n\n    //const board = puzzle.slice();\n    const board = this.deepCopy(puzzle);\n\nif(board ===  puzzle){console.log('equal')}else{console.log('not equal')}\n\n\n\n  //  this.setState({solution: solution, puzzle: puzzle, board: board});\n    this.setState({solution: solution, puzzle: puzzle, board: board}, function () {\n      console.log('in mount bo',this.state.board);\n      console.log('in mount pu',this.state.puzzle);\n      console.log('in mount sol',this.state.solution);\n    });\n  }\n\n  onPlayAgainHandler(){\n    // var board = [[{value:1,given:true},{value:null,given:false},{value:undefined,given:false}],\n    // [{value:undefined,given:false},{value:5,given:true},{value:undefined,given:false}]];\n    var board = this.deepCopy(this.state.puzzle);\n    var saved_board = this.deepCopy(this.state.puzzle);\n    var buttonText  = \"See Solution\";\n    var cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n    console.log('in onPlayAgainHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onPlayAgainHandler fter b',this.state.board);\n    });\n  }\n  onSeeSolutionsHandler(){\n\n    console.log('in onSeeSolutionsHandler before');\n    var buttonText = this.state.buttonText;\n    var cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n    var saved_board;\n    var board;\n\n    if(buttonText == \"See Solution\"){\n      buttonText  = \"Back To Puzzle\";\n      saved_board = this.deepCopy(this.state.board);\n      board       = this.deepCopy(this.state.solution);\n    } else {\n      buttonText  = \"See Solution\";\n      board       = this.deepCopy(this.state.saved_board);\n    }\n\n\n    console.log('in onSeeSolutionsHandler before b',board);\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onSeeSolutionsHandler fter b',this.state.board);\n      console.log('in onSeeSolutionsHandler fter sb',this.state.saved_board);\n    });\n  }\n\n  onCellCheckHandler(){\n\n    console.log('in onCellCheckHandler before');\n    var board      = this.deepCopy(this.state.board);\n    var solution   = this.deepCopy(this.state.solution);\n    var cellCheck  = this.state.cellCheck.slice();\n    var saved_board;\n    var board;\n\n    for (var i=0;i<board.length;i++) {\n       for (var j=0;j<board[0].length;j++) {\n         if(board[i][j].value != undefined){\n           if(board[i][j].value != solution[i][j].value){\n             console.log(i,j,\"err\");\n             cellCheck[i][j]=true;\n           }\n       }\n    }\n  }\n    // if(buttonText == \"See Solution\"){\n    //   buttonText  = \"Back To Puzzle\";\n    //   saved_board = this.deepCopy(this.state.board);\n    //   board       = this.deepCopy(this.state.solution);\n    // } else {\n    //   buttonText  = \"See Solution\";\n    //   board       = this.deepCopy(this.state.saved_board);\n    // }\n    //\n    //\n    // console.log('in onCellCheckHandler before b',board);\n    //\n    this.setState({cellCheck: cellCheck}, function () {\n      console.log('in onCellCheckHandler fter b',cellCheck);\n    });\n  }\n\n  deepCopy(obj) {\n      var rv;\n\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  // null => null\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          // It's an array, create a new array with\n                          // deep copies of the entries\n                          console.log(\"i hee\",obj)\n                          rv = obj.map(o => this.deepCopy(o));\n                            console.log(\"i hee\",rv)\n                          break;\n                      default:\n                      console.log(\"i heer 2\",obj)\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                            console.log(\"i heer 2 pk\",prev,key,obj[key])\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              // It's a primitive, copy via assignment\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  onStopHandler(i) {\n    //const squares = this.state.squares.slice();\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:\"X\",pencilMark:[],visited:[]};\n       }\n    }\n\n    this.setState({squares: squares});\n  }\n\n  valChangeHandler = (i,j,event) => {\n    //event.preventDefault();\n    const board = this.state.board.slice();\n\nif(event.target.value){\n    board[i][j].value = Number(event.target.value);\n\nconsole.log(board[i][j].value,i,j);\n    //this.setState({board: board});\n    this.setState({board: board}, function () {\n      console.log('in val b',this.state.board);\n      console.log('in val pu',this.state.puzzle);\n    });\n    }\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n      >\n        Play Again\n      </button>\n    );\n  }\n\n\n\n  displaySeeSolutionsCell() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n      > {this.state.buttonText}\n\n      </button>\n    );\n  }\n\n  displayCellCheck() {\n    return (\n      <button\n      style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n        className=\"square\"\n        onClick={() => this.onCellCheckHandler()}\n      >\n        How am I doing?\n      </button>\n    );\n  }\n\n  displayCellForm(i,j) {\n    return (\n      // <Square2\n      //   value={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n      //\n      //   //readOnlyVal={this.state.readOnlyVal}\n      //   // readOnlyVal={this.state.board[i][j].given}\n      //\n      //   onChangeHandler={(event) => this.valChangeHandler(i,j)}\n      //   //onChange={this.valChangeHandler(i,j)}\n      // />\n      <input size=\"2\" maxLength=\"1\"\n        type=\"text\"\n        placeholder=\"\"\n        readOnly={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        //style={{fontWeight: 'bold'}}\n        style={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n        key={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n        onClick={ () => {const cellCheck =  Array(2).fill(false).map(() => new Array(3).fill(false));\n          this.setState({cellCheck: cellCheck})  }}\n      />\n\n    );\n  }\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n\n        <form  >\n        <div className=\"board-row\">\n          {this.displayCellForm(0,0)}\n          {this.displayCellForm(0,1)}\n          {this.displayCellForm(0,2)}\n\n        </div>\n        <div className=\"board-row\">\n          {this.displayCellForm(1,0)}\n          {this.displayCellForm(1,1)}\n          {this.displayCellForm(1,2)}\n        </div>\n        </form>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayCellForm(0,0)}\n          {this.displayCellForm(0,1)}\n          {this.displayCellForm(0,2)}\n        </div>\n        <div className=\"board-row\">\n          {this.displayCellForm(1,0)}\n          {this.displayCellForm(1,1)}\n          {this.displayCellForm(1,2)}\n        </div>\n        <div className=\"board-row\">\n          {this.displayPlayAgainCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displaySeeSolutionsCell()}\n        </div>\n        <br></br>\n        <div className=\"board-row\">\n          {this.displayCellCheck()}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TTT extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\n// render(\n//   <TTT />,\n//   document.getElementById('app')\n// );\n\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\nexport default TTT;\n"]},"metadata":{},"sourceType":"module"}