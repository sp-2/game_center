{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleGenerator.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction SquareB(props) {\n  return React.createElement(\"button\", {\n    style: props.style,\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nfunction SquareF(props) {\n  return React.createElement(\"input\", {\n    size: \"2\",\n    maxLength: \"1\",\n    readOnly: props.readOnlyVal,\n    type: \"text\",\n    placeholder: \"\",\n    style: props.styleSettings,\n    key: props.keyValue,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var row = rowStart; row <= rowStart + 2; row++) {\n        for (var col = colStart; col <= colStart + 2; col++) {\n          if (!(row == r && col == c)) {\n            if (squares[row][col].value != undefined) {\n              if (numbers.indexOf(squares[row][col].value) != -1) {\n                numbers.splice(numbers.indexOf(squares[row][col].value), 1);\n              }\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != c) {\n          if (squares[r][i].value != undefined) {\n            if (numbers.indexOf(squares[r][i].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[r][i].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var i = 0; i < 9; i++) {\n        if (i != r) {\n          if (squares[i][c].value != undefined) {\n            if (numbers.indexOf(squares[i][c].value) != -1) {\n              numbers.splice(numbers.indexOf(squares[i][c].value), 1);\n            }\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.valChangeHandler = function (i, j, event) {\n      var board = _this.deepCopy(_this.state.board);\n\n      if (event.target.value) {\n        board[i][j].value = Number(event.target.value);\n      } else {\n        board[i][j].value = undefined;\n      }\n\n      _this.setState({\n        board: board\n      }, function () {//console.log('in val b',this.state.board);\n      });\n    };\n\n    _this.state = {\n      solution: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          pencilMark: [],\n          visited: []\n        });\n      }),\n      puzzle: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      saved_board: Array(9).fill().map(function () {\n        return new Array(9).fill({\n          value: undefined,\n          given: false\n        });\n      }),\n      cellCheck: Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      }),\n      buttonText: \"See Solution\",\n      playButtonText: \"Play\"\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      var solution = this.getSolution();\n      var puzzle = this.getUniquePuzzle(solution);\n      var playButtonText = \"Play Again\";\n      var board = this.deepCopy(puzzle);\n      var buttonText = \"See Solution\";\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      });\n      this.setState({\n        puzzle: puzzle,\n        board: board,\n        solution: solution,\n        playButtonText: playButtonText,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onPlayAgainHandler b', this.state.board);\n        console.log('in onPlayAgainHandler pu', this.state.puzzle);\n      });\n    }\n  }, {\n    key: \"getSolution\",\n    value: function getSolution() {\n      //checked ok\n      var nrows = 9;\n      var ncols = 9;\n      var squares = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = new Array(ncols);\n      }\n\n      for (var i = 1; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          squares[i][j] = {\n            value: undefined,\n            pencilMark: []\n          };\n        }\n      }\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()).map(function (x) {\n        return ++x;\n      });\n\n      this.shuffleArray(rowOneSeed);\n\n      for (var _i = 0; _i < rowOneSeed.length; _i++) {\n        squares[0][_i] = {\n          value: rowOneSeed[_i],\n          pencilMark: []\n        };\n      }\n\n      var numbers = [];\n\n      for (var r = 1; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          numbers = this.validPencilMarks(r, c, squares);\n\n          if (numbers.length != 0) {\n            var randIndex = Math.floor(Math.random() * (numbers.length - 1));\n            var val = numbers[randIndex];\n            squares[r][c].value = val;\n            numbers.splice(randIndex, 1);\n\n            for (var rn = 0; rn < numbers.length; rn++) {\n              squares[r][c].pencilMark.push(numbers[rn]);\n            }\n          } else {\n            while (r != 0) {\n              c--;\n\n              if (c < 0) {\n                r--;\n                c = ncols - 1;\n              }\n\n              if (r <= 0) {\n                break;\n              }\n\n              if (squares[r][c].pencilMark.length != 0) {\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                break;\n              } else {\n                squares[r][c].value = undefined;\n              }\n            }\n          }\n        }\n      }\n\n      return squares;\n    }\n  }, {\n    key: \"getUniquePuzzle\",\n    value: function getUniquePuzzle(solvedPuzzle) {\n      var nrows = 9;\n      var ncols = 9;\n      var location;\n      var puzzle = new Array(nrows);\n\n      for (var i = 0; i < nrows; i++) {\n        puzzle[i] = new Array(ncols);\n      }\n\n      for (var i = 0; i < nrows; i++) {\n        for (var j = 0; j < nrows; j++) {\n          puzzle[i][j] = {\n            value: solvedPuzzle[i][j].value,\n            given: true\n          };\n        }\n      }\n\n      var locationArray = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8], [1, 0], [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8], [2, 0], [2, 1], [2, 2], [2, 3], [2, 4], [2, 5], [2, 6], [2, 7], [2, 8], [3, 0], [3, 1], [3, 2], [3, 3], [3, 4], [3, 5], [3, 6], [3, 7], [3, 8], [4, 0], [4, 1], [4, 2], [4, 3], [4, 4], [4, 5], [4, 6], [4, 7], [4, 8], [5, 0], [5, 1], [5, 2], [5, 3], [5, 4], [5, 5], [5, 6], [5, 7], [5, 8], [6, 0], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [7, 0], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [8, 0], [8, 1], [8, 2], [8, 3], [8, 4], [8, 5], [8, 6], [8, 7], [8, 8]];\n      this.shuffleArray(locationArray);\n      location = locationArray.pop();\n      var cntr = 0;\n\n      while (locationArray.length != 0) {\n        cntr++;\n        puzzle[location[0]][location[1]].value = undefined;\n        puzzle[location[0]][location[1]].given = false;\n\n        if (this.uniqueSolve(puzzle) == false) {\n          puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n          puzzle[location[0]][location[1]].given = true;\n        }\n\n        if (cntr == 54) {\n          break;\n        }\n\n        location = locationArray.pop();\n      }\n\n      return puzzle;\n    }\n  }, {\n    key: \"uniqueSolve\",\n    value: function uniqueSolve(puzzle) {\n      var solutions = [];\n      this.solveSudoku(0, 0, solutions, puzzle);\n      var numSolutions = solutions.length; //console.log(numSolutions);\n\n      if (numSolutions == 0 || numSolutions > 1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"solveSudoku\",\n    value: function solveSudoku(row, col, solutions, board) {\n      if (row >= 9) {\n        //solutions.push(this.deepCopy(board));\n        solutions.push(1);\n        return;\n      }\n\n      while (board[row][col].given == true) {\n        col = col + 1;\n        row = col <= 8 ? row : row + 1;\n        col = col <= 8 ? col : 0;\n\n        if (row == 9) {\n          //solutions.push(this.deepCopy(board));\n          solutions.push(1);\n          return;\n        }\n      }\n\n      var pencilMarks = this.validPencilMarks(row, col, board);\n      var c = col + 1;\n      var r = c <= 8 ? row : row + 1;\n      c = c <= 8 ? c : 0;\n\n      for (var i = 0; i < pencilMarks.length && solutions.length <= 1; i++) {\n        board[row][col].value = pencilMarks[i];\n        board[row][col].given = true;\n        this.solveSudoku(r, c, solutions, board);\n      }\n\n      board[row][col].value = undefined;\n      board[row][col].given = false;\n      return;\n    }\n  }, {\n    key: \"validPencilMarks\",\n    value: function validPencilMarks(row, col, board) {\n      var pM = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      pM = this.checkCell(row, col, pM, board);\n      pM = this.checkRow(row, col, pM, board);\n      pM = this.checkCol(row, col, pM, board);\n      return pM;\n    }\n  }, {\n    key: \"deepCopy\",\n    value: function deepCopy(obj) {\n      var _this2 = this;\n\n      var rv;\n\n      switch (typeof obj) {\n        case \"object\":\n          if (obj === null) {\n            rv = null;\n          } else {\n            switch (toString.call(obj)) {\n              case \"[object Array]\":\n                rv = obj.map(function (o) {\n                  return _this2.deepCopy(o);\n                });\n                break;\n\n              default:\n                rv = Object.keys(obj).reduce(function (prev, key) {\n                  prev[key] = _this2.deepCopy(obj[key]);\n                  return prev;\n                }, {});\n                break;\n            }\n          }\n\n          break;\n\n        default:\n          rv = obj;\n          break;\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case 0:\n        case 1:\n        case 2:\n          return 0;\n\n        case 3:\n        case 4:\n        case 5:\n          return 3;\n\n        case 6:\n        case 7:\n        case 8:\n          return 6;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"onSeeSolutionsHandler\",\n    value: function onSeeSolutionsHandler() {\n      var buttonText = this.state.buttonText;\n      var cellCheck = Array(9).fill(false).map(function () {\n        return new Array(9).fill(false);\n      });\n      var saved_board;\n      var board;\n\n      if (buttonText == \"See Solution\") {\n        buttonText = \"Back To Puzzle\";\n        saved_board = this.deepCopy(this.state.board);\n        board = this.deepCopy(this.state.solution);\n      } else {\n        buttonText = \"See Solution\";\n        board = this.deepCopy(this.state.saved_board);\n      }\n\n      this.setState({\n        board: board,\n        saved_board: saved_board,\n        buttonText: buttonText,\n        cellCheck: cellCheck\n      }, function () {\n        console.log('in onSeeSolutionsHandler b', this.state.board);\n        console.log('in onSeeSolutionsHandler s', this.state.solution); // console.log('in onSeeSolutionsHandler sb',this.state.saved_board);\n      });\n    }\n  }, {\n    key: \"onCellCheckHandler\",\n    value: function onCellCheckHandler() {\n      var board = this.deepCopy(this.state.board);\n      var solution = this.deepCopy(this.state.solution);\n      var cellCheck = this.state.cellCheck.slice();\n      var saved_board;\n      var board;\n\n      for (var i = 0; i < board.length; i++) {\n        for (var j = 0; j < board[0].length; j++) {\n          if (board[i][j].value != undefined) {\n            if (board[i][j].value != solution[i][j].value) {\n              cellCheck[i][j] = true;\n            }\n          }\n        }\n      }\n\n      this.setState({\n        cellCheck: cellCheck\n      }, function () {// console.log('in onCellCheckHandler b',cellCheck);\n      });\n    }\n  }, {\n    key: \"displayCellCheck\",\n    value: function displayCellCheck() {\n      var _this3 = this;\n\n      return React.createElement(SquareB //style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n      , {\n        style: ({\n          backgroundColor: \"blue\"\n        }, {\n          color: \"red\"\n        }),\n        className: \"square\",\n        onClick: function onClick() {\n          return _this3.onCellCheckHandler();\n        },\n        value: \"How am I doing?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      });\n    } //<div style={{ visibility: this.state.driverDetails.firstName != undefined? 'visible': 'hidden'}}></div>\n\n  }, {\n    key: \"displayCellForm\",\n    value: function displayCellForm(i, j) {\n      var _this4 = this;\n\n      return React.createElement(SquareF, {\n        readOnlyVal: this.state.puzzle[i][j] ? this.state.puzzle[i][j].given : false,\n        styleSettings: {\n          color: this.state.cellCheck[i][j] ? \"red\" : \"black\",\n          fontWeight: this.state.puzzle[i][j].given ? 'bold' : 'bold'\n        } //styleSettings={ fontWeight: (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? 'bold' : 'normal',this.state.cellCheck[i][j]?color:red\" :\"black\"}}\n        //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n        //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        ,\n        keyValue: this.state.board[i][j] ? this.state.board[i][j].value + '[' + i + ']' + '[' + j + ']' : undefined,\n        defaultValue: this.state.board[i][j] ? this.state.board[i][j].value : \"\",\n        onChange: function onChange(event) {\n          return _this4.valChangeHandler(i, j, event);\n        },\n        onClick: function onClick() {\n          var cellCheck = Array(9).fill(false).map(function () {\n            return new Array(9).fill(false);\n          });\n\n          _this4.setState({\n            cellCheck: cellCheck\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this5 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"140px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this5.onPlayAgainHandler();\n        },\n        value: this.state.playButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displaySeeSolutionsCell\",\n    value: function displaySeeSolutionsCell() {\n      var _this6 = this;\n\n      return React.createElement(SquareB, {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"140px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this6.onSeeSolutionsHandler();\n        },\n        value: this.state.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, this.displayCellForm(0, 0), this.displayCellForm(0, 1), this.displayCellForm(0, 2), this.displayCellForm(0, 3), this.displayCellForm(0, 4), this.displayCellForm(0, 5), this.displayCellForm(0, 6), this.displayCellForm(0, 7), this.displayCellForm(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, this.displayCellForm(1, 0), this.displayCellForm(1, 1), this.displayCellForm(1, 2), this.displayCellForm(1, 3), this.displayCellForm(1, 4), this.displayCellForm(1, 5), this.displayCellForm(1, 6), this.displayCellForm(1, 7), this.displayCellForm(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, this.displayCellForm(2, 0), this.displayCellForm(2, 1), this.displayCellForm(2, 2), this.displayCellForm(2, 3), this.displayCellForm(2, 4), this.displayCellForm(2, 5), this.displayCellForm(2, 6), this.displayCellForm(2, 7), this.displayCellForm(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, this.displayCellForm(3, 0), this.displayCellForm(3, 1), this.displayCellForm(3, 2), this.displayCellForm(3, 3), this.displayCellForm(3, 4), this.displayCellForm(3, 5), this.displayCellForm(3, 6), this.displayCellForm(3, 7), this.displayCellForm(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, this.displayCellForm(4, 0), this.displayCellForm(4, 1), this.displayCellForm(4, 2), this.displayCellForm(4, 3), this.displayCellForm(4, 4), this.displayCellForm(4, 5), this.displayCellForm(4, 6), this.displayCellForm(4, 7), this.displayCellForm(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478\n        },\n        __self: this\n      }, this.displayCellForm(5, 0), this.displayCellForm(5, 1), this.displayCellForm(5, 2), this.displayCellForm(5, 3), this.displayCellForm(5, 4), this.displayCellForm(5, 5), this.displayCellForm(5, 6), this.displayCellForm(5, 7), this.displayCellForm(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, this.displayCellForm(6, 0), this.displayCellForm(6, 1), this.displayCellForm(6, 2), this.displayCellForm(6, 3), this.displayCellForm(6, 4), this.displayCellForm(6, 5), this.displayCellForm(6, 6), this.displayCellForm(6, 7), this.displayCellForm(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, this.displayCellForm(7, 0), this.displayCellForm(7, 1), this.displayCellForm(7, 2), this.displayCellForm(7, 3), this.displayCellForm(7, 4), this.displayCellForm(7, 5), this.displayCellForm(7, 6), this.displayCellForm(7, 7), this.displayCellForm(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, this.displayCellForm(8, 0), this.displayCellForm(8, 1), this.displayCellForm(8, 2), this.displayCellForm(8, 3), this.displayCellForm(8, 4), this.displayCellForm(8, 5), this.displayCellForm(8, 6), this.displayCellForm(8, 7), this.displayCellForm(8, 8)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, this.displayPlayAgainCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, this.displaySeeSolutionsCell()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, this.displayCellCheck()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar SudokuPuzzleGenerator =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(SudokuPuzzleGenerator, _React$Component2);\n\n  function SudokuPuzzleGenerator() {\n    _classCallCheck(this, SudokuPuzzleGenerator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SudokuPuzzleGenerator).apply(this, arguments));\n  }\n\n  _createClass(SudokuPuzzleGenerator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        },\n        __self: this\n      }, \" Sudoku \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SudokuPuzzleGenerator;\n}(React.Component);\n\nexport default SudokuPuzzleGenerator;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/SudokuPuzzleGenerator.js"],"names":["React","Component","SquareB","props","style","onClick","value","SquareF","readOnlyVal","styleSettings","keyValue","defaultValue","onChange","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","row","col","undefined","indexOf","splice","checkRow","i","checkCol","valChangeHandler","j","event","board","deepCopy","state","target","Number","setState","solution","Array","fill","map","pencilMark","visited","puzzle","given","saved_board","cellCheck","buttonText","playButtonText","getSolution","getUniquePuzzle","console","log","nrows","ncols","rowOneSeed","keys","x","shuffleArray","length","validPencilMarks","randIndex","Math","floor","random","val","rn","push","pop","solvedPuzzle","location","locationArray","cntr","uniqueSolve","solutions","solveSudoku","numSolutions","pencilMarks","pM","obj","rv","toString","call","o","Object","reduce","prev","key","index","slice","backgroundColor","color","onCellCheckHandler","fontWeight","height","width","onPlayAgainHandler","onSeeSolutionsHandler","array","temp","displayCellForm","displayPlayAgainCell","displaySeeSolutionsCell","displayCellCheck","SudokuPuzzleGenerator"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction SquareB(props) {\n    return (\n      <button\n        style={props.style}\n        className=\"square\"\n        onClick={props.onClick}\n      >\n        {props.value}\n      </button>\n    );\n  }\n\n  function SquareF(props) {\n      return (\n          <input size=\"2\" maxLength=\"1\" readOnly={props.readOnlyVal}\n            type=\"text\"\n            placeholder=\"\"\n            style={props.styleSettings}\n            key={props.keyValue}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            onClick={props.onClick}\n          />\n    );\n  }\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        solution: Array(9).fill().map(() => new Array(9).fill({value:undefined,pencilMark:[],visited:[]})),\n        puzzle: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n        board: Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n        saved_board:Array(9).fill().map(() => new Array(9).fill({value:undefined,given:false})),\n        cellCheck: Array(9).fill(false).map(() => new Array(9).fill(false)),\n        buttonText:\"See Solution\",\n        playButtonText:\"Play\"\n      };\n  }\n\n  onPlayAgainHandler() {\n    var solution       = this.getSolution();\n    var puzzle         = this.getUniquePuzzle(solution);\n    var playButtonText = \"Play Again\";\n    var board          = this.deepCopy(puzzle);\n    var buttonText     = \"See Solution\";\n    var cellCheck      = Array(9).fill(false).map(() => new Array(9).fill(false));\n\n    this.setState({puzzle: puzzle, board: board, solution: solution, playButtonText: playButtonText, buttonText: buttonText, cellCheck: cellCheck}, function () {\n      console.log('in onPlayAgainHandler b',this.state.board);\n      console.log('in onPlayAgainHandler pu',this.state.puzzle);\n    });\n  }\n\n  getSolution(){//checked ok\n    var nrows = 9;\n    var ncols = 9;\n    var squares =new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      squares[i]=new Array(ncols)\n    }\n\n    for (var i=1;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         squares[i][j] = {value:undefined,pencilMark:[]};\n       }\n    }\n\n    const rowOneSeed = [...Array(9).keys()].map(x => ++x);\n    this.shuffleArray(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i] = {value:rowOneSeed[i],pencilMark:[]};\n    }\n\n    var numbers = [];\n\n    for(let r=1; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n          numbers = this.validPencilMarks(r,c,squares);\n\n          if(numbers.length!=0){\n              var randIndex = Math.floor(Math.random() * (numbers.length-1));\n\n              var val = numbers[randIndex];\n              squares[r][c].value = val;\n              numbers.splice(randIndex,1);\n\n              for(let rn=0; rn<numbers.length; rn++){\n                squares[r][c].pencilMark.push(numbers[rn]);\n              }\n\n          } else {\n            while(r!=0){\n              c--;\n              if(c<0){r--;c=ncols-1}\n              if(r<=0){break;}\n\n              if(squares[r][c].pencilMark.length!=0){\n                squares[r][c].value = squares[r][c].pencilMark.pop();\n                break;\n              } else {\n                squares[r][c].value = undefined;\n              }\n            }\n          }\n      }\n    }\n    return squares;\n  }\n\n  getUniquePuzzle(solvedPuzzle){\n    var nrows        = 9;\n    var ncols        = 9;\n    var location;\n\n    var puzzle       = new Array(nrows);\n\n    for (var i=0;i<nrows;i++) {\n      puzzle[i]=new Array(ncols)\n    }\n\n    for (var i=0;i<nrows;i++) {\n       for (var j=0;j<nrows;j++) {\n         puzzle[i][j] = {value:solvedPuzzle[i][j].value,given:true};\n       }\n    }\n\n    var locationArray = [[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,8],\n                         [1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],\n                         [2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],\n                         [3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],\n                         [4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],\n                         [5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],\n                         [6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],\n                         [7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],\n                         [8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8]];\n\n    this.shuffleArray(locationArray);\n\n    location = locationArray.pop();\n\n    var cntr=0;\n\n    while(locationArray.length != 0){\n      cntr++;\n      puzzle[location[0]][location[1]].value = undefined;\n      puzzle[location[0]][location[1]].given = false;\n      if(this.uniqueSolve(puzzle)==false){\n        puzzle[location[0]][location[1]].value = solvedPuzzle[location[0]][location[1]].value;\n        puzzle[location[0]][location[1]].given = true;\n      }\n      if(cntr==54){break;}\n      location = locationArray.pop();\n   }\n\n   return puzzle;\n  }\n\n  uniqueSolve(puzzle){\n    var solutions =[];\n    this.solveSudoku(0,0,solutions,puzzle);\n    var numSolutions = solutions.length;\n    //console.log(numSolutions);\n    if(numSolutions==0 || numSolutions>1){return false;}\n    else {return true;}\n  }\n\n  solveSudoku(row, col, solutions, board){\n    if(row>=9){\n      //solutions.push(this.deepCopy(board));\n      solutions.push(1);\n      return;\n    }\n\n    while(board[row][col].given == true){\n      col = col+1;\n      row = (col<=8)?row:row+1;\n      col = (col<=8)?col:0;\n      if(row==9){\n      //solutions.push(this.deepCopy(board));\n      solutions.push(1);\n      return;}\n    }\n\n    var pencilMarks = this.validPencilMarks(row,col,board);\n\n    var c = col+1;\n    var r = (c<=8)?row:row+1;\n        c = (c<=8)?c  :0;\n\n    for(let i=0; i<pencilMarks.length && solutions.length <=1; i++){\n      board[row][col].value = pencilMarks[i];\n      board[row][col].given = true;\n      this.solveSudoku(r,c,solutions,board);\n    }\n    board[row][col].value = undefined;\n    board[row][col].given = false;\n    return;\n  }\n\n  validPencilMarks(row,col,board){\n    var pM = [1,2,3,4,5,6,7,8,9];\n    pM = this.checkCell(row,col,pM,board);\n    pM = this.checkRow(row,col,pM,board);\n    pM = this.checkCol(row,col,pM,board);\n    return pM;\n  }\n\n  deepCopy(obj) {\n      var rv;\n      switch (typeof obj) {\n          case \"object\":\n              if (obj === null) {\n                  rv = null;\n              } else {\n                  switch (toString.call(obj)) {\n                      case \"[object Array]\":\n                          rv = obj.map(o => this.deepCopy(o));\n                          break;\n                      default:\n                          rv = Object.keys(obj).reduce((prev, key) => {\n                              prev[key] = this.deepCopy(obj[key]);\n                              return prev;\n                          }, {});\n                          break;\n                  }\n              }\n              break;\n          default:\n              rv = obj;\n              break;\n      }\n      return rv;\n  }\n\n  getStartIndex(index){\n    switch(index) {\n        case 0:\n        case 1:\n        case 2:\n            return 0;\n        case 3:\n        case 4:\n        case 5:\n            return 3;\n        case 6:\n        case 7:\n        case 8:\n            return 6;\n        default:\n            return 0;\n    }\n  }\n\n  checkCell = (r,c,numbers,squares) => {\n    var rowStart = this.getStartIndex(r);\n    var colStart = this.getStartIndex(c);\n\n    for(let row=rowStart; row<=rowStart+2; row++){\n      for(let col=colStart; col<=colStart+2; col++){\n        if(!(row == r && col == c)){\n          if(squares[row][col].value != undefined){\n            if(numbers.indexOf(squares[row][col].value)!=-1){\n             numbers.splice(numbers.indexOf(squares[row][col].value),1);\n            }\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  checkRow = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != c){\n        if(squares[r][i].value != undefined){\n          if(numbers.indexOf(squares[r][i].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[r][i].value),1);\n          }\n        }\n      }\n    }\n      return numbers;\n  }\n\n  checkCol = (r,c,numbers,squares) => {\n    for(let i=0; i<9; i++){\n      if(i != r){\n        if(squares[i][c].value != undefined){\n          if(numbers.indexOf(squares[i][c].value)!=-1){\n           numbers.splice(numbers.indexOf(squares[i][c].value),1);\n          }\n        }\n      }\n    }\n    return numbers;\n  }\n\n  onSeeSolutionsHandler(){\n    var buttonText = this.state.buttonText;\n    var cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n    var saved_board;\n    var board;\n\n    if(buttonText == \"See Solution\"){\n      buttonText  = \"Back To Puzzle\";\n      saved_board = this.deepCopy(this.state.board);\n      board       = this.deepCopy(this.state.solution);\n    } else {\n      buttonText  = \"See Solution\";\n      board       = this.deepCopy(this.state.saved_board);\n    }\n\n    this.setState({board: board, saved_board: saved_board, buttonText: buttonText, cellCheck: cellCheck}, function () {\n    console.log('in onSeeSolutionsHandler b',this.state.board);\n    console.log('in onSeeSolutionsHandler s',this.state.solution);\n      // console.log('in onSeeSolutionsHandler sb',this.state.saved_board);\n    });\n  }\n\n  onCellCheckHandler(){\n    var board      = this.deepCopy(this.state.board);\n    var solution   = this.deepCopy(this.state.solution);\n    var cellCheck  = this.state.cellCheck.slice();\n    var saved_board;\n    var board;\n\n    for (var i=0;i<board.length;i++) {\n       for (var j=0;j<board[0].length;j++) {\n         if(board[i][j].value != undefined){\n           if(board[i][j].value != solution[i][j].value){\n             cellCheck[i][j]=true;\n           }\n         }\n       }\n    }\n\n    this.setState({cellCheck: cellCheck}, function () {\n      // console.log('in onCellCheckHandler b',cellCheck);\n    });\n  }\n\n  valChangeHandler = (i,j,event) => {\n    const board  = this.deepCopy(this.state.board);\n\n    if(event.target.value){\n      board[i][j].value = Number(event.target.value);\n    } else {\n      board[i][j].value = undefined;\n    }\n    this.setState({board: board}, function () {\n      //console.log('in val b',this.state.board);\n    });\n  }\n\n  displayCellCheck() {\n    return (\n    <SquareB\n      //style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n      style={{backgroundColor:\"blue\"}, {color:\"red\"}}\n      className=\"square\"\n      onClick={() => this.onCellCheckHandler()}\n      value=\"How am I doing?\"\n    />\n  );\n  }\n//<div style={{ visibility: this.state.driverDetails.firstName != undefined? 'visible': 'hidden'}}></div>\n  displayCellForm(i,j) {\n    return (\n      <SquareF\n        readOnlyVal={this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false}\n        styleSettings={{ color: this.state.cellCheck[i][j]? \"red\" :\"black\",fontWeight: this.state.puzzle[i][j].given ? 'bold' : 'bold'}}\n        //styleSettings={ fontWeight: (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? 'bold' : 'normal',this.state.cellCheck[i][j]?color:red\" :\"black\"}}\n        //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'},this.state.cellCheck[i][j]? {color:\"red\"} :{color:\"black\"}}\n        //styleSettings={ (this.state.puzzle[i][j]?this.state.puzzle[i][j].given:false) ? {fontWeight: 'bold'} : {fontWeight: 'normal'}}\n        keyValue={this.state.board[i][j]?this.state.board[i][j].value+'['+i+']'+'['+j+']':undefined}\n        defaultValue={this.state.board[i][j]?this.state.board[i][j].value:\"\"}\n        onChange={(event) => this.valChangeHandler(i,j,event)}\n        onClick={ () => {const cellCheck =  Array(9).fill(false).map(() => new Array(9).fill(false));\n          this.setState({cellCheck: cellCheck})  }}\n      />\n    );\n  }\n\n  displayPlayAgainCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n        className=\"square\"\n        onClick={() => this.onPlayAgainHandler()}\n        value={this.state.playButtonText}\n      />\n    );\n  }\n\n  displaySeeSolutionsCell() {\n    return (\n      <SquareB\n        style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"140px\"}}\n        className=\"square\"\n        onClick={() => this.onSeeSolutionsHandler()}\n        value={this.state.buttonText}\n      />\n    );\n  }\n\n  shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCellForm(0,0)}\n        {this.displayCellForm(0,1)}\n        {this.displayCellForm(0,2)}\n        {this.displayCellForm(0,3)}\n        {this.displayCellForm(0,4)}\n        {this.displayCellForm(0,5)}\n        {this.displayCellForm(0,6)}\n        {this.displayCellForm(0,7)}\n        {this.displayCellForm(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(1,0)}\n        {this.displayCellForm(1,1)}\n        {this.displayCellForm(1,2)}\n        {this.displayCellForm(1,3)}\n        {this.displayCellForm(1,4)}\n        {this.displayCellForm(1,5)}\n        {this.displayCellForm(1,6)}\n        {this.displayCellForm(1,7)}\n        {this.displayCellForm(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(2,0)}\n        {this.displayCellForm(2,1)}\n        {this.displayCellForm(2,2)}\n        {this.displayCellForm(2,3)}\n        {this.displayCellForm(2,4)}\n        {this.displayCellForm(2,5)}\n        {this.displayCellForm(2,6)}\n        {this.displayCellForm(2,7)}\n        {this.displayCellForm(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(3,0)}\n        {this.displayCellForm(3,1)}\n        {this.displayCellForm(3,2)}\n        {this.displayCellForm(3,3)}\n        {this.displayCellForm(3,4)}\n        {this.displayCellForm(3,5)}\n        {this.displayCellForm(3,6)}\n        {this.displayCellForm(3,7)}\n        {this.displayCellForm(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(4,0)}\n        {this.displayCellForm(4,1)}\n        {this.displayCellForm(4,2)}\n        {this.displayCellForm(4,3)}\n        {this.displayCellForm(4,4)}\n        {this.displayCellForm(4,5)}\n        {this.displayCellForm(4,6)}\n        {this.displayCellForm(4,7)}\n        {this.displayCellForm(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(5,0)}\n        {this.displayCellForm(5,1)}\n        {this.displayCellForm(5,2)}\n        {this.displayCellForm(5,3)}\n        {this.displayCellForm(5,4)}\n        {this.displayCellForm(5,5)}\n        {this.displayCellForm(5,6)}\n        {this.displayCellForm(5,7)}\n        {this.displayCellForm(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(6,0)}\n        {this.displayCellForm(6,1)}\n        {this.displayCellForm(6,2)}\n        {this.displayCellForm(6,3)}\n        {this.displayCellForm(6,4)}\n        {this.displayCellForm(6,5)}\n        {this.displayCellForm(6,6)}\n        {this.displayCellForm(6,7)}\n        {this.displayCellForm(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(7,0)}\n        {this.displayCellForm(7,1)}\n        {this.displayCellForm(7,2)}\n        {this.displayCellForm(7,3)}\n        {this.displayCellForm(7,4)}\n        {this.displayCellForm(7,5)}\n        {this.displayCellForm(7,6)}\n        {this.displayCellForm(7,7)}\n        {this.displayCellForm(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCellForm(8,0)}\n        {this.displayCellForm(8,1)}\n        {this.displayCellForm(8,2)}\n        {this.displayCellForm(8,3)}\n        {this.displayCellForm(8,4)}\n        {this.displayCellForm(8,5)}\n        {this.displayCellForm(8,6)}\n        {this.displayCellForm(8,7)}\n        {this.displayCellForm(8,8)}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displaySeeSolutionsCell()}\n      </div>\n      <br></br>\n      <div className=\"board-row\">\n        {this.displayCellCheck()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass SudokuPuzzleGenerator extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Sudoku </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default SudokuPuzzleGenerator;\n"]},"metadata":{},"sourceType":"module"}