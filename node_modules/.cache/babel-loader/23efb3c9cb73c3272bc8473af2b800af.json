{"ast":null,"code":"import _toConsumableArray from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sp/Desktop/sw/react/tickingclock/game_center/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    style: {\n      backgroundColor: \"grey\",\n      color: \"white\",\n      height: \"40px\",\n      width: \"40px\"\n    },\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n\n    _this.checkCell = function (r, c, numbers, squares) {\n      //console.log(\"HII\");\n      var rowStart = _this.getStartIndex(r);\n\n      var colStart = _this.getStartIndex(c);\n\n      for (var _r = rowStart; _r <= rowStart + 2; _r++) {\n        for (var _c = colStart; _c <= colStart + 2; _c++) {\n          if (squares[_r][i] != \"\") {\n            //console.log(\"HII0\");\n            //console.log(squares[r][i]);\n            numbers = numbers.replace(squares[_r][i], ''); //console.log('rrrr',numbers);\n          }\n        }\n      }\n\n      for (var _i = 0; _i < 9; _i++) {\n        if (_i != c) {\n          if (squares[r][_i] != \"\") {\n            //console.log(\"HII0\");\n            //console.log(squares[r][i]);\n            numbers = numbers.replace(squares[r][_i], ''); //console.log('r',numbers);\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkRow = function (r, c, numbers, squares) {\n      //console.log(\"HII\");\n      for (var _i2 = 0; _i2 < 9; _i2++) {\n        if (_i2 != c) {\n          if (squares[r][_i2] != \"\") {\n            //console.log(\"HII0\");\n            //console.log(squares[r][i]);\n            numbers = numbers.replace(squares[r][_i2], ''); //console.log('r',numbers);\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.checkCol = function (r, c, numbers, squares) {\n      for (var _i3 = 0; _i3 < 9; _i3++) {\n        if (_i3 != r) {\n          if (squares[_i3][c] != \"\") {\n            //console.log(squares[i][c]);\n            numbers = numbers.replace(squares[_i3][c], ''); //console.log('rr',numbers);\n          }\n        }\n      }\n\n      return numbers;\n    };\n\n    _this.state = {\n      cellValues: [],\n      // cellValues: [\"blue\", \"yellow\", \"white\", \"pink\",\n      // \"yellow\",\"red\",\"white\",\"red\",\n      // \"purple\",\"blue\",\"purple\",\"pink\"],\n      squares: Array(81).fill(\"\"),\n      //squares: [],\n      guessOne: true,\n      guessTwo: false,\n      index1: false\n    };\n    return _this;\n  } //   onClickHandler(i) {\n  //   const squares = this.state.squares.slice();\n  //\n  //   if(this.state.guessOne){\n  //     squares[i] = this.state.cellValues[i];\n  //\n  //     this.setState({\n  //       squares: squares,\n  //       guessOne: false,\n  //       guessTwo: true,\n  //       index1: i,\n  //     });\n  //   } else if(this.state.guessTwo){\n  //       squares[i] = this.state.cellValues[i];\n  //\n  //       this.setState({\n  //         squares: squares,\n  //         guessOne: true,\n  //         guessTwo: false\n  //       },() => {\n  //         if (!this.isMatch(this.state.index1,i)){\n  //           this.flipCells(this.state.index1,i);\n  //         }\n  //     });\n  //\n  //   }\n  // }\n\n\n  _createClass(Board, [{\n    key: \"onPlayAgainHandler\",\n    value: function onPlayAgainHandler() {\n      //const squares = Array(81).fill(\"grey\");\n      var squares = [];\n      var nrows = 9;\n      var ncols = 9;\n\n      for (var i = 0; i < nrows; i++) {\n        squares[i] = Array(9).fill(\"\");\n      }\n\n      var cellValues = this.state.cellValues.slice();\n\n      var rowOneSeed = _toConsumableArray(Array(9).keys()); //console.log(rowOneSeed);\n\n\n      this.shuffleArray(rowOneSeed); //  console.log(rowOneSeed);\n      //this.shuffleArray(cellValues);\n      //squares.concat(rowOneSeed);\n\n      for (var _i4 = 0; _i4 < rowOneSeed.length; _i4++) {\n        squares[0][_i4] = rowOneSeed[_i4];\n      }\n\n      console.log(squares); //console.log(squares[0][0]);\n\n      this.setState({\n        squares: squares,\n        cellValues: cellValues\n      }); //var numbers = \"0123456789\";\n\n      for (var r = 1; r < nrows; r++) {\n        for (var c = 0; c < ncols; c++) {\n          var numbers = \"0123456789\";\n          console.log(numbers);\n          numbers = this.checkCell(r, c, numbers, squares);\n          numbers = this.checkRow(r, c, numbers, squares); //console.log(numbers);\n\n          numbers = this.checkCol(r, c, numbers, squares); //squares[r][i] = row1[i];\n\n          console.log('o', numbers);\n        }\n      }\n    }\n  }, {\n    key: \"getStartIndex\",\n    value: function getStartIndex(index) {\n      switch (index) {\n        case (0, 1, 2):\n          return 0;\n          break;\n\n        case (3, 4, 5):\n          return 3;\n          break;\n\n        case (6, 7, 9):\n          return 6;\n          break;\n\n        default:\n          return 0;\n      }\n    }\n  }, {\n    key: \"displayCell\",\n    value: function displayCell(i, j) {\n      return React.createElement(Square, {\n        value: this.state.squares[i][j] //onClick={() => this.onClickHandler(i)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"displayPlayAgainCell\",\n    value: function displayPlayAgainCell() {\n      var _this2 = this;\n\n      return React.createElement(\"button\", {\n        style: {\n          backgroundColor: \"blue\",\n          color: \"white\",\n          height: \"40px\",\n          width: \"100px\"\n        },\n        className: \"square\",\n        onClick: function onClick() {\n          return _this2.onPlayAgainHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Play Again\");\n    }\n  }, {\n    key: \"shuffleArray\",\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.displayCell(0, 0), this.displayCell(0, 1), this.displayCell(0, 2), this.displayCell(0, 3), this.displayCell(0, 4), this.displayCell(0, 5), this.displayCell(0, 6), this.displayCell(0, 7), this.displayCell(0, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, this.displayCell(1, 0), this.displayCell(1, 1), this.displayCell(1, 2), this.displayCell(1, 3), this.displayCell(1, 4), this.displayCell(1, 5), this.displayCell(1, 6), this.displayCell(1, 7), this.displayCell(1, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, this.displayCell(2, 0), this.displayCell(2, 1), this.displayCell(2, 2), this.displayCell(2, 3), this.displayCell(2, 4), this.displayCell(2, 5), this.displayCell(2, 6), this.displayCell(2, 7), this.displayCell(2, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.displayCell(3, 0), this.displayCell(3, 1), this.displayCell(3, 2), this.displayCell(3, 3), this.displayCell(3, 4), this.displayCell(3, 5), this.displayCell(3, 6), this.displayCell(3, 7), this.displayCell(3, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.displayCell(4, 0), this.displayCell(4, 1), this.displayCell(4, 2), this.displayCell(4, 3), this.displayCell(4, 4), this.displayCell(4, 5), this.displayCell(4, 6), this.displayCell(4, 7), this.displayCell(4, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.displayCell(5, 0), this.displayCell(5, 1), this.displayCell(5, 2), this.displayCell(5, 3), this.displayCell(5, 4), this.displayCell(5, 5), this.displayCell(5, 6), this.displayCell(5, 7), this.displayCell(5, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, this.displayCell(6, 0), this.displayCell(6, 1), this.displayCell(6, 2), this.displayCell(6, 3), this.displayCell(6, 4), this.displayCell(6, 5), this.displayCell(6, 6), this.displayCell(6, 7), this.displayCell(6, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, this.displayCell(7, 0), this.displayCell(7, 1), this.displayCell(7, 2), this.displayCell(7, 3), this.displayCell(7, 4), this.displayCell(7, 5), this.displayCell(7, 6), this.displayCell(7, 7), this.displayCell(7, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, this.displayCell(8, 0), this.displayCell(8, 1), this.displayCell(8, 2), this.displayCell(8, 3), this.displayCell(8, 4), this.displayCell(8, 5), this.displayCell(8, 6), this.displayCell(8, 7), this.displayCell(8, 8)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, this.displayPlayAgainCell()));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \" Memory Game \"), React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/sp/Desktop/sw/react/tickingclock/game_center/src/App.js"],"names":["React","Component","Square","props","backgroundColor","color","height","width","onClick","value","Board","checkCell","r","c","numbers","squares","rowStart","getStartIndex","colStart","i","replace","checkRow","checkCol","state","cellValues","Array","fill","guessOne","guessTwo","index1","nrows","ncols","slice","rowOneSeed","keys","shuffleArray","length","console","log","setState","index","j","onPlayAgainHandler","array","Math","floor","random","temp","displayCell","displayPlayAgainCell","Game"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Square(props) {\n  return (\n    <button\n      style={{backgroundColor:\"grey\", color:\"white\", height:\"40px\", width:\"40px\"}}\n      className=\"square\"\n      onClick={props.onClick}\n    >{props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n      cellValues: [],\n      // cellValues: [\"blue\", \"yellow\", \"white\", \"pink\",\n      // \"yellow\",\"red\",\"white\",\"red\",\n      // \"purple\",\"blue\",\"purple\",\"pink\"],\n      squares: Array(81).fill(\"\"),\n      //squares: [],\n      guessOne: true,\n      guessTwo: false,\n      index1: false,\n      };\n  }\n\n//   onClickHandler(i) {\n//   const squares = this.state.squares.slice();\n//\n//   if(this.state.guessOne){\n//     squares[i] = this.state.cellValues[i];\n//\n//     this.setState({\n//       squares: squares,\n//       guessOne: false,\n//       guessTwo: true,\n//       index1: i,\n//     });\n//   } else if(this.state.guessTwo){\n//       squares[i] = this.state.cellValues[i];\n//\n//       this.setState({\n//         squares: squares,\n//         guessOne: true,\n//         guessTwo: false\n//       },() => {\n//         if (!this.isMatch(this.state.index1,i)){\n//           this.flipCells(this.state.index1,i);\n//         }\n//     });\n//\n//   }\n// }\n\n\nonPlayAgainHandler() {\n  //const squares = Array(81).fill(\"grey\");\n  var squares = [];\n  var nrows = 9;\n  var ncols = 9;\n\n  for (var i=0;i<nrows;i++) {\n     squares[i] = Array(9).fill(\"\");\n  }\n\n    const cellValues = this.state.cellValues.slice();\n    const rowOneSeed = [...Array(9).keys()];\n    //console.log(rowOneSeed);\n    this.shuffleArray(rowOneSeed);\n  //  console.log(rowOneSeed);\n    //this.shuffleArray(cellValues);\n    //squares.concat(rowOneSeed);\n    for(let i=0; i<rowOneSeed.length; i++){\n        squares[0][i] = rowOneSeed[i];\n    }\n    console.log(squares);\n    //console.log(squares[0][0]);\n    this.setState({squares: squares, cellValues: cellValues});\n\n\n\n    //var numbers = \"0123456789\";\n\n    for(let r=1; r<nrows; r++){\n      for(let c=0; c<ncols; c++){\n        var numbers = \"0123456789\";\n        console.log(numbers);\n        numbers = this.checkCell(r,c,numbers,squares);\n        numbers = this.checkRow(r,c,numbers,squares);\n        //console.log(numbers);\n        numbers = this.checkCol(r,c,numbers,squares);\n        //squares[r][i] = row1[i];\n        console.log('o',numbers);\n      }\n    }\n\n}\n\ngetStartIndex(index){\n  switch(index) {\n      case 0,1,2:\n          return 0;\n          break;\n      case 3,4,5:\n          return 3;\n          break;\n      case 6,7,9:\n          return 6;\n          break;\n      default:\n          return 0;\n  }\n}\n\n\n\ncheckCell = (r,c,numbers,squares) => {\n//console.log(\"HII\");\n\n  var rowStart = this.getStartIndex(r);\n  var colStart = this.getStartIndex(c);\n\n  for(let r=rowStart; r<=rowStart+2; r++){\n    for(let c=colStart; c<=colStart+2; c++){\n      if(squares[r][i] != \"\"){\n        //console.log(\"HII0\");\n        //console.log(squares[r][i]);\n        numbers = numbers.replace(squares[r][i],'');\n        //console.log('rrrr',numbers);\n      }\n    }\n  }\n\n  for(let i=0; i<9; i++){\n\n    if(i != c){\n      if(squares[r][i] != \"\"){\n        //console.log(\"HII0\");\n        //console.log(squares[r][i]);\n        numbers = numbers.replace(squares[r][i],'');\n        //console.log('r',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\ncheckRow = (r,c,numbers,squares) => {\n//console.log(\"HII\");\n  for(let i=0; i<9; i++){\n\n    if(i != c){\n      if(squares[r][i] != \"\"){\n        //console.log(\"HII0\");\n        //console.log(squares[r][i]);\n        numbers = numbers.replace(squares[r][i],'');\n        //console.log('r',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\n\n\ncheckCol = (r,c,numbers,squares) => {\n\n  for(let i=0; i<9; i++){\n\n    if(i != r){\n      if(squares[i][c] != \"\"){\n        //console.log(squares[i][c]);\n        numbers = numbers.replace(squares[i][c],'');\n        //console.log('rr',numbers);\n      }\n    }\n  }\n    return numbers;\n}\n\ndisplayCell(i,j) {\n  return (\n    <Square\n      value={this.state.squares[i][j]}\n      //onClick={() => this.onClickHandler(i)}\n    />\n  );\n}\n\ndisplayPlayAgainCell() {\n  return (\n    <button\n    style={{backgroundColor:\"blue\", color:\"white\", height:\"40px\", width:\"100px\"}}\n      className=\"square\"\n      onClick={() => this.onPlayAgainHandler()}\n    >\n      Play Again\n    </button>\n  );\n}\n\nshuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n  }\n}\nrender() {\n  return (\n    <div>\n      <div className=\"board-row\">\n        {this.displayCell(0,0)}\n        {this.displayCell(0,1)}\n        {this.displayCell(0,2)}\n        {this.displayCell(0,3)}\n        {this.displayCell(0,4)}\n        {this.displayCell(0,5)}\n        {this.displayCell(0,6)}\n        {this.displayCell(0,7)}\n        {this.displayCell(0,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(1,0)}\n        {this.displayCell(1,1)}\n        {this.displayCell(1,2)}\n        {this.displayCell(1,3)}\n        {this.displayCell(1,4)}\n        {this.displayCell(1,5)}\n        {this.displayCell(1,6)}\n        {this.displayCell(1,7)}\n        {this.displayCell(1,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(2,0)}\n        {this.displayCell(2,1)}\n        {this.displayCell(2,2)}\n        {this.displayCell(2,3)}\n        {this.displayCell(2,4)}\n        {this.displayCell(2,5)}\n        {this.displayCell(2,6)}\n        {this.displayCell(2,7)}\n        {this.displayCell(2,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(3,0)}\n        {this.displayCell(3,1)}\n        {this.displayCell(3,2)}\n        {this.displayCell(3,3)}\n        {this.displayCell(3,4)}\n        {this.displayCell(3,5)}\n        {this.displayCell(3,6)}\n        {this.displayCell(3,7)}\n        {this.displayCell(3,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(4,0)}\n        {this.displayCell(4,1)}\n        {this.displayCell(4,2)}\n        {this.displayCell(4,3)}\n        {this.displayCell(4,4)}\n        {this.displayCell(4,5)}\n        {this.displayCell(4,6)}\n        {this.displayCell(4,7)}\n        {this.displayCell(4,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(5,0)}\n        {this.displayCell(5,1)}\n        {this.displayCell(5,2)}\n        {this.displayCell(5,3)}\n        {this.displayCell(5,4)}\n        {this.displayCell(5,5)}\n        {this.displayCell(5,6)}\n        {this.displayCell(5,7)}\n        {this.displayCell(5,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(6,0)}\n        {this.displayCell(6,1)}\n        {this.displayCell(6,2)}\n        {this.displayCell(6,3)}\n        {this.displayCell(6,4)}\n        {this.displayCell(6,5)}\n        {this.displayCell(6,6)}\n        {this.displayCell(6,7)}\n        {this.displayCell(6,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(7,0)}\n        {this.displayCell(7,1)}\n        {this.displayCell(7,2)}\n        {this.displayCell(7,3)}\n        {this.displayCell(7,4)}\n        {this.displayCell(7,5)}\n        {this.displayCell(7,6)}\n        {this.displayCell(7,7)}\n        {this.displayCell(7,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayCell(8,0)}\n        {this.displayCell(8,1)}\n        {this.displayCell(8,2)}\n        {this.displayCell(8,3)}\n        {this.displayCell(8,4)}\n        {this.displayCell(8,5)}\n        {this.displayCell(8,6)}\n        {this.displayCell(8,7)}\n        {this.displayCell(8,8)}\n      </div>\n      <div className=\"board-row\">\n        {this.displayPlayAgainCell()}\n      </div>\n    </div>\n  );\n}\n}\n\nclass Game extends React.Component {\nrender() {\n  return (\n      <div>\n      <h1> Memory Game </h1>\n        <Board />\n      </div>\n  );\n}\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}